N: 8 "contr_aut_hprop" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 9 "contr_equiv_contr_contr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 20 "contr_map_isequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 16 "contr_retr_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 17 "contr_sect_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 14 "equiv_contr_map_isequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 3 "equiv_equiv_inverse" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 5 "equiv_functor_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 13 "equiv_path_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 1 "equiv_total_iff_equiv_fiberwise" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 7 "functor_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 15 "hprop_isequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 19 "isequiv_contr_map" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 4 "isequiv_equiv_inverse" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 2 "isequiv_from_functor_sigma" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 6 "isequiv_functor_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 18 "isequiv_inhab_codomain" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 11 "isequiv_path_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 10 "istrunc_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 12 "path_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
E: 1 2 [weight=1, ];
E: 2 19 [weight=1, ];
E: 2 20 [weight=1, ];
E: 3 4 [weight=1, ];
E: 4 12 [weight=2, ];
E: 5 6 [weight=1, ];
E: 5 7 [weight=1, ];
E: 6 7 [weight=23, ];
E: 6 12 [weight=2, ];
E: 8 12 [weight=1, ];
E: 9 12 [weight=1, ];
E: 10 13 [weight=1, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=1, ];
E: 12 13 [weight=1, ];
E: 13 15 [weight=1, ];
E: 14 15 [weight=1, ];
E: 14 19 [weight=1, ];
E: 14 20 [weight=1, ];
E: 15 17 [weight=4, ];
E: 16 20 [weight=1, ];
E: 17 20 [weight=1, ];
E: 18 19 [weight=1, ];
E: 18 20 [weight=1, ];
