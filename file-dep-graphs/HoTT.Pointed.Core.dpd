N: 82 "Build_pHomotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 88 "Build_pMap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 98 "IsTrunc_pFam" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 100 "dpoint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 89 "dpoint_eq" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 50 "equiv_inverse_path_pforall_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 37 "equiv_path_pequiv" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 54 "equiv_path_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 48 "equiv_path_pmap_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 40 "equiv_path_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 2 "equiv_pointify_map" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 12 "hasequivs_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 13 "hasmorext_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 16 "is01cat_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 20 "is01cat_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 6 "is0functor_pointed_type" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 3 "is0functor_pointify" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 15 "is0gpd_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 8 "is1cat_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 14 "is1cat_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 5 "is1functor_pointed_type" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 7 "is1gpd_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 17 "is2graph_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 18 "is2graph_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 19 "isgraph_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 21 "isgraph_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 103 "ispointed_prod" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 104 "ispointed_sigma" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 106 "ispointed_unit" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 10 "ispointedcat_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 64 "issig_pequiv" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 63 "issig_pequiv'" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 67 "issig_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 65 "issig_phomotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 66 "issig_pmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 68 "issig_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 11 "isunivalent_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 1 "natequiv_pointify_r" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 76 "pEquiv_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 75 "pEquiv_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 77 "pEquiv_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 74 "pEquiv_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 102 "pFam" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 93 "pForall_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 92 "pForall_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 94 "pForall_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 91 "pForall_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 83 "pHomotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 105 "pUnit" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 51 "path_equiv_path_pforall_phomotopy_path" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 36 "path_pequiv" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 53 "path_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 49 "path_pforall_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 39 "path_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 9 "path_zero_morphism_pconst" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 24 "pconst" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 41 "peisretr" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 42 "peissect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 43 "pequiv_inverse" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 38 "pequiv_path" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 99 "pfam_const" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 84 "pfam_phomotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 101 "pfam_pr1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 27 "phomotopy_compose_1p" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 25 "phomotopy_compose_Vp" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 29 "phomotopy_compose_assoc" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 28 "phomotopy_compose_p1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 26 "phomotopy_compose_pV" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 47 "phomotopy_ind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 46 "phomotopy_ind'" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 45 "phomotopy_ind_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 44 "phomotopy_ind_1'" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 52 "phomotopy_path" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 31 "phomotopy_postwhisker" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 30 "phomotopy_prewhisker" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 62 "phomotopy_reflexive" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 61 "phomotopy_symmetric" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 60 "phomotopy_transitive" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 85 "pmap_compose" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 57 "pmap_compose_assoc" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 86 "pmap_idmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 55 "pmap_postcompose_idmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 59 "pmap_postwhisker" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 56 "pmap_precompose_idmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 58 "pmap_prewhisker" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 23 "pmap_punit_pconst" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 87 "point_eq" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 80 "point_htpy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 34 "point_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 71 "pointed_equiv_equiv" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 73 "pointed_equiv_fun" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 35 "pointed_fam" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 90 "pointed_fun" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 81 "pointed_htpy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 72 "pointed_isequiv" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 4 "pointify" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 33 "ppForall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 32 "ppMap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 69 "pproduct" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 70 "psigma" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 22 "punit_pmap_pconst" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 97 "trunc_pfam_is_trunc" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 79 "pEquiv" [kind=inductive, prop=no, path="Core", ];
N: 96 "pForall" [kind=inductive, prop=no, path="Core", ];
N: 78 "Build_pEquiv" [kind=construct, prop=no, path="Core", ];
N: 95 "Build_pForall" [kind=construct, prop=no, path="Core", ];
E: 1 2 [weight=2, ];
E: 1 4 [weight=7, ];
E: 1 6 [weight=3, ];
E: 1 20 [weight=3, ];
E: 1 21 [weight=13, ];
E: 1 96 [weight=2, ];
E: 2 4 [weight=97, ];
E: 2 54 [weight=1, ];
E: 2 82 [weight=1, ];
E: 2 88 [weight=5, ];
E: 2 95 [weight=29, ];
E: 2 96 [weight=23, ];
E: 2 99 [weight=38, ];
E: 2 100 [weight=3, ];
E: 2 101 [weight=13, ];
E: 3 4 [weight=7, ];
E: 3 21 [weight=2, ];
E: 3 88 [weight=1, ];
E: 5 6 [weight=4, ];
E: 5 14 [weight=4, ];
E: 5 18 [weight=3, ];
E: 5 20 [weight=2, ];
E: 5 21 [weight=8, ];
E: 6 21 [weight=3, ];
E: 7 8 [weight=2, ];
E: 7 15 [weight=2, ];
E: 7 16 [weight=2, ];
E: 7 17 [weight=2, ];
E: 7 19 [weight=4, ];
E: 7 25 [weight=1, ];
E: 7 26 [weight=1, ];
E: 7 96 [weight=6, ];
E: 7 102 [weight=2, ];
E: 8 15 [weight=2, ];
E: 8 16 [weight=10, ];
E: 8 17 [weight=9, ];
E: 8 19 [weight=27, ];
E: 8 27 [weight=1, ];
E: 8 28 [weight=1, ];
E: 8 29 [weight=1, ];
E: 8 30 [weight=1, ];
E: 8 31 [weight=1, ];
E: 8 84 [weight=4, ];
E: 8 96 [weight=29, ];
E: 8 102 [weight=2, ];
E: 9 10 [weight=1, ];
E: 9 14 [weight=1, ];
E: 9 18 [weight=1, ];
E: 9 20 [weight=1, ];
E: 9 21 [weight=1, ];
E: 9 24 [weight=2, ];
E: 9 96 [weight=2, ];
E: 9 99 [weight=2, ];
E: 10 14 [weight=8, ];
E: 10 18 [weight=6, ];
E: 10 20 [weight=4, ];
E: 10 21 [weight=14, ];
E: 10 22 [weight=1, ];
E: 10 23 [weight=1, ];
E: 10 24 [weight=2, ];
E: 10 105 [weight=19, ];
E: 11 12 [weight=15, ];
E: 11 14 [weight=15, ];
E: 11 18 [weight=15, ];
E: 11 20 [weight=15, ];
E: 11 21 [weight=15, ];
E: 11 36 [weight=1, ];
E: 11 40 [weight=11, ];
E: 11 79 [weight=14, ];
E: 11 82 [weight=1, ];
E: 11 99 [weight=10, ];
E: 11 100 [weight=2, ];
E: 11 101 [weight=7, ];
E: 12 14 [weight=12, ];
E: 12 18 [weight=7, ];
E: 12 20 [weight=10, ];
E: 12 21 [weight=31, ];
E: 12 41 [weight=1, ];
E: 12 42 [weight=1, ];
E: 12 43 [weight=4, ];
E: 12 62 [weight=1, ];
E: 12 78 [weight=2, ];
E: 12 79 [weight=14, ];
E: 12 83 [weight=3, ];
E: 12 85 [weight=3, ];
E: 12 86 [weight=3, ];
E: 12 96 [weight=1, ];
E: 12 99 [weight=5, ];
E: 13 14 [weight=10, ];
E: 13 18 [weight=6, ];
E: 13 20 [weight=2, ];
E: 13 21 [weight=12, ];
E: 13 54 [weight=4, ];
E: 13 83 [weight=8, ];
E: 13 96 [weight=10, ];
E: 13 99 [weight=22, ];
E: 14 15 [weight=1, ];
E: 14 16 [weight=1, ];
E: 14 18 [weight=10, ];
E: 14 20 [weight=8, ];
E: 14 21 [weight=31, ];
E: 14 55 [weight=1, ];
E: 14 56 [weight=1, ];
E: 14 57 [weight=1, ];
E: 14 58 [weight=1, ];
E: 14 59 [weight=1, ];
E: 14 99 [weight=2, ];
E: 15 16 [weight=2, ];
E: 15 19 [weight=3, ];
E: 15 61 [weight=1, ];
E: 15 96 [weight=4, ];
E: 15 102 [weight=2, ];
E: 16 19 [weight=4, ];
E: 16 60 [weight=1, ];
E: 16 62 [weight=1, ];
E: 16 96 [weight=5, ];
E: 16 102 [weight=2, ];
E: 17 19 [weight=2, ];
E: 17 84 [weight=1, ];
E: 17 96 [weight=3, ];
E: 17 102 [weight=2, ];
E: 18 19 [weight=1, ];
E: 18 21 [weight=1, ];
E: 18 99 [weight=1, ];
E: 19 83 [weight=1, ];
E: 19 96 [weight=2, ];
E: 19 102 [weight=2, ];
E: 20 21 [weight=2, ];
E: 20 85 [weight=1, ];
E: 20 86 [weight=1, ];
E: 21 96 [weight=1, ];
E: 21 99 [weight=1, ];
E: 22 24 [weight=12, ];
E: 22 82 [weight=1, ];
E: 22 83 [weight=1, ];
E: 22 87 [weight=4, ];
E: 22 96 [weight=2, ];
E: 22 99 [weight=17, ];
E: 22 101 [weight=13, ];
E: 22 105 [weight=98, ];
E: 23 24 [weight=9, ];
E: 23 82 [weight=1, ];
E: 23 83 [weight=1, ];
E: 23 96 [weight=2, ];
E: 23 99 [weight=12, ];
E: 23 100 [weight=2, ];
E: 23 101 [weight=6, ];
E: 23 105 [weight=21, ];
E: 24 34 [weight=1, ];
E: 24 96 [weight=1, ];
E: 24 99 [weight=1, ];
E: 25 47 [weight=1, ];
E: 25 60 [weight=14, ];
E: 25 61 [weight=14, ];
E: 25 62 [weight=25, ];
E: 25 82 [weight=1, ];
E: 25 83 [weight=13, ];
E: 25 84 [weight=20, ];
E: 25 95 [weight=171, ];
E: 25 96 [weight=16, ];
E: 25 100 [weight=59, ];
E: 25 101 [weight=99, ];
E: 25 102 [weight=3, ];
E: 26 47 [weight=1, ];
E: 26 60 [weight=14, ];
E: 26 61 [weight=14, ];
E: 26 62 [weight=25, ];
E: 26 82 [weight=1, ];
E: 26 83 [weight=13, ];
E: 26 84 [weight=20, ];
E: 26 95 [weight=171, ];
E: 26 96 [weight=16, ];
E: 26 100 [weight=59, ];
E: 26 101 [weight=99, ];
E: 26 102 [weight=3, ];
E: 27 60 [weight=10, ];
E: 27 62 [weight=10, ];
E: 27 82 [weight=1, ];
E: 27 83 [weight=17, ];
E: 27 84 [weight=24, ];
E: 27 95 [weight=162, ];
E: 27 96 [weight=18, ];
E: 27 100 [weight=46, ];
E: 27 101 [weight=75, ];
E: 27 102 [weight=3, ];
E: 28 60 [weight=10, ];
E: 28 62 [weight=10, ];
E: 28 82 [weight=1, ];
E: 28 83 [weight=17, ];
E: 28 84 [weight=24, ];
E: 28 95 [weight=162, ];
E: 28 96 [weight=18, ];
E: 28 100 [weight=46, ];
E: 28 101 [weight=75, ];
E: 28 102 [weight=3, ];
E: 29 47 [weight=3, ];
E: 29 60 [weight=78, ];
E: 29 62 [weight=30, ];
E: 29 82 [weight=1, ];
E: 29 83 [weight=46, ];
E: 29 84 [weight=27, ];
E: 29 95 [weight=453, ];
E: 29 96 [weight=49, ];
E: 29 100 [weight=161, ];
E: 29 101 [weight=227, ];
E: 29 102 [weight=3, ];
E: 30 47 [weight=3, ];
E: 30 60 [weight=39, ];
E: 30 62 [weight=25, ];
E: 30 82 [weight=1, ];
E: 30 83 [weight=43, ];
E: 30 84 [weight=50, ];
E: 30 95 [weight=247, ];
E: 30 96 [weight=42, ];
E: 30 100 [weight=91, ];
E: 30 101 [weight=137, ];
E: 30 102 [weight=3, ];
E: 31 47 [weight=3, ];
E: 31 60 [weight=39, ];
E: 31 62 [weight=25, ];
E: 31 82 [weight=1, ];
E: 31 83 [weight=43, ];
E: 31 84 [weight=50, ];
E: 31 95 [weight=247, ];
E: 31 96 [weight=42, ];
E: 31 100 [weight=91, ];
E: 31 101 [weight=137, ];
E: 31 102 [weight=3, ];
E: 32 33 [weight=1, ];
E: 33 34 [weight=1, ];
E: 33 35 [weight=1, ];
E: 33 96 [weight=1, ];
E: 34 35 [weight=3, ];
E: 34 95 [weight=1, ];
E: 34 96 [weight=1, ];
E: 34 101 [weight=1, ];
E: 35 102 [weight=1, ];
E: 36 37 [weight=1, ];
E: 36 79 [weight=5, ];
E: 36 83 [weight=2, ];
E: 36 99 [weight=2, ];
E: 37 54 [weight=1, ];
E: 37 64 [weight=11, ];
E: 37 79 [weight=9, ];
E: 37 83 [weight=3, ];
E: 37 96 [weight=14, ];
E: 37 99 [weight=18, ];
E: 38 68 [weight=9, ];
E: 38 78 [weight=1, ];
E: 38 79 [weight=1, ];
E: 38 88 [weight=1, ];
E: 39 40 [weight=1, ];
E: 39 79 [weight=1, ];
E: 40 63 [weight=1, ];
E: 40 68 [weight=4, ];
E: 40 79 [weight=5, ];
E: 41 43 [weight=8, ];
E: 41 78 [weight=15, ];
E: 41 79 [weight=4, ];
E: 41 82 [weight=1, ];
E: 41 83 [weight=1, ];
E: 41 85 [weight=8, ];
E: 41 86 [weight=10, ];
E: 41 87 [weight=2, ];
E: 41 95 [weight=16, ];
E: 41 96 [weight=1, ];
E: 41 99 [weight=32, ];
E: 41 100 [weight=5, ];
E: 41 101 [weight=8, ];
E: 42 43 [weight=5, ];
E: 42 78 [weight=19, ];
E: 42 79 [weight=4, ];
E: 42 82 [weight=1, ];
E: 42 83 [weight=1, ];
E: 42 85 [weight=5, ];
E: 42 86 [weight=6, ];
E: 42 87 [weight=8, ];
E: 42 95 [weight=20, ];
E: 42 96 [weight=1, ];
E: 42 99 [weight=31, ];
E: 42 100 [weight=3, ];
E: 42 101 [weight=5, ];
E: 43 78 [weight=1, ];
E: 43 79 [weight=3, ];
E: 43 87 [weight=1, ];
E: 43 88 [weight=1, ];
E: 44 45 [weight=1, ];
E: 44 46 [weight=1, ];
E: 44 49 [weight=2, ];
E: 44 53 [weight=4, ];
E: 44 54 [weight=4, ];
E: 44 62 [weight=13, ];
E: 44 83 [weight=16, ];
E: 44 96 [weight=31, ];
E: 44 102 [weight=2, ];
E: 45 47 [weight=1, ];
E: 45 54 [weight=3, ];
E: 45 62 [weight=4, ];
E: 45 83 [weight=12, ];
E: 45 96 [weight=18, ];
E: 45 102 [weight=2, ];
E: 46 47 [weight=1, ];
E: 46 49 [weight=1, ];
E: 46 53 [weight=5, ];
E: 46 54 [weight=2, ];
E: 46 62 [weight=5, ];
E: 46 83 [weight=10, ];
E: 46 96 [weight=27, ];
E: 46 102 [weight=2, ];
E: 47 54 [weight=3, ];
E: 47 62 [weight=2, ];
E: 47 83 [weight=10, ];
E: 47 96 [weight=16, ];
E: 47 102 [weight=2, ];
E: 48 49 [weight=1, ];
E: 48 53 [weight=1, ];
E: 48 62 [weight=1, ];
E: 48 83 [weight=1, ];
E: 48 96 [weight=5, ];
E: 48 99 [weight=9, ];
E: 49 50 [weight=1, ];
E: 49 54 [weight=4, ];
E: 49 62 [weight=3, ];
E: 49 83 [weight=6, ];
E: 49 96 [weight=11, ];
E: 49 102 [weight=2, ];
E: 50 54 [weight=2, ];
E: 50 62 [weight=1, ];
E: 50 83 [weight=5, ];
E: 50 96 [weight=7, ];
E: 50 102 [weight=2, ];
E: 51 52 [weight=4, ];
E: 51 54 [weight=5, ];
E: 51 83 [weight=10, ];
E: 51 96 [weight=17, ];
E: 51 102 [weight=2, ];
E: 52 62 [weight=1, ];
E: 52 83 [weight=2, ];
E: 52 96 [weight=7, ];
E: 52 102 [weight=2, ];
E: 53 54 [weight=1, ];
E: 53 83 [weight=1, ];
E: 53 96 [weight=5, ];
E: 53 102 [weight=2, ];
E: 54 65 [weight=1, ];
E: 54 67 [weight=23, ];
E: 54 83 [weight=3, ];
E: 54 96 [weight=9, ];
E: 54 100 [weight=84, ];
E: 54 101 [weight=195, ];
E: 54 102 [weight=2, ];
E: 55 82 [weight=1, ];
E: 55 83 [weight=1, ];
E: 55 85 [weight=9, ];
E: 55 86 [weight=9, ];
E: 55 87 [weight=5, ];
E: 55 96 [weight=2, ];
E: 55 99 [weight=14, ];
E: 55 100 [weight=5, ];
E: 55 101 [weight=5, ];
E: 56 82 [weight=1, ];
E: 56 83 [weight=1, ];
E: 56 85 [weight=5, ];
E: 56 86 [weight=5, ];
E: 56 96 [weight=2, ];
E: 56 99 [weight=10, ];
E: 56 100 [weight=3, ];
E: 56 101 [weight=3, ];
E: 57 82 [weight=1, ];
E: 57 83 [weight=1, ];
E: 57 85 [weight=26, ];
E: 57 87 [weight=18, ];
E: 57 95 [weight=43, ];
E: 57 96 [weight=15, ];
E: 57 99 [weight=74, ];
E: 57 100 [weight=5, ];
E: 57 101 [weight=9, ];
E: 58 80 [weight=1, ];
E: 58 82 [weight=1, ];
E: 58 83 [weight=3, ];
E: 58 85 [weight=15, ];
E: 58 87 [weight=29, ];
E: 58 96 [weight=6, ];
E: 58 99 [weight=35, ];
E: 58 100 [weight=10, ];
E: 58 101 [weight=14, ];
E: 59 82 [weight=1, ];
E: 59 83 [weight=3, ];
E: 59 84 [weight=3, ];
E: 59 85 [weight=15, ];
E: 59 87 [weight=47, ];
E: 59 96 [weight=6, ];
E: 59 99 [weight=79, ];
E: 59 100 [weight=37, ];
E: 59 101 [weight=32, ];
E: 60 82 [weight=1, ];
E: 60 83 [weight=4, ];
E: 60 84 [weight=8, ];
E: 60 96 [weight=5, ];
E: 60 100 [weight=24, ];
E: 60 101 [weight=23, ];
E: 60 102 [weight=2, ];
E: 61 82 [weight=1, ];
E: 61 83 [weight=3, ];
E: 61 84 [weight=2, ];
E: 61 96 [weight=4, ];
E: 61 100 [weight=7, ];
E: 61 101 [weight=16, ];
E: 61 102 [weight=2, ];
E: 62 82 [weight=1, ];
E: 62 83 [weight=1, ];
E: 62 96 [weight=2, ];
E: 62 100 [weight=3, ];
E: 62 101 [weight=6, ];
E: 62 102 [weight=2, ];
E: 63 78 [weight=4, ];
E: 63 79 [weight=19, ];
E: 63 95 [weight=45, ];
E: 63 96 [weight=10, ];
E: 63 99 [weight=91, ];
E: 63 100 [weight=10, ];
E: 63 101 [weight=26, ];
E: 64 78 [weight=8, ];
E: 64 79 [weight=12, ];
E: 64 96 [weight=39, ];
E: 64 99 [weight=39, ];
E: 65 83 [weight=12, ];
E: 65 84 [weight=17, ];
E: 65 95 [weight=8, ];
E: 65 96 [weight=4, ];
E: 65 100 [weight=39, ];
E: 65 101 [weight=96, ];
E: 65 102 [weight=2, ];
E: 66 95 [weight=8, ];
E: 66 96 [weight=12, ];
E: 66 99 [weight=29, ];
E: 66 100 [weight=3, ];
E: 66 101 [weight=6, ];
E: 67 95 [weight=8, ];
E: 67 96 [weight=12, ];
E: 67 100 [weight=21, ];
E: 67 101 [weight=60, ];
E: 67 102 [weight=2, ];
E: 70 101 [weight=1, ];
E: 70 102 [weight=2, ];
E: 71 79 [weight=2, ];
E: 72 79 [weight=2, ];
E: 73 79 [weight=2, ];
E: 73 96 [weight=1, ];
E: 73 99 [weight=1, ];
E: 74 78 [weight=2, ];
E: 74 79 [weight=4, ];
E: 74 96 [weight=2, ];
E: 74 99 [weight=2, ];
E: 75 77 [weight=1, ];
E: 75 78 [weight=1, ];
E: 75 79 [weight=3, ];
E: 75 96 [weight=1, ];
E: 75 99 [weight=1, ];
E: 76 78 [weight=2, ];
E: 76 79 [weight=4, ];
E: 76 96 [weight=2, ];
E: 76 99 [weight=2, ];
E: 77 78 [weight=2, ];
E: 77 79 [weight=4, ];
E: 77 96 [weight=2, ];
E: 77 99 [weight=2, ];
E: 78 96 [weight=1, ];
E: 78 99 [weight=1, ];
E: 79 96 [weight=1, ];
E: 79 99 [weight=1, ];
E: 80 83 [weight=2, ];
E: 80 96 [weight=4, ];
E: 80 100 [weight=3, ];
E: 80 101 [weight=3, ];
E: 80 102 [weight=2, ];
E: 81 83 [weight=2, ];
E: 81 96 [weight=4, ];
E: 81 101 [weight=1, ];
E: 81 102 [weight=2, ];
E: 82 83 [weight=1, ];
E: 82 84 [weight=1, ];
E: 82 95 [weight=1, ];
E: 82 96 [weight=4, ];
E: 82 100 [weight=4, ];
E: 82 101 [weight=8, ];
E: 82 102 [weight=2, ];
E: 83 84 [weight=1, ];
E: 83 96 [weight=5, ];
E: 83 102 [weight=2, ];
E: 84 96 [weight=4, ];
E: 84 100 [weight=2, ];
E: 84 101 [weight=3, ];
E: 84 102 [weight=3, ];
E: 85 87 [weight=2, ];
E: 85 88 [weight=1, ];
E: 85 96 [weight=5, ];
E: 85 99 [weight=6, ];
E: 85 101 [weight=1, ];
E: 86 88 [weight=1, ];
E: 86 96 [weight=1, ];
E: 86 99 [weight=1, ];
E: 87 96 [weight=2, ];
E: 87 99 [weight=3, ];
E: 87 101 [weight=1, ];
E: 88 95 [weight=1, ];
E: 88 96 [weight=1, ];
E: 88 99 [weight=2, ];
E: 89 96 [weight=2, ];
E: 89 100 [weight=1, ];
E: 89 101 [weight=1, ];
E: 89 102 [weight=2, ];
E: 90 96 [weight=2, ];
E: 90 101 [weight=1, ];
E: 90 102 [weight=2, ];
E: 91 95 [weight=2, ];
E: 91 96 [weight=4, ];
E: 91 100 [weight=2, ];
E: 91 101 [weight=4, ];
E: 91 102 [weight=2, ];
E: 92 94 [weight=1, ];
E: 92 95 [weight=1, ];
E: 92 96 [weight=3, ];
E: 92 100 [weight=1, ];
E: 92 101 [weight=2, ];
E: 92 102 [weight=2, ];
E: 93 95 [weight=2, ];
E: 93 96 [weight=4, ];
E: 93 100 [weight=2, ];
E: 93 101 [weight=4, ];
E: 93 102 [weight=2, ];
E: 94 95 [weight=2, ];
E: 94 96 [weight=4, ];
E: 94 100 [weight=2, ];
E: 94 101 [weight=4, ];
E: 94 102 [weight=2, ];
E: 95 100 [weight=1, ];
E: 95 101 [weight=2, ];
E: 95 102 [weight=1, ];
E: 96 100 [weight=1, ];
E: 96 101 [weight=2, ];
E: 96 102 [weight=1, ];
E: 97 98 [weight=2, ];
E: 97 102 [weight=2, ];
E: 98 102 [weight=2, ];
E: 99 102 [weight=1, ];
E: 100 101 [weight=1, ];
E: 100 102 [weight=2, ];
E: 101 102 [weight=2, ];
E: 105 106 [weight=1, ];
