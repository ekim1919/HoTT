N: 58 "Univalence" [body=no, kind=cnst, prop=no, path="Universe", ];
N: 55 "Univalence_implies_Funext" [body=no, kind=cnst, prop=no, path="Universe", ];
N: 33 "ap_equiv_path_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 32 "ap_prod_l_path_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 31 "ap_prod_r_path_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 4 "contr_basedequiv" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 3 "contr_basedequiv'" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 48 "equiv_equiv_path" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 10 "equiv_induction" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 8 "equiv_induction'" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 7 "equiv_induction'_comp" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 9 "equiv_induction_comp" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 6 "equiv_induction_inv" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 5 "equiv_induction_inv_comp" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 60 "equiv_path" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 20 "equiv_path2_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 18 "equiv_path2_universe_1" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 14 "equiv_path3_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 59 "equiv_path_V" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 43 "equiv_path_path_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 42 "equiv_path_path_universe_uncurried" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 39 "equiv_path_pp" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 49 "equiv_path_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 52 "eta_path_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 51 "eta_path_universe_uncurried" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 57 "is_global_axiom_univalence" [body=yes, kind=cnst, prop=yes, path="Universe", ];
N: 56 "isequiv_equiv_path" [body=no, kind=cnst, prop=no, path="Universe", ];
N: 61 "isequiv_path" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 50 "isequiv_path_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 2 "istrunc_paths_Type" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 1 "not_hset_Type" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 19 "path2_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 17 "path2_universe_1" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 16 "path2_universe_postcompose_idmap" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 15 "path2_universe_precompose_idmap" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 13 "path3_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 53 "path_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 36 "path_universe_1" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 34 "path_universe_V" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 35 "path_universe_V_uncurried" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 37 "path_universe_compose" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 38 "path_universe_compose_uncurried" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 47 "path_universe_equiv_path" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 45 "path_universe_transport_idmap" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 54 "path_universe_uncurried" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 46 "path_universe_uncurried_equiv_path" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 44 "path_universe_uncurried_transport_idmap" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 21 "transport_arrow_toconst_path_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 41 "transport_idmap_path_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 40 "transport_idmap_path_universe_uncurried" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 29 "transport_path_universe" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 27 "transport_path_universe'" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 25 "transport_path_universe_V" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 24 "transport_path_universe_V_equiv_path" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 26 "transport_path_universe_V_uncurried" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 22 "transport_path_universe_Vp" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 23 "transport_path_universe_Vp_uncurried" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 28 "transport_path_universe_equiv_path" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 11 "transport_path_universe_pV" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 12 "transport_path_universe_pV_uncurried" [body=yes, kind=cnst, prop=no, path="Universe", ];
N: 30 "transport_path_universe_uncurried" [body=yes, kind=cnst, prop=no, path="Universe", ];
E: 1 29 [weight=1, ];
E: 1 53 [weight=5, ];
E: 1 58 [weight=2, ];
E: 2 54 [weight=1, ];
E: 2 56 [weight=2, ];
E: 2 58 [weight=2, ];
E: 2 60 [weight=2, ];
E: 3 6 [weight=1, ];
E: 3 58 [weight=2, ];
E: 4 10 [weight=1, ];
E: 4 58 [weight=2, ];
E: 5 6 [weight=1, ];
E: 5 56 [weight=1, ];
E: 5 58 [weight=2, ];
E: 5 60 [weight=2, ];
E: 6 56 [weight=1, ];
E: 6 58 [weight=2, ];
E: 6 60 [weight=2, ];
E: 7 8 [weight=1, ];
E: 7 56 [weight=1, ];
E: 7 58 [weight=2, ];
E: 7 60 [weight=2, ];
E: 8 56 [weight=1, ];
E: 8 58 [weight=2, ];
E: 8 60 [weight=2, ];
E: 9 10 [weight=1, ];
E: 9 56 [weight=1, ];
E: 9 58 [weight=2, ];
E: 9 60 [weight=2, ];
E: 10 56 [weight=1, ];
E: 10 58 [weight=2, ];
E: 10 60 [weight=2, ];
E: 11 12 [weight=1, ];
E: 11 25 [weight=1, ];
E: 11 29 [weight=1, ];
E: 11 53 [weight=10, ];
E: 11 58 [weight=2, ];
E: 12 24 [weight=1, ];
E: 12 25 [weight=13, ];
E: 12 28 [weight=1, ];
E: 12 29 [weight=11, ];
E: 12 53 [weight=120, ];
E: 12 56 [weight=24, ];
E: 12 58 [weight=2, ];
E: 12 60 [weight=191, ];
E: 12 61 [weight=81, ];
E: 13 14 [weight=1, ];
E: 13 19 [weight=2, ];
E: 13 53 [weight=2, ];
E: 13 58 [weight=2, ];
E: 14 19 [weight=10, ];
E: 14 53 [weight=20, ];
E: 14 56 [weight=9, ];
E: 14 58 [weight=2, ];
E: 14 60 [weight=3, ];
E: 15 20 [weight=22, ];
E: 15 36 [weight=42, ];
E: 15 52 [weight=30, ];
E: 15 53 [weight=344, ];
E: 15 54 [weight=45, ];
E: 15 56 [weight=83, ];
E: 15 58 [weight=2, ];
E: 15 60 [weight=129, ];
E: 15 61 [weight=41, ];
E: 16 20 [weight=22, ];
E: 16 36 [weight=45, ];
E: 16 52 [weight=27, ];
E: 16 53 [weight=322, ];
E: 16 54 [weight=45, ];
E: 16 56 [weight=85, ];
E: 16 58 [weight=2, ];
E: 16 60 [weight=139, ];
E: 16 61 [weight=41, ];
E: 17 18 [weight=1, ];
E: 17 19 [weight=1, ];
E: 17 53 [weight=3, ];
E: 17 58 [weight=2, ];
E: 18 20 [weight=2, ];
E: 18 53 [weight=21, ];
E: 18 56 [weight=4, ];
E: 18 58 [weight=2, ];
E: 19 20 [weight=1, ];
E: 19 53 [weight=2, ];
E: 19 58 [weight=2, ];
E: 20 53 [weight=6, ];
E: 20 56 [weight=2, ];
E: 20 58 [weight=2, ];
E: 20 60 [weight=1, ];
E: 21 25 [weight=1, ];
E: 21 53 [weight=7, ];
E: 21 55 [weight=2, ];
E: 21 58 [weight=4, ];
E: 22 23 [weight=1, ];
E: 22 25 [weight=1, ];
E: 22 29 [weight=1, ];
E: 22 53 [weight=10, ];
E: 22 58 [weight=2, ];
E: 23 24 [weight=1, ];
E: 23 25 [weight=6, ];
E: 23 28 [weight=1, ];
E: 23 29 [weight=7, ];
E: 23 53 [weight=83, ];
E: 23 56 [weight=9, ];
E: 23 58 [weight=2, ];
E: 23 60 [weight=107, ];
E: 23 61 [weight=36, ];
E: 24 25 [weight=1, ];
E: 24 53 [weight=1, ];
E: 24 54 [weight=1, ];
E: 24 56 [weight=7, ];
E: 24 58 [weight=2, ];
E: 24 60 [weight=7, ];
E: 24 61 [weight=3, ];
E: 25 26 [weight=1, ];
E: 25 53 [weight=1, ];
E: 25 58 [weight=2, ];
E: 26 54 [weight=2, ];
E: 26 56 [weight=4, ];
E: 26 58 [weight=2, ];
E: 26 60 [weight=3, ];
E: 27 29 [weight=1, ];
E: 27 53 [weight=6, ];
E: 27 58 [weight=2, ];
E: 28 29 [weight=1, ];
E: 28 53 [weight=1, ];
E: 28 54 [weight=1, ];
E: 28 56 [weight=5, ];
E: 28 58 [weight=2, ];
E: 28 60 [weight=6, ];
E: 28 61 [weight=2, ];
E: 29 30 [weight=1, ];
E: 29 53 [weight=1, ];
E: 29 58 [weight=2, ];
E: 30 54 [weight=2, ];
E: 30 56 [weight=3, ];
E: 30 58 [weight=2, ];
E: 30 60 [weight=2, ];
E: 31 53 [weight=3, ];
E: 31 56 [weight=2, ];
E: 31 58 [weight=2, ];
E: 31 60 [weight=15, ];
E: 31 61 [weight=1, ];
E: 32 53 [weight=3, ];
E: 32 56 [weight=2, ];
E: 32 58 [weight=2, ];
E: 32 60 [weight=15, ];
E: 32 61 [weight=1, ];
E: 33 53 [weight=3, ];
E: 33 56 [weight=2, ];
E: 33 58 [weight=2, ];
E: 33 60 [weight=23, ];
E: 33 61 [weight=1, ];
E: 34 35 [weight=1, ];
E: 34 53 [weight=2, ];
E: 34 58 [weight=2, ];
E: 35 49 [weight=10, ];
E: 35 54 [weight=11, ];
E: 35 56 [weight=1, ];
E: 35 58 [weight=2, ];
E: 35 59 [weight=1, ];
E: 35 60 [weight=8, ];
E: 36 52 [weight=1, ];
E: 36 53 [weight=1, ];
E: 36 58 [weight=2, ];
E: 37 39 [weight=1, ];
E: 37 52 [weight=3, ];
E: 37 53 [weight=18, ];
E: 37 54 [weight=5, ];
E: 37 56 [weight=2, ];
E: 37 58 [weight=2, ];
E: 37 60 [weight=33, ];
E: 37 61 [weight=1, ];
E: 38 39 [weight=1, ];
E: 38 52 [weight=3, ];
E: 38 53 [weight=1, ];
E: 38 54 [weight=22, ];
E: 38 56 [weight=2, ];
E: 38 58 [weight=2, ];
E: 38 60 [weight=23, ];
E: 38 61 [weight=1, ];
E: 39 60 [weight=23, ];
E: 40 54 [weight=1, ];
E: 40 56 [weight=2, ];
E: 40 58 [weight=2, ];
E: 40 60 [weight=1, ];
E: 41 53 [weight=1, ];
E: 41 56 [weight=2, ];
E: 41 58 [weight=2, ];
E: 41 60 [weight=1, ];
E: 42 54 [weight=1, ];
E: 42 56 [weight=1, ];
E: 42 58 [weight=2, ];
E: 42 60 [weight=1, ];
E: 43 53 [weight=1, ];
E: 43 56 [weight=1, ];
E: 43 58 [weight=2, ];
E: 43 60 [weight=1, ];
E: 44 54 [weight=1, ];
E: 44 56 [weight=1, ];
E: 44 58 [weight=2, ];
E: 45 53 [weight=1, ];
E: 45 56 [weight=1, ];
E: 45 58 [weight=2, ];
E: 45 61 [weight=1, ];
E: 46 54 [weight=1, ];
E: 46 56 [weight=1, ];
E: 46 58 [weight=2, ];
E: 46 60 [weight=1, ];
E: 47 53 [weight=1, ];
E: 47 56 [weight=1, ];
E: 47 58 [weight=2, ];
E: 47 60 [weight=1, ];
E: 47 61 [weight=1, ];
E: 48 49 [weight=1, ];
E: 48 58 [weight=2, ];
E: 49 50 [weight=1, ];
E: 49 54 [weight=1, ];
E: 49 58 [weight=2, ];
E: 50 54 [weight=1, ];
E: 50 56 [weight=2, ];
E: 50 58 [weight=2, ];
E: 50 60 [weight=2, ];
E: 51 54 [weight=1, ];
E: 51 56 [weight=1, ];
E: 51 58 [weight=2, ];
E: 51 60 [weight=1, ];
E: 52 53 [weight=1, ];
E: 52 56 [weight=1, ];
E: 52 58 [weight=2, ];
E: 52 60 [weight=1, ];
E: 52 61 [weight=1, ];
E: 53 54 [weight=1, ];
E: 53 58 [weight=2, ];
E: 54 56 [weight=1, ];
E: 54 58 [weight=2, ];
E: 55 58 [weight=1, ];
E: 56 58 [weight=1, ];
E: 56 60 [weight=1, ];
E: 57 58 [weight=2, ];
E: 59 60 [weight=8, ];
E: 59 61 [weight=8, ];
E: 60 61 [weight=1, ];
