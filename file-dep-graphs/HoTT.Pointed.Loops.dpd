N: 3 "equiv_istrunc_contr_iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 4 "equiv_istrunc_istrunc_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 20 "equiv_loops_image" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 21 "equiv_loops_image_subproof" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 1 "equiv_loops_ppforall" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 26 "fmap_iterated_loops_pp" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 29 "fmap_loops_pconst" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 31 "fmap_loops_pp" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 25 "hfiber_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 28 "is0functor_iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 33 "is0functor_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 27 "is1functor_iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 32 "is1functor_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 2 "is1natural_loops_inv" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 23 "isconnected_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 22 "isconnected_iterated_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 35 "isconnected_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 40 "ispointed_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 30 "ispointedfunctor_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 24 "istrunc_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 36 "istrunc_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 11 "istrunc_pfam_loopsD" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 38 "iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 8 "iterated_loops_pproduct_commute" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 13 "iterated_loops_prod" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 5 "local_global_looping" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 39 "loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 12 "loopsD" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 19 "loops_inv" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 9 "loops_pproduct_commute" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 14 "loops_prod" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 10 "loops_psigma_commute" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 7 "loops_psigma_trunc" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 6 "loops_type" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 15 "pequiv_fmap_iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 18 "pequiv_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 34 "pequiv_loops_punit" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 16 "unfold_iterated_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 37 "unfold_iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 17 "unfold_iterated_loops'" [body=yes, kind=cnst, prop=no, path="Loops", ];
E: 1 39 [weight=9, ];
E: 2 19 [weight=37, ];
E: 2 33 [weight=24, ];
E: 2 39 [weight=179, ];
E: 2 40 [weight=20, ];
E: 3 4 [weight=1, ];
E: 3 17 [weight=1, ];
E: 3 27 [weight=1, ];
E: 3 28 [weight=1, ];
E: 3 38 [weight=31, ];
E: 3 39 [weight=40, ];
E: 3 40 [weight=2, ];
E: 4 39 [weight=5, ];
E: 5 6 [weight=1, ];
E: 5 9 [weight=1, ];
E: 5 32 [weight=2, ];
E: 5 33 [weight=2, ];
E: 5 38 [weight=22, ];
E: 5 39 [weight=14, ];
E: 6 39 [weight=6, ];
E: 7 10 [weight=1, ];
E: 7 11 [weight=1, ];
E: 7 12 [weight=3, ];
E: 7 17 [weight=2, ];
E: 7 27 [weight=1, ];
E: 7 28 [weight=1, ];
E: 7 38 [weight=27, ];
E: 7 39 [weight=10, ];
E: 8 9 [weight=1, ];
E: 8 32 [weight=1, ];
E: 8 33 [weight=1, ];
E: 8 38 [weight=8, ];
E: 8 39 [weight=8, ];
E: 9 39 [weight=11, ];
E: 10 12 [weight=7, ];
E: 10 39 [weight=11, ];
E: 11 12 [weight=2, ];
E: 11 39 [weight=3, ];
E: 12 39 [weight=6, ];
E: 13 14 [weight=1, ];
E: 13 32 [weight=1, ];
E: 13 33 [weight=1, ];
E: 13 38 [weight=28, ];
E: 13 39 [weight=31, ];
E: 13 40 [weight=2, ];
E: 14 39 [weight=42, ];
E: 14 40 [weight=18, ];
E: 15 27 [weight=1, ];
E: 15 28 [weight=1, ];
E: 15 38 [weight=3, ];
E: 16 17 [weight=18, ];
E: 16 18 [weight=11, ];
E: 16 28 [weight=18, ];
E: 16 32 [weight=3, ];
E: 16 33 [weight=38, ];
E: 16 38 [weight=233, ];
E: 16 39 [weight=303, ];
E: 16 40 [weight=40, ];
E: 17 18 [weight=1, ];
E: 17 38 [weight=8, ];
E: 17 39 [weight=6, ];
E: 18 32 [weight=1, ];
E: 18 33 [weight=1, ];
E: 18 39 [weight=3, ];
E: 19 39 [weight=9, ];
E: 20 21 [weight=1, ];
E: 20 23 [weight=1, ];
E: 20 24 [weight=1, ];
E: 20 32 [weight=1, ];
E: 20 33 [weight=20, ];
E: 20 39 [weight=28, ];
E: 21 39 [weight=2, ];
E: 22 23 [weight=1, ];
E: 22 28 [weight=3, ];
E: 22 33 [weight=1, ];
E: 22 38 [weight=8, ];
E: 22 39 [weight=4, ];
E: 23 25 [weight=1, ];
E: 23 33 [weight=4, ];
E: 23 39 [weight=13, ];
E: 24 25 [weight=1, ];
E: 24 33 [weight=3, ];
E: 24 39 [weight=10, ];
E: 25 33 [weight=2, ];
E: 25 39 [weight=11, ];
E: 26 28 [weight=3, ];
E: 26 31 [weight=1, ];
E: 26 33 [weight=1, ];
E: 26 38 [weight=9, ];
E: 26 39 [weight=25, ];
E: 27 28 [weight=3, ];
E: 27 32 [weight=1, ];
E: 27 33 [weight=2, ];
E: 27 38 [weight=6, ];
E: 27 39 [weight=4, ];
E: 28 33 [weight=1, ];
E: 28 38 [weight=3, ];
E: 28 39 [weight=2, ];
E: 29 30 [weight=1, ];
E: 29 32 [weight=1, ];
E: 29 33 [weight=2, ];
E: 29 39 [weight=6, ];
E: 30 32 [weight=2, ];
E: 30 33 [weight=2, ];
E: 30 34 [weight=1, ];
E: 30 39 [weight=2, ];
E: 31 33 [weight=9, ];
E: 31 39 [weight=13, ];
E: 32 33 [weight=48, ];
E: 32 39 [weight=384, ];
E: 32 40 [weight=24, ];
E: 33 39 [weight=9, ];
E: 34 39 [weight=2, ];
E: 35 39 [weight=1, ];
E: 36 39 [weight=1, ];
E: 37 38 [weight=13, ];
E: 37 39 [weight=11, ];
E: 38 39 [weight=1, ];
E: 39 40 [weight=1, ];
