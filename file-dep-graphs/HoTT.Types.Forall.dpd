N: 43 "apD10_path_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 33 "apD_transport_forall_constant" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 32 "ap_apply_lD" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 31 "ap_apply_lD2" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 26 "ap_functor_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 30 "ap_lambdaD" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 6 "contr_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 29 "dpath_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 28 "dpath_forall_constant" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 40 "equiv_apD10" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 4 "equiv_contr_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 1 "equiv_flip" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 16 "equiv_functor_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 15 "equiv_functor_forall'" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 12 "equiv_functor_forall_covariant" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 11 "equiv_functor_forall_covariant_compose" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 14 "equiv_functor_forall_id" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 13 "equiv_functor_forall_pb" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 38 "equiv_path_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 9 "equiv_path_forall11" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 42 "eta_path_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 3 "flip" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 27 "functor_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 25 "functor_forall_compose" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 22 "functor_forall_equiv" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 21 "functor_forall_equiv_pb" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 20 "functor_forall_equiv_pb_beta" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 24 "functor_forall_id" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 23 "functor_forall_pb" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 10 "iff_functor_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 2 "isequiv_flip" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 17 "isequiv_functor_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 19 "isequiv_functor_forall_subproof" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 18 "isequiv_functor_forall_subproof0" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 39 "isequiv_path_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 7 "isequiv_path_forall11" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 5 "istrunc_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 8 "path_forall11" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 41 "path_forall_1" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 36 "path_forall_V" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 37 "path_forall_pp" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 35 "transport_forall" [body=yes, kind=cnst, prop=no, path="Forall", ];
N: 34 "transport_forall_constant" [body=yes, kind=cnst, prop=no, path="Forall", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 2 3 [weight=30, ];
E: 5 6 [weight=1, ];
E: 5 39 [weight=1, ];
E: 7 8 [weight=1, ];
E: 7 9 [weight=1, ];
E: 8 9 [weight=1, ];
E: 9 14 [weight=1, ];
E: 9 38 [weight=2, ];
E: 11 12 [weight=7, ];
E: 11 15 [weight=25, ];
E: 11 25 [weight=1, ];
E: 12 15 [weight=1, ];
E: 13 15 [weight=1, ];
E: 14 16 [weight=1, ];
E: 15 16 [weight=1, ];
E: 16 17 [weight=1, ];
E: 16 27 [weight=1, ];
E: 17 18 [weight=1, ];
E: 17 19 [weight=1, ];
E: 17 27 [weight=7, ];
E: 18 27 [weight=8, ];
E: 19 27 [weight=8, ];
E: 20 21 [weight=3, ];
E: 21 22 [weight=1, ];
E: 22 27 [weight=1, ];
E: 23 27 [weight=1, ];
E: 24 27 [weight=1, ];
E: 25 27 [weight=5, ];
E: 26 27 [weight=22, ];
E: 26 41 [weight=2, ];
E: 28 38 [weight=1, ];
E: 29 38 [weight=1, ];
E: 30 41 [weight=1, ];
E: 33 34 [weight=8, ];
E: 37 42 [weight=3, ];
E: 38 39 [weight=1, ];
E: 41 42 [weight=1, ];
