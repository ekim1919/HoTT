N: 28 "FiberSeq" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 62 "IsComplex" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 47 "IsExact_ind" [body=yes, kind=cnst, prop=yes, path="ExactSequence", ];
N: 46 "IsExact_rec" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 48 "IsExact_rect" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 45 "IsExact_sind" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 11 "LongExactSequence_ind" [body=yes, kind=cnst, prop=yes, path="ExactSequence", ];
N: 10 "LongExactSequence_rec" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 12 "LongExactSequence_rect" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 9 "LongExactSequence_sind" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 2 "Pi_les" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 1 "classify_fiberseq" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 43 "conn_map_isexact" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 17 "connect_fiberseq" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 16 "connecting_map" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 44 "cx_isexact" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 61 "cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 32 "equiv_cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 31 "equiv_cxfib_beta" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 24 "fiberseq_isexact_purely" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 23 "fiberseq_loops" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 27 "i_fiberseq" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 54 "iscomplex_cancelR" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 53 "iscomplex_equiv_i" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 55 "iscomplex_homotopic_f" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 56 "iscomplex_homotopic_i" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 57 "iscomplex_iterated_loops" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 58 "iscomplex_loops" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 30 "iscomplex_pfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 59 "iscomplex_ptr" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 52 "iscomplex_trivial" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 33 "isequiv_cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 15 "isexact_connect_R" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 35 "isexact_equiv_i" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 36 "isexact_equiv_i_subproof" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 37 "isexact_homotopic_f" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 38 "isexact_homotopic_i" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 21 "isexact_iterated_loops" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 22 "isexact_loops" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 29 "isexact_pfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 40 "isexact_preimage" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 39 "isexact_preimage_hfiber" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 20 "isexact_ptr" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 19 "isexact_ptr_purely" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 26 "isexact_purely_fiberseq" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 34 "isexact_square_if" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 51 "ishprop_iscomplex_hset" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 41 "ishprop_isexact_hset" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 42 "issig_isexact" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 8 "les_carrier" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 7 "les_fn" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 6 "les_isexact" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 4 "loops_carrier" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 3 "loops_les" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 25 "pequiv_cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 60 "pfib_cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 18 "square_pfib_pequiv_cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 5 "trunc_les" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 50 "IsExact" [kind=inductive, prop=no, path="ExactSequence", ];
N: 14 "LongExactSequence" [kind=inductive, prop=no, path="ExactSequence", ];
N: 49 "Build_IsExact" [kind=construct, prop=no, path="ExactSequence", ];
N: 13 "Build_LongExactSequence" [kind=construct, prop=no, path="ExactSequence", ];
E: 1 28 [weight=3, ];
E: 2 3 [weight=1, ];
E: 2 5 [weight=1, ];
E: 2 14 [weight=1, ];
E: 2 50 [weight=2, ];
E: 3 4 [weight=454, ];
E: 3 13 [weight=1, ];
E: 3 14 [weight=1, ];
E: 3 15 [weight=1, ];
E: 3 16 [weight=14, ];
E: 3 17 [weight=1, ];
E: 3 21 [weight=17, ];
E: 3 26 [weight=1, ];
E: 3 50 [weight=12, ];
E: 5 13 [weight=1, ];
E: 5 14 [weight=3, ];
E: 5 19 [weight=1, ];
E: 6 14 [weight=2, ];
E: 6 50 [weight=1, ];
E: 7 14 [weight=2, ];
E: 8 14 [weight=2, ];
E: 9 13 [weight=2, ];
E: 9 14 [weight=4, ];
E: 9 50 [weight=2, ];
E: 10 12 [weight=1, ];
E: 10 13 [weight=1, ];
E: 10 14 [weight=3, ];
E: 10 50 [weight=1, ];
E: 11 13 [weight=2, ];
E: 11 14 [weight=4, ];
E: 11 50 [weight=2, ];
E: 12 13 [weight=2, ];
E: 12 14 [weight=4, ];
E: 12 50 [weight=2, ];
E: 13 50 [weight=1, ];
E: 14 50 [weight=1, ];
E: 15 16 [weight=1, ];
E: 15 18 [weight=11, ];
E: 15 25 [weight=15, ];
E: 15 29 [weight=1, ];
E: 15 35 [weight=1, ];
E: 15 50 [weight=3, ];
E: 16 17 [weight=1, ];
E: 16 27 [weight=1, ];
E: 16 50 [weight=2, ];
E: 17 18 [weight=1, ];
E: 17 25 [weight=1, ];
E: 17 28 [weight=1, ];
E: 17 50 [weight=2, ];
E: 18 25 [weight=4, ];
E: 18 50 [weight=2, ];
E: 18 60 [weight=1, ];
E: 19 20 [weight=1, ];
E: 19 49 [weight=1, ];
E: 19 50 [weight=3, ];
E: 19 61 [weight=2, ];
E: 20 49 [weight=1, ];
E: 20 50 [weight=3, ];
E: 20 59 [weight=6, ];
E: 20 61 [weight=29, ];
E: 21 22 [weight=1, ];
E: 21 50 [weight=5, ];
E: 22 23 [weight=14, ];
E: 22 24 [weight=50, ];
E: 22 26 [weight=1, ];
E: 22 27 [weight=2, ];
E: 22 38 [weight=1, ];
E: 22 50 [weight=3, ];
E: 22 60 [weight=1, ];
E: 22 61 [weight=8, ];
E: 23 28 [weight=3, ];
E: 24 25 [weight=1, ];
E: 24 28 [weight=1, ];
E: 24 50 [weight=2, ];
E: 25 33 [weight=1, ];
E: 25 50 [weight=2, ];
E: 25 61 [weight=1, ];
E: 26 27 [weight=23, ];
E: 26 28 [weight=2, ];
E: 26 49 [weight=1, ];
E: 26 50 [weight=1, ];
E: 26 61 [weight=2, ];
E: 27 28 [weight=2, ];
E: 29 30 [weight=1, ];
E: 29 49 [weight=1, ];
E: 29 50 [weight=1, ];
E: 30 62 [weight=1, ];
E: 31 32 [weight=7, ];
E: 31 33 [weight=1, ];
E: 31 50 [weight=2, ];
E: 31 61 [weight=1, ];
E: 32 33 [weight=1, ];
E: 32 50 [weight=2, ];
E: 32 61 [weight=1, ];
E: 33 50 [weight=2, ];
E: 33 61 [weight=4, ];
E: 34 35 [weight=1, ];
E: 34 37 [weight=1, ];
E: 34 49 [weight=1, ];
E: 34 50 [weight=5, ];
E: 34 54 [weight=10, ];
E: 34 61 [weight=16, ];
E: 35 36 [weight=1, ];
E: 35 49 [weight=1, ];
E: 35 50 [weight=3, ];
E: 35 53 [weight=2, ];
E: 35 61 [weight=5, ];
E: 36 50 [weight=2, ];
E: 37 49 [weight=1, ];
E: 37 50 [weight=3, ];
E: 37 55 [weight=5, ];
E: 37 61 [weight=7, ];
E: 38 49 [weight=1, ];
E: 38 50 [weight=3, ];
E: 38 56 [weight=4, ];
E: 38 61 [weight=6, ];
E: 39 40 [weight=1, ];
E: 39 50 [weight=2, ];
E: 40 50 [weight=2, ];
E: 40 61 [weight=5, ];
E: 41 49 [weight=8, ];
E: 41 50 [weight=14, ];
E: 41 51 [weight=1, ];
E: 41 61 [weight=24, ];
E: 41 62 [weight=44, ];
E: 42 49 [weight=8, ];
E: 42 50 [weight=12, ];
E: 42 61 [weight=21, ];
E: 42 62 [weight=39, ];
E: 43 50 [weight=2, ];
E: 43 61 [weight=1, ];
E: 44 50 [weight=2, ];
E: 44 62 [weight=1, ];
E: 45 49 [weight=2, ];
E: 45 50 [weight=4, ];
E: 45 61 [weight=2, ];
E: 45 62 [weight=2, ];
E: 46 48 [weight=1, ];
E: 46 49 [weight=1, ];
E: 46 50 [weight=3, ];
E: 46 61 [weight=1, ];
E: 46 62 [weight=1, ];
E: 47 49 [weight=2, ];
E: 47 50 [weight=4, ];
E: 47 61 [weight=2, ];
E: 47 62 [weight=2, ];
E: 48 49 [weight=2, ];
E: 48 50 [weight=4, ];
E: 48 61 [weight=2, ];
E: 48 62 [weight=2, ];
E: 49 61 [weight=1, ];
E: 49 62 [weight=1, ];
E: 50 61 [weight=1, ];
E: 50 62 [weight=1, ];
E: 51 62 [weight=1, ];
E: 52 62 [weight=1, ];
E: 53 62 [weight=3, ];
E: 54 62 [weight=3, ];
E: 55 62 [weight=3, ];
E: 56 62 [weight=3, ];
E: 57 58 [weight=1, ];
E: 57 62 [weight=5, ];
E: 58 62 [weight=3, ];
E: 59 62 [weight=3, ];
E: 60 61 [weight=7, ];
E: 60 62 [weight=2, ];
E: 61 62 [weight=2, ];
