N: 80 "Build_IsSubgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 64 "Build_Subgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 30 "IsNormalSubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 87 "IsSubgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 86 "IsSubgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 88 "IsSubgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 85 "IsSubgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 16 "IsTrivialSubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 25 "NormalSubgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 24 "NormalSubgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 26 "NormalSubgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 23 "NormalSubgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 69 "Subgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 68 "Subgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 70 "Subgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 67 "Subgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 32 "equiv_in_cosetL_symm" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 31 "equiv_in_cosetR_symm" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 47 "equiv_path_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 46 "equiv_path_subgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 54 "equiv_subgroup_inverse" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 44 "in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 18 "in_cosetL_cong" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 20 "in_cosetL_inverse" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 34 "in_cosetL_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 43 "in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 17 "in_cosetR_cong" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 19 "in_cosetR_inverse" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 33 "in_cosetR_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 51 "isembedding_subgroup_incl" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 55 "isequiv_subgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 42 "ishprop_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 41 "ishprop_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 73 "ishprop_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 45 "ishset_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 29 "isnormal" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 74 "issig_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 50 "issig_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 81 "issubgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 78 "issubgroup_in_inv'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 77 "issubgroup_in_inv_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 82 "issubgroup_in_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 79 "issubgroup_in_op_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 76 "issubgroup_in_op_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 75 "issubgroup_in_op_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 83 "issubgroup_in_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 84 "issubgroup_predicate" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 15 "istrivialsubgroup_trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 48 "maximal_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 21 "normalsubgroup_isnormal" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 22 "normalsubgroup_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 40 "reflexive_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 39 "reflexive_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 5 "sgt_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 4 "sgt_op'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 3 "subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 8 "subgroup_generated_type_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 7 "subgroup_generated_type_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 9 "subgroup_generated_type_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 6 "subgroup_generated_type_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 53 "subgroup_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 62 "subgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 61 "subgroup_in_inv'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 58 "subgroup_in_inv_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 60 "subgroup_in_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 59 "subgroup_in_op_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 57 "subgroup_in_op_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 56 "subgroup_in_op_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 63 "subgroup_in_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 52 "subgroup_incl" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 14 "subgroup_intersection" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 65 "subgroup_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 66 "subgroup_pred" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 2 "subgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 1 "subgroup_product_ind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 38 "symmetric_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 37 "symmetric_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 36 "transitive_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 35 "transitive_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 49 "trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 90 "IsSubgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 28 "NormalSubgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 72 "Subgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 13 "subgroup_generated_type" [kind=inductive, prop=no, path="Subgroup", ];
N: 89 "Build_IsSubgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 27 "Build_NormalSubgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 71 "Build_Subgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 12 "sgt_in" [kind=construct, prop=no, path="Subgroup", ];
N: 11 "sgt_unit" [kind=construct, prop=no, path="Subgroup", ];
N: 10 "sgt_op" [kind=construct, prop=no, path="Subgroup", ];
E: 1 2 [weight=6, ];
E: 1 9 [weight=1, ];
E: 1 10 [weight=2, ];
E: 1 11 [weight=2, ];
E: 1 12 [weight=5, ];
E: 1 13 [weight=25, ];
E: 1 72 [weight=4, ];
E: 2 3 [weight=1, ];
E: 2 72 [weight=5, ];
E: 3 10 [weight=1, ];
E: 3 11 [weight=1, ];
E: 3 13 [weight=18, ];
E: 3 64 [weight=1, ];
E: 3 72 [weight=1, ];
E: 4 5 [weight=1, ];
E: 4 10 [weight=1, ];
E: 4 13 [weight=6, ];
E: 5 10 [weight=1, ];
E: 5 11 [weight=1, ];
E: 5 13 [weight=4, ];
E: 6 10 [weight=2, ];
E: 6 11 [weight=2, ];
E: 6 12 [weight=2, ];
E: 6 13 [weight=10, ];
E: 7 9 [weight=1, ];
E: 7 10 [weight=1, ];
E: 7 11 [weight=1, ];
E: 7 12 [weight=1, ];
E: 7 13 [weight=5, ];
E: 8 10 [weight=2, ];
E: 8 11 [weight=2, ];
E: 8 12 [weight=2, ];
E: 8 13 [weight=10, ];
E: 9 10 [weight=2, ];
E: 9 11 [weight=2, ];
E: 9 12 [weight=2, ];
E: 9 13 [weight=10, ];
E: 14 59 [weight=2, ];
E: 14 63 [weight=2, ];
E: 14 64 [weight=1, ];
E: 14 72 [weight=5, ];
E: 15 16 [weight=2, ];
E: 15 49 [weight=3, ];
E: 16 49 [weight=1, ];
E: 16 72 [weight=2, ];
E: 17 28 [weight=2, ];
E: 17 29 [weight=3, ];
E: 17 37 [weight=2, ];
E: 17 43 [weight=10, ];
E: 17 44 [weight=4, ];
E: 17 60 [weight=1, ];
E: 18 28 [weight=2, ];
E: 18 29 [weight=3, ];
E: 18 38 [weight=2, ];
E: 18 43 [weight=4, ];
E: 18 44 [weight=10, ];
E: 18 60 [weight=1, ];
E: 19 28 [weight=2, ];
E: 19 29 [weight=2, ];
E: 19 33 [weight=1, ];
E: 19 34 [weight=1, ];
E: 19 43 [weight=16, ];
E: 19 44 [weight=5, ];
E: 20 28 [weight=2, ];
E: 20 29 [weight=1, ];
E: 20 44 [weight=4, ];
E: 21 28 [weight=2, ];
E: 21 30 [weight=1, ];
E: 22 28 [weight=2, ];
E: 22 72 [weight=1, ];
E: 23 27 [weight=2, ];
E: 23 28 [weight=4, ];
E: 23 30 [weight=2, ];
E: 23 72 [weight=2, ];
E: 24 26 [weight=1, ];
E: 24 27 [weight=1, ];
E: 24 28 [weight=3, ];
E: 24 30 [weight=1, ];
E: 24 72 [weight=1, ];
E: 25 27 [weight=2, ];
E: 25 28 [weight=4, ];
E: 25 30 [weight=2, ];
E: 25 72 [weight=2, ];
E: 26 27 [weight=2, ];
E: 26 28 [weight=4, ];
E: 26 30 [weight=2, ];
E: 26 72 [weight=2, ];
E: 27 30 [weight=1, ];
E: 27 72 [weight=1, ];
E: 28 30 [weight=1, ];
E: 28 72 [weight=1, ];
E: 29 30 [weight=2, ];
E: 29 43 [weight=1, ];
E: 29 44 [weight=1, ];
E: 29 72 [weight=2, ];
E: 30 43 [weight=1, ];
E: 30 44 [weight=1, ];
E: 30 72 [weight=2, ];
E: 31 37 [weight=2, ];
E: 31 41 [weight=2, ];
E: 31 43 [weight=6, ];
E: 31 72 [weight=2, ];
E: 32 38 [weight=2, ];
E: 32 42 [weight=2, ];
E: 32 44 [weight=6, ];
E: 32 72 [weight=2, ];
E: 33 43 [weight=4, ];
E: 33 72 [weight=2, ];
E: 34 38 [weight=2, ];
E: 34 42 [weight=2, ];
E: 34 44 [weight=4, ];
E: 34 72 [weight=2, ];
E: 35 43 [weight=5, ];
E: 35 72 [weight=2, ];
E: 36 44 [weight=5, ];
E: 36 72 [weight=2, ];
E: 37 43 [weight=4, ];
E: 37 72 [weight=2, ];
E: 38 44 [weight=4, ];
E: 38 72 [weight=2, ];
E: 39 43 [weight=3, ];
E: 39 72 [weight=2, ];
E: 40 44 [weight=3, ];
E: 40 72 [weight=2, ];
E: 41 43 [weight=2, ];
E: 41 72 [weight=2, ];
E: 42 44 [weight=2, ];
E: 42 72 [weight=2, ];
E: 43 72 [weight=2, ];
E: 44 72 [weight=2, ];
E: 45 50 [weight=1, ];
E: 45 72 [weight=2, ];
E: 45 74 [weight=1, ];
E: 45 90 [weight=3, ];
E: 46 47 [weight=1, ];
E: 46 72 [weight=6, ];
E: 47 50 [weight=7, ];
E: 47 72 [weight=15, ];
E: 47 73 [weight=1, ];
E: 47 90 [weight=21, ];
E: 48 71 [weight=1, ];
E: 48 72 [weight=1, ];
E: 48 89 [weight=1, ];
E: 49 64 [weight=1, ];
E: 49 72 [weight=1, ];
E: 50 71 [weight=8, ];
E: 50 72 [weight=12, ];
E: 50 90 [weight=21, ];
E: 51 52 [weight=1, ];
E: 51 53 [weight=1, ];
E: 51 72 [weight=2, ];
E: 52 53 [weight=7, ];
E: 52 72 [weight=2, ];
E: 53 72 [weight=2, ];
E: 54 55 [weight=1, ];
E: 54 62 [weight=1, ];
E: 54 72 [weight=2, ];
E: 55 61 [weight=1, ];
E: 55 62 [weight=2, ];
E: 55 72 [weight=2, ];
E: 56 72 [weight=2, ];
E: 56 75 [weight=1, ];
E: 57 72 [weight=2, ];
E: 57 76 [weight=1, ];
E: 58 72 [weight=2, ];
E: 58 77 [weight=1, ];
E: 59 72 [weight=2, ];
E: 59 79 [weight=1, ];
E: 60 72 [weight=2, ];
E: 61 72 [weight=2, ];
E: 61 78 [weight=1, ];
E: 62 72 [weight=2, ];
E: 63 72 [weight=2, ];
E: 64 71 [weight=1, ];
E: 64 72 [weight=1, ];
E: 64 80 [weight=1, ];
E: 65 72 [weight=2, ];
E: 65 90 [weight=1, ];
E: 66 72 [weight=2, ];
E: 67 71 [weight=2, ];
E: 67 72 [weight=4, ];
E: 67 90 [weight=2, ];
E: 68 70 [weight=1, ];
E: 68 71 [weight=1, ];
E: 68 72 [weight=3, ];
E: 68 90 [weight=1, ];
E: 69 71 [weight=2, ];
E: 69 72 [weight=4, ];
E: 69 90 [weight=2, ];
E: 70 71 [weight=2, ];
E: 70 72 [weight=4, ];
E: 70 90 [weight=2, ];
E: 71 90 [weight=1, ];
E: 72 90 [weight=1, ];
E: 73 74 [weight=1, ];
E: 73 90 [weight=2, ];
E: 74 89 [weight=8, ];
E: 74 90 [weight=12, ];
E: 75 77 [weight=1, ];
E: 75 90 [weight=2, ];
E: 76 79 [weight=1, ];
E: 76 90 [weight=2, ];
E: 77 79 [weight=1, ];
E: 77 90 [weight=2, ];
E: 78 90 [weight=2, ];
E: 79 90 [weight=2, ];
E: 80 89 [weight=1, ];
E: 80 90 [weight=1, ];
E: 81 90 [weight=2, ];
E: 82 90 [weight=2, ];
E: 83 90 [weight=2, ];
E: 84 90 [weight=2, ];
E: 85 89 [weight=2, ];
E: 85 90 [weight=4, ];
E: 86 88 [weight=1, ];
E: 86 89 [weight=1, ];
E: 86 90 [weight=3, ];
E: 87 89 [weight=2, ];
E: 87 90 [weight=4, ];
E: 88 89 [weight=2, ];
E: 88 90 [weight=4, ];
