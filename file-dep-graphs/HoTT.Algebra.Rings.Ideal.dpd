N: 44 "Coprime" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 100 "Ideal_ind" [body=yes, kind=cnst, prop=yes, path="Ideal", ];
N: 99 "Ideal_rec" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 101 "Ideal_rect" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 98 "Ideal_sind" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 106 "IsIdeal" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 42 "equiv_coprime_sum" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 55 "equiv_path_ideal" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 45 "ideal_annihilator" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 1 "ideal_annihilator_subset" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 24 "ideal_dist_l" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 23 "ideal_dist_r" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 56 "ideal_eq" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 47 "ideal_eq_subset" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 59 "ideal_generated" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 58 "ideal_generated_finite" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 62 "ideal_generated_type_ind" [body=yes, kind=cnst, prop=yes, path="Ideal", ];
N: 61 "ideal_generated_type_rec" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 63 "ideal_generated_type_rect" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 60 "ideal_generated_type_sind" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 91 "ideal_in_negate" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 90 "ideal_in_negate'" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 88 "ideal_in_negate_plus" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 92 "ideal_in_plus" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 87 "ideal_in_plus_l" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 89 "ideal_in_plus_negate" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 86 "ideal_in_plus_r" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 93 "ideal_in_zero" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 80 "ideal_intersection" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 11 "ideal_intersection_is_product" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 36 "ideal_intersection_subset" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 38 "ideal_intersection_subset_l" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 12 "ideal_intersection_subset_product" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 37 "ideal_intersection_subset_r" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 15 "ideal_intersection_unit_r" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 16 "ideal_intresection_unit_l" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 96 "ideal_isideal" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 69 "ideal_kernel" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 57 "ideal_principal" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 70 "ideal_product" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 19 "ideal_product_comm" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 14 "ideal_product_intersection_sum_subset" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 13 "ideal_product_intersection_sum_subset'" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 73 "ideal_product_naive_type_ind" [body=yes, kind=cnst, prop=yes, path="Ideal", ];
N: 72 "ideal_product_naive_type_rec" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 74 "ideal_product_naive_type_rect" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 71 "ideal_product_naive_type_sind" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 29 "ideal_product_subset_intersection" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 33 "ideal_product_subset_l" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 31 "ideal_product_subset_pres_l" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 30 "ideal_product_subset_pres_r" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 32 "ideal_product_subset_r" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 18 "ideal_product_unit_l" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 17 "ideal_product_unit_r" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 46 "ideal_quotient" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 2 "ideal_quotient_intersection" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 3 "ideal_quotient_product" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 8 "ideal_quotient_product_left" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 10 "ideal_quotient_subset" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 9 "ideal_quotient_subset_prod" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 4 "ideal_quotient_sum" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 7 "ideal_quotient_trivial" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 6 "ideal_quotient_unit_bottom" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 5 "ideal_quotient_unit_top" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 97 "ideal_subgroup" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 50 "ideal_subset" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 41 "ideal_subset_antisymm" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 78 "ideal_sum" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 22 "ideal_sum_comm" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 77 "ideal_sum_ind" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 27 "ideal_sum_self" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 28 "ideal_sum_smallest" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 35 "ideal_sum_subset_l" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 26 "ideal_sum_subset_pres_l" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 25 "ideal_sum_subset_pres_r" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 34 "ideal_sum_subset_r" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 21 "ideal_sum_zero_l" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 20 "ideal_sum_zero_r" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 82 "ideal_unit" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 39 "ideal_unit_subset" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 84 "ideal_zero" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 40 "ideal_zero_subset" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 43 "ishprop_coprime" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 54 "ishprop_ideal_eq" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 104 "ishprop_isideal" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 94 "ishset_ideal" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 105 "isideal" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 83 "isideal_maximal_subgroup" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 81 "isideal_subgroup_intersection" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 79 "isideal_subgroup_product" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 85 "isideal_trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 95 "issig_Ideal" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 53 "reflexive_ideal_eq" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 49 "reflexive_ideal_subset" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 52 "symmetric_ideal_eq" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 51 "transitive_ideal_eq" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 48 "transitive_ideal_subset" [body=yes, kind=cnst, prop=no, path="Ideal", ];
N: 103 "Ideal" [kind=inductive, prop=no, path="Ideal", ];
N: 68 "ideal_generated_type" [kind=inductive, prop=no, path="Ideal", ];
N: 76 "ideal_product_naive_type" [kind=inductive, prop=no, path="Ideal", ];
N: 102 "Build_Ideal" [kind=construct, prop=no, path="Ideal", ];
N: 67 "igt_in" [kind=construct, prop=no, path="Ideal", ];
N: 75 "ipn_in" [kind=construct, prop=no, path="Ideal", ];
N: 66 "igt_zero" [kind=construct, prop=no, path="Ideal", ];
N: 65 "igt_add_neg" [kind=construct, prop=no, path="Ideal", ];
N: 64 "igt_mul" [kind=construct, prop=no, path="Ideal", ];
E: 1 45 [weight=6, ];
E: 1 50 [weight=4, ];
E: 1 103 [weight=4, ];
E: 2 41 [weight=1, ];
E: 2 46 [weight=22, ];
E: 2 50 [weight=2, ];
E: 2 56 [weight=1, ];
E: 2 80 [weight=11, ];
E: 2 103 [weight=6, ];
E: 3 41 [weight=1, ];
E: 3 46 [weight=19, ];
E: 3 50 [weight=2, ];
E: 3 56 [weight=1, ];
E: 3 70 [weight=7, ];
E: 3 75 [weight=1, ];
E: 3 76 [weight=14, ];
E: 3 89 [weight=1, ];
E: 3 93 [weight=1, ];
E: 3 103 [weight=6, ];
E: 4 34 [weight=1, ];
E: 4 35 [weight=1, ];
E: 4 41 [weight=1, ];
E: 4 46 [weight=22, ];
E: 4 50 [weight=2, ];
E: 4 56 [weight=1, ];
E: 4 78 [weight=7, ];
E: 4 80 [weight=5, ];
E: 4 89 [weight=1, ];
E: 4 93 [weight=1, ];
E: 4 103 [weight=6, ];
E: 5 46 [weight=2, ];
E: 5 56 [weight=2, ];
E: 5 82 [weight=4, ];
E: 5 103 [weight=2, ];
E: 6 10 [weight=1, ];
E: 6 41 [weight=1, ];
E: 6 46 [weight=4, ];
E: 6 50 [weight=1, ];
E: 6 56 [weight=1, ];
E: 6 82 [weight=5, ];
E: 6 103 [weight=2, ];
E: 7 41 [weight=1, ];
E: 7 46 [weight=5, ];
E: 7 50 [weight=4, ];
E: 7 56 [weight=1, ];
E: 7 82 [weight=5, ];
E: 7 103 [weight=4, ];
E: 7 105 [weight=1, ];
E: 8 9 [weight=1, ];
E: 8 46 [weight=4, ];
E: 8 49 [weight=1, ];
E: 8 50 [weight=3, ];
E: 8 70 [weight=2, ];
E: 8 103 [weight=10, ];
E: 9 46 [weight=6, ];
E: 9 50 [weight=10, ];
E: 9 70 [weight=6, ];
E: 9 75 [weight=1, ];
E: 9 76 [weight=14, ];
E: 9 89 [weight=1, ];
E: 9 93 [weight=1, ];
E: 9 103 [weight=6, ];
E: 10 46 [weight=3, ];
E: 10 50 [weight=2, ];
E: 10 103 [weight=4, ];
E: 10 105 [weight=1, ];
E: 11 12 [weight=1, ];
E: 11 29 [weight=1, ];
E: 11 41 [weight=1, ];
E: 11 44 [weight=2, ];
E: 11 47 [weight=1, ];
E: 11 52 [weight=1, ];
E: 11 56 [weight=3, ];
E: 11 70 [weight=2, ];
E: 11 78 [weight=3, ];
E: 11 80 [weight=2, ];
E: 11 82 [weight=3, ];
E: 11 103 [weight=5, ];
E: 12 13 [weight=1, ];
E: 12 17 [weight=1, ];
E: 12 30 [weight=1, ];
E: 12 47 [weight=1, ];
E: 12 48 [weight=2, ];
E: 12 50 [weight=3, ];
E: 12 52 [weight=1, ];
E: 12 70 [weight=8, ];
E: 12 78 [weight=4, ];
E: 12 80 [weight=11, ];
E: 12 82 [weight=7, ];
E: 12 103 [weight=4, ];
E: 13 14 [weight=1, ];
E: 13 19 [weight=1, ];
E: 13 25 [weight=1, ];
E: 13 27 [weight=1, ];
E: 13 47 [weight=2, ];
E: 13 48 [weight=2, ];
E: 13 50 [weight=1, ];
E: 13 70 [weight=20, ];
E: 13 78 [weight=7, ];
E: 13 80 [weight=3, ];
E: 13 103 [weight=4, ];
E: 14 22 [weight=1, ];
E: 14 24 [weight=1, ];
E: 14 25 [weight=1, ];
E: 14 26 [weight=1, ];
E: 14 31 [weight=2, ];
E: 14 37 [weight=1, ];
E: 14 38 [weight=1, ];
E: 14 47 [weight=2, ];
E: 14 48 [weight=3, ];
E: 14 50 [weight=1, ];
E: 14 70 [weight=35, ];
E: 14 78 [weight=15, ];
E: 14 80 [weight=17, ];
E: 14 103 [weight=4, ];
E: 15 36 [weight=1, ];
E: 15 38 [weight=1, ];
E: 15 39 [weight=1, ];
E: 15 41 [weight=1, ];
E: 15 49 [weight=1, ];
E: 15 56 [weight=1, ];
E: 15 80 [weight=2, ];
E: 15 82 [weight=4, ];
E: 15 103 [weight=2, ];
E: 16 36 [weight=1, ];
E: 16 37 [weight=1, ];
E: 16 39 [weight=1, ];
E: 16 41 [weight=1, ];
E: 16 49 [weight=1, ];
E: 16 56 [weight=1, ];
E: 16 80 [weight=2, ];
E: 16 82 [weight=4, ];
E: 16 103 [weight=2, ];
E: 17 33 [weight=1, ];
E: 17 41 [weight=1, ];
E: 17 50 [weight=1, ];
E: 17 56 [weight=1, ];
E: 17 70 [weight=4, ];
E: 17 75 [weight=1, ];
E: 17 76 [weight=2, ];
E: 17 82 [weight=8, ];
E: 17 103 [weight=2, ];
E: 18 32 [weight=1, ];
E: 18 41 [weight=1, ];
E: 18 50 [weight=1, ];
E: 18 56 [weight=1, ];
E: 18 70 [weight=4, ];
E: 18 75 [weight=1, ];
E: 18 76 [weight=2, ];
E: 18 82 [weight=8, ];
E: 18 103 [weight=2, ];
E: 19 41 [weight=1, ];
E: 19 50 [weight=2, ];
E: 19 56 [weight=1, ];
E: 19 70 [weight=18, ];
E: 19 75 [weight=1, ];
E: 19 76 [weight=15, ];
E: 19 89 [weight=1, ];
E: 19 93 [weight=1, ];
E: 19 103 [weight=8, ];
E: 20 28 [weight=1, ];
E: 20 35 [weight=1, ];
E: 20 40 [weight=1, ];
E: 20 41 [weight=1, ];
E: 20 49 [weight=1, ];
E: 20 56 [weight=1, ];
E: 20 78 [weight=2, ];
E: 20 84 [weight=4, ];
E: 20 103 [weight=2, ];
E: 21 28 [weight=1, ];
E: 21 34 [weight=1, ];
E: 21 40 [weight=1, ];
E: 21 41 [weight=1, ];
E: 21 49 [weight=1, ];
E: 21 56 [weight=1, ];
E: 21 78 [weight=2, ];
E: 21 84 [weight=4, ];
E: 21 103 [weight=2, ];
E: 22 28 [weight=2, ];
E: 22 34 [weight=2, ];
E: 22 35 [weight=2, ];
E: 22 41 [weight=1, ];
E: 22 56 [weight=1, ];
E: 22 78 [weight=6, ];
E: 22 103 [weight=4, ];
E: 23 28 [weight=1, ];
E: 23 31 [weight=2, ];
E: 23 34 [weight=1, ];
E: 23 35 [weight=1, ];
E: 23 41 [weight=1, ];
E: 23 50 [weight=1, ];
E: 23 56 [weight=1, ];
E: 23 70 [weight=67, ];
E: 23 75 [weight=2, ];
E: 23 76 [weight=16, ];
E: 23 78 [weight=39, ];
E: 23 89 [weight=2, ];
E: 23 93 [weight=2, ];
E: 23 103 [weight=6, ];
E: 24 28 [weight=1, ];
E: 24 30 [weight=2, ];
E: 24 34 [weight=1, ];
E: 24 35 [weight=1, ];
E: 24 41 [weight=1, ];
E: 24 50 [weight=1, ];
E: 24 56 [weight=1, ];
E: 24 70 [weight=67, ];
E: 24 75 [weight=2, ];
E: 24 76 [weight=16, ];
E: 24 78 [weight=39, ];
E: 24 89 [weight=2, ];
E: 24 93 [weight=2, ];
E: 24 103 [weight=6, ];
E: 25 28 [weight=1, ];
E: 25 34 [weight=1, ];
E: 25 35 [weight=1, ];
E: 25 48 [weight=1, ];
E: 25 50 [weight=3, ];
E: 25 78 [weight=4, ];
E: 25 103 [weight=6, ];
E: 26 28 [weight=1, ];
E: 26 34 [weight=1, ];
E: 26 35 [weight=1, ];
E: 26 48 [weight=1, ];
E: 26 50 [weight=3, ];
E: 26 78 [weight=4, ];
E: 26 103 [weight=6, ];
E: 27 28 [weight=1, ];
E: 27 35 [weight=1, ];
E: 27 41 [weight=1, ];
E: 27 49 [weight=2, ];
E: 27 56 [weight=1, ];
E: 27 78 [weight=2, ];
E: 27 103 [weight=2, ];
E: 28 50 [weight=5, ];
E: 28 77 [weight=1, ];
E: 28 78 [weight=5, ];
E: 28 89 [weight=1, ];
E: 28 93 [weight=1, ];
E: 28 103 [weight=6, ];
E: 29 32 [weight=1, ];
E: 29 33 [weight=1, ];
E: 29 36 [weight=1, ];
E: 29 50 [weight=1, ];
E: 29 70 [weight=2, ];
E: 29 80 [weight=1, ];
E: 29 103 [weight=4, ];
E: 30 50 [weight=4, ];
E: 30 70 [weight=13, ];
E: 30 75 [weight=1, ];
E: 30 76 [weight=15, ];
E: 30 89 [weight=1, ];
E: 30 93 [weight=1, ];
E: 30 103 [weight=6, ];
E: 31 50 [weight=4, ];
E: 31 70 [weight=13, ];
E: 31 75 [weight=1, ];
E: 31 76 [weight=15, ];
E: 31 89 [weight=1, ];
E: 31 93 [weight=1, ];
E: 31 103 [weight=6, ];
E: 32 50 [weight=2, ];
E: 32 70 [weight=3, ];
E: 32 76 [weight=12, ];
E: 32 89 [weight=1, ];
E: 32 93 [weight=1, ];
E: 32 103 [weight=4, ];
E: 32 105 [weight=1, ];
E: 33 50 [weight=2, ];
E: 33 70 [weight=3, ];
E: 33 76 [weight=12, ];
E: 33 89 [weight=1, ];
E: 33 93 [weight=1, ];
E: 33 103 [weight=4, ];
E: 33 105 [weight=1, ];
E: 34 50 [weight=2, ];
E: 34 78 [weight=2, ];
E: 34 103 [weight=4, ];
E: 35 50 [weight=2, ];
E: 35 78 [weight=2, ];
E: 35 103 [weight=4, ];
E: 36 50 [weight=6, ];
E: 36 80 [weight=2, ];
E: 36 103 [weight=6, ];
E: 37 50 [weight=2, ];
E: 37 80 [weight=2, ];
E: 37 103 [weight=4, ];
E: 38 50 [weight=2, ];
E: 38 80 [weight=2, ];
E: 38 103 [weight=4, ];
E: 39 50 [weight=2, ];
E: 39 82 [weight=3, ];
E: 39 103 [weight=2, ];
E: 40 50 [weight=2, ];
E: 40 84 [weight=3, ];
E: 40 93 [weight=1, ];
E: 40 103 [weight=2, ];
E: 41 50 [weight=4, ];
E: 41 56 [weight=2, ];
E: 41 103 [weight=4, ];
E: 42 43 [weight=2, ];
E: 42 44 [weight=6, ];
E: 42 78 [weight=7, ];
E: 42 82 [weight=3, ];
E: 42 89 [weight=4, ];
E: 42 93 [weight=4, ];
E: 42 103 [weight=4, ];
E: 42 105 [weight=2, ];
E: 43 44 [weight=2, ];
E: 43 54 [weight=1, ];
E: 43 78 [weight=1, ];
E: 43 82 [weight=1, ];
E: 43 103 [weight=4, ];
E: 44 56 [weight=1, ];
E: 44 78 [weight=1, ];
E: 44 82 [weight=1, ];
E: 44 103 [weight=4, ];
E: 45 46 [weight=1, ];
E: 45 84 [weight=1, ];
E: 45 103 [weight=3, ];
E: 46 89 [weight=4, ];
E: 46 93 [weight=4, ];
E: 46 102 [weight=1, ];
E: 46 103 [weight=5, ];
E: 46 105 [weight=1, ];
E: 46 106 [weight=1, ];
E: 47 50 [weight=2, ];
E: 47 56 [weight=2, ];
E: 47 103 [weight=4, ];
E: 48 50 [weight=5, ];
E: 48 103 [weight=5, ];
E: 49 50 [weight=1, ];
E: 49 103 [weight=2, ];
E: 50 103 [weight=4, ];
E: 51 56 [weight=5, ];
E: 51 103 [weight=5, ];
E: 52 56 [weight=4, ];
E: 52 103 [weight=4, ];
E: 53 56 [weight=3, ];
E: 53 103 [weight=3, ];
E: 54 56 [weight=1, ];
E: 54 103 [weight=4, ];
E: 55 56 [weight=3, ];
E: 55 95 [weight=11, ];
E: 55 103 [weight=19, ];
E: 55 104 [weight=1, ];
E: 55 106 [weight=16, ];
E: 56 103 [weight=4, ];
E: 57 59 [weight=1, ];
E: 57 103 [weight=1, ];
E: 58 59 [weight=1, ];
E: 58 103 [weight=1, ];
E: 59 64 [weight=1, ];
E: 59 65 [weight=2, ];
E: 59 66 [weight=2, ];
E: 59 68 [weight=38, ];
E: 59 102 [weight=1, ];
E: 59 103 [weight=1, ];
E: 59 106 [weight=1, ];
E: 60 64 [weight=2, ];
E: 60 65 [weight=2, ];
E: 60 66 [weight=2, ];
E: 60 67 [weight=2, ];
E: 60 68 [weight=12, ];
E: 61 63 [weight=1, ];
E: 61 64 [weight=1, ];
E: 61 65 [weight=1, ];
E: 61 66 [weight=1, ];
E: 61 67 [weight=1, ];
E: 61 68 [weight=6, ];
E: 62 64 [weight=2, ];
E: 62 65 [weight=2, ];
E: 62 66 [weight=2, ];
E: 62 67 [weight=2, ];
E: 62 68 [weight=12, ];
E: 63 64 [weight=2, ];
E: 63 65 [weight=2, ];
E: 63 66 [weight=2, ];
E: 63 67 [weight=2, ];
E: 63 68 [weight=12, ];
E: 69 102 [weight=1, ];
E: 69 103 [weight=1, ];
E: 69 106 [weight=1, ];
E: 70 75 [weight=1, ];
E: 70 76 [weight=22, ];
E: 70 102 [weight=1, ];
E: 70 103 [weight=5, ];
E: 70 105 [weight=1, ];
E: 70 106 [weight=1, ];
E: 71 75 [weight=2, ];
E: 71 76 [weight=5, ];
E: 71 103 [weight=4, ];
E: 72 74 [weight=1, ];
E: 72 75 [weight=1, ];
E: 72 76 [weight=3, ];
E: 72 103 [weight=4, ];
E: 73 75 [weight=2, ];
E: 73 76 [weight=5, ];
E: 73 103 [weight=4, ];
E: 74 75 [weight=2, ];
E: 74 76 [weight=5, ];
E: 74 103 [weight=4, ];
E: 75 103 [weight=2, ];
E: 76 103 [weight=2, ];
E: 77 78 [weight=5, ];
E: 77 103 [weight=4, ];
E: 78 79 [weight=1, ];
E: 78 102 [weight=1, ];
E: 78 103 [weight=5, ];
E: 79 93 [weight=1, ];
E: 79 103 [weight=4, ];
E: 79 105 [weight=3, ];
E: 79 106 [weight=2, ];
E: 80 81 [weight=1, ];
E: 80 102 [weight=1, ];
E: 80 103 [weight=5, ];
E: 81 103 [weight=4, ];
E: 81 105 [weight=2, ];
E: 81 106 [weight=2, ];
E: 82 83 [weight=1, ];
E: 82 102 [weight=1, ];
E: 82 103 [weight=1, ];
E: 83 106 [weight=1, ];
E: 84 85 [weight=1, ];
E: 84 102 [weight=1, ];
E: 84 103 [weight=1, ];
E: 85 106 [weight=2, ];
E: 86 103 [weight=2, ];
E: 87 103 [weight=2, ];
E: 88 103 [weight=2, ];
E: 89 103 [weight=2, ];
E: 90 103 [weight=2, ];
E: 91 103 [weight=2, ];
E: 92 103 [weight=2, ];
E: 93 103 [weight=2, ];
E: 94 95 [weight=1, ];
E: 94 103 [weight=2, ];
E: 94 104 [weight=1, ];
E: 94 106 [weight=5, ];
E: 95 102 [weight=8, ];
E: 95 103 [weight=12, ];
E: 95 106 [weight=21, ];
E: 96 103 [weight=2, ];
E: 96 106 [weight=1, ];
E: 97 103 [weight=2, ];
E: 98 102 [weight=2, ];
E: 98 103 [weight=4, ];
E: 98 106 [weight=2, ];
E: 99 101 [weight=1, ];
E: 99 102 [weight=1, ];
E: 99 103 [weight=3, ];
E: 99 106 [weight=1, ];
E: 100 102 [weight=2, ];
E: 100 103 [weight=4, ];
E: 100 106 [weight=2, ];
E: 101 102 [weight=2, ];
E: 101 103 [weight=4, ];
E: 101 106 [weight=2, ];
E: 102 106 [weight=1, ];
E: 103 106 [weight=1, ];
E: 104 106 [weight=2, ];
E: 105 106 [weight=2, ];
