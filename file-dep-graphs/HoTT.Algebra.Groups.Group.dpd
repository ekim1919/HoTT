N: 86 "Build_GroupHomomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 71 "Build_GroupIsomorphism'" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 7 "FactorsThroughFreeGroup" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 98 "GroupHomomorphism_ind" [body=yes, kind=cnst, prop=yes, path="Group", ];
N: 97 "GroupHomomorphism_rec" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 99 "GroupHomomorphism_rect" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 96 "GroupHomomorphism_sind" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 81 "GroupIsomorphism_ind" [body=yes, kind=cnst, prop=yes, path="Group", ];
N: 80 "GroupIsomorphism_rec" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 82 "GroupIsomorphism_rect" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 79 "GroupIsomorphism_sind" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 120 "Group_ind" [body=yes, kind=cnst, prop=yes, path="Group", ];
N: 119 "Group_rec" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 121 "Group_rect" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 118 "Group_sind" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 4 "IsFreeGroup" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 6 "IsFreeGroupOn" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 11 "contr_grp_homo_trivial_source" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 9 "contr_grp_homo_trivial_target" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 5 "contr_isfreegroupon" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 75 "equiv_groupisomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 27 "equiv_grp_hfiber" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 64 "equiv_path_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 91 "equiv_path_grouphomomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 74 "equiv_path_groupisomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 114 "group_inverse" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 113 "group_isgroup" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 116 "group_sgop" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 117 "group_type" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 115 "group_unit" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 111 "grp_assoc" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 58 "grp_cancelL" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 44 "grp_cancelL1" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 57 "grp_cancelR" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 43 "grp_cancelR1" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 85 "grp_homo_compose" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 65 "grp_homo_const" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 67 "grp_homo_id" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 87 "grp_homo_inv" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 94 "grp_homo_ishomo" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 95 "grp_homo_map" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 88 "grp_homo_op" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 89 "grp_homo_unit" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 60 "grp_inv_inv" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 108 "grp_inv_l" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 59 "grp_inv_op" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 107 "grp_inv_r" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 78 "grp_iso_homo" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 66 "grp_iso_id" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 72 "grp_iso_inverse" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 19 "grp_iso_prod" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 48 "grp_moveL_1M" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 47 "grp_moveL_M1" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 55 "grp_moveL_Mg" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 49 "grp_moveL_Vg" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 56 "grp_moveL_gM" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 50 "grp_moveL_gV" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 46 "grp_moveR_1M" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 45 "grp_moveR_M1" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 53 "grp_moveR_Mg" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 51 "grp_moveR_Vg" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 54 "grp_moveR_gM" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 52 "grp_moveR_gV" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 42 "grp_pow" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 23 "grp_prod" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 22 "grp_prod_corec" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 21 "grp_prod_inl" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 20 "grp_prod_inr" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 16 "grp_prod_pr1" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 15 "grp_prod_pr2" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 26 "grp_trivial" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 24 "grp_trivial_corec" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 25 "grp_trivial_rec" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 110 "grp_unit_l" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 109 "grp_unit_r" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 31 "hasequivs_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 32 "hasmorext_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 104 "identity_unique" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 103 "identity_unique'" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 102 "inverse_unique" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 40 "is01cat_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 37 "is01cat_grouphomomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 35 "is0functor_postcomp_grouphomomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 34 "is0functor_precomp_grouphomomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 28 "is0functor_ptype_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 29 "is0functor_type_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 36 "is0gpd_grouphomomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 33 "is1cat_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 30 "is1cat_strong" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 39 "is2graph_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 1 "isembedding_grouphomomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 18 "isembedding_grp_prod_inl" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 17 "isembedding_grp_prod_inr" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 61 "isequiv_group_inverse" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 77 "isequiv_group_iso" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 63 "isequiv_group_left_op" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 62 "isequiv_group_right_op" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 3 "isfreegroup" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 2 "isfreegroup_isfreegroupon" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 41 "isgraph_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 38 "isgraph_grouphomomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 8 "ishprop_grp_iso_trivial" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 90 "ishset_grouphomomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 73 "ishset_groupisomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 12 "isinitial_grp_trivial" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 106 "ispointed_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 92 "issig_GroupHomomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 76 "issig_GroupIsomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 112 "issig_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 14 "issurj_grp_prod_pr1" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 13 "issurj_grp_prod_pr2" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 10 "isterminal_grp_trivial" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 93 "pmap_GroupHomomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 105 "ptype_group" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 70 "reflexive_groupisomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 69 "symmetric_groupisomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 68 "transitive_groupisomorphism" [body=yes, kind=cnst, prop=no, path="Group", ];
N: 123 "Group" [kind=inductive, prop=no, path="Group", ];
N: 101 "GroupHomomorphism" [kind=inductive, prop=no, path="Group", ];
N: 84 "GroupIsomorphism" [kind=inductive, prop=no, path="Group", ];
N: 122 "Build_Group" [kind=construct, prop=no, path="Group", ];
N: 100 "Build_GroupHomomorphism'" [kind=construct, prop=no, path="Group", ];
N: 83 "Build_GroupIsomorphism" [kind=construct, prop=no, path="Group", ];
E: 1 41 [weight=2, ];
E: 1 48 [weight=1, ];
E: 1 87 [weight=1, ];
E: 1 88 [weight=1, ];
E: 1 89 [weight=1, ];
E: 1 123 [weight=4, ];
E: 2 4 [weight=1, ];
E: 2 6 [weight=4, ];
E: 2 123 [weight=2, ];
E: 3 4 [weight=2, ];
E: 3 6 [weight=1, ];
E: 3 123 [weight=2, ];
E: 4 6 [weight=1, ];
E: 4 123 [weight=2, ];
E: 5 6 [weight=2, ];
E: 5 7 [weight=1, ];
E: 5 123 [weight=3, ];
E: 6 7 [weight=1, ];
E: 6 123 [weight=3, ];
E: 7 41 [weight=2, ];
E: 7 117 [weight=1, ];
E: 7 123 [weight=4, ];
E: 8 26 [weight=14, ];
E: 8 31 [weight=4, ];
E: 8 33 [weight=4, ];
E: 8 39 [weight=4, ];
E: 8 40 [weight=4, ];
E: 8 41 [weight=4, ];
E: 8 74 [weight=1, ];
E: 8 84 [weight=5, ];
E: 8 117 [weight=4, ];
E: 8 123 [weight=6, ];
E: 9 10 [weight=4, ];
E: 9 26 [weight=6, ];
E: 9 91 [weight=1, ];
E: 9 101 [weight=3, ];
E: 9 117 [weight=2, ];
E: 9 123 [weight=2, ];
E: 10 24 [weight=3, ];
E: 10 26 [weight=17, ];
E: 10 33 [weight=6, ];
E: 10 39 [weight=4, ];
E: 10 40 [weight=2, ];
E: 10 41 [weight=10, ];
E: 10 95 [weight=2, ];
E: 10 123 [weight=5, ];
E: 11 25 [weight=5, ];
E: 11 26 [weight=8, ];
E: 11 89 [weight=1, ];
E: 11 91 [weight=1, ];
E: 11 101 [weight=3, ];
E: 11 117 [weight=3, ];
E: 11 123 [weight=2, ];
E: 12 25 [weight=3, ];
E: 12 26 [weight=20, ];
E: 12 33 [weight=6, ];
E: 12 39 [weight=4, ];
E: 12 40 [weight=2, ];
E: 12 41 [weight=10, ];
E: 12 89 [weight=1, ];
E: 12 95 [weight=2, ];
E: 12 123 [weight=5, ];
E: 13 15 [weight=1, ];
E: 13 20 [weight=2, ];
E: 13 23 [weight=4, ];
E: 13 123 [weight=4, ];
E: 14 16 [weight=1, ];
E: 14 21 [weight=2, ];
E: 14 23 [weight=4, ];
E: 14 123 [weight=4, ];
E: 15 23 [weight=6, ];
E: 15 86 [weight=1, ];
E: 15 101 [weight=1, ];
E: 15 123 [weight=4, ];
E: 16 23 [weight=6, ];
E: 16 86 [weight=1, ];
E: 16 101 [weight=1, ];
E: 16 123 [weight=4, ];
E: 17 20 [weight=5, ];
E: 17 23 [weight=5, ];
E: 17 123 [weight=4, ];
E: 18 21 [weight=5, ];
E: 18 23 [weight=5, ];
E: 18 123 [weight=4, ];
E: 19 23 [weight=8, ];
E: 19 31 [weight=5, ];
E: 19 33 [weight=5, ];
E: 19 39 [weight=5, ];
E: 19 40 [weight=5, ];
E: 19 41 [weight=5, ];
E: 19 71 [weight=1, ];
E: 19 88 [weight=2, ];
E: 19 123 [weight=13, ];
E: 20 22 [weight=1, ];
E: 20 23 [weight=1, ];
E: 20 65 [weight=1, ];
E: 20 67 [weight=1, ];
E: 20 101 [weight=1, ];
E: 20 123 [weight=4, ];
E: 21 22 [weight=1, ];
E: 21 23 [weight=1, ];
E: 21 65 [weight=1, ];
E: 21 67 [weight=1, ];
E: 21 101 [weight=1, ];
E: 21 123 [weight=4, ];
E: 22 23 [weight=4, ];
E: 22 86 [weight=1, ];
E: 22 88 [weight=2, ];
E: 22 101 [weight=5, ];
E: 22 123 [weight=6, ];
E: 23 107 [weight=2, ];
E: 23 108 [weight=2, ];
E: 23 109 [weight=2, ];
E: 23 110 [weight=2, ];
E: 23 111 [weight=2, ];
E: 23 122 [weight=1, ];
E: 23 123 [weight=5, ];
E: 24 26 [weight=7, ];
E: 24 86 [weight=1, ];
E: 24 101 [weight=1, ];
E: 24 110 [weight=1, ];
E: 24 123 [weight=2, ];
E: 25 26 [weight=8, ];
E: 25 86 [weight=1, ];
E: 25 101 [weight=1, ];
E: 25 110 [weight=1, ];
E: 25 123 [weight=2, ];
E: 26 122 [weight=1, ];
E: 26 123 [weight=1, ];
E: 27 62 [weight=2, ];
E: 27 87 [weight=2, ];
E: 27 88 [weight=2, ];
E: 27 101 [weight=2, ];
E: 27 123 [weight=4, ];
E: 28 41 [weight=2, ];
E: 28 93 [weight=1, ];
E: 28 105 [weight=2, ];
E: 28 123 [weight=2, ];
E: 29 41 [weight=2, ];
E: 29 95 [weight=1, ];
E: 29 117 [weight=2, ];
E: 29 123 [weight=2, ];
E: 30 34 [weight=1, ];
E: 30 35 [weight=1, ];
E: 30 36 [weight=1, ];
E: 30 37 [weight=1, ];
E: 30 39 [weight=2, ];
E: 30 40 [weight=36, ];
E: 30 41 [weight=9, ];
E: 30 91 [weight=3, ];
E: 30 101 [weight=3, ];
E: 30 117 [weight=9, ];
E: 30 123 [weight=20, ];
E: 31 33 [weight=10, ];
E: 31 36 [weight=1, ];
E: 31 37 [weight=1, ];
E: 31 39 [weight=7, ];
E: 31 40 [weight=12, ];
E: 31 41 [weight=17, ];
E: 31 72 [weight=3, ];
E: 31 83 [weight=1, ];
E: 31 84 [weight=12, ];
E: 31 95 [weight=3, ];
E: 31 101 [weight=1, ];
E: 31 123 [weight=39, ];
E: 32 33 [weight=6, ];
E: 32 36 [weight=4, ];
E: 32 37 [weight=4, ];
E: 32 39 [weight=8, ];
E: 32 40 [weight=2, ];
E: 32 41 [weight=13, ];
E: 32 91 [weight=4, ];
E: 32 95 [weight=8, ];
E: 32 101 [weight=14, ];
E: 32 117 [weight=4, ];
E: 32 123 [weight=10, ];
E: 33 34 [weight=1, ];
E: 33 35 [weight=1, ];
E: 33 36 [weight=1, ];
E: 33 37 [weight=1, ];
E: 33 39 [weight=2, ];
E: 33 40 [weight=4, ];
E: 33 41 [weight=9, ];
E: 33 95 [weight=3, ];
E: 33 123 [weight=20, ];
E: 34 38 [weight=6, ];
E: 34 40 [weight=4, ];
E: 34 41 [weight=12, ];
E: 34 100 [weight=4, ];
E: 34 123 [weight=10, ];
E: 35 38 [weight=6, ];
E: 35 40 [weight=4, ];
E: 35 41 [weight=12, ];
E: 35 95 [weight=2, ];
E: 35 100 [weight=6, ];
E: 35 123 [weight=10, ];
E: 36 37 [weight=1, ];
E: 36 38 [weight=1, ];
E: 36 41 [weight=1, ];
E: 36 95 [weight=1, ];
E: 36 101 [weight=1, ];
E: 36 123 [weight=4, ];
E: 37 38 [weight=1, ];
E: 37 41 [weight=1, ];
E: 37 95 [weight=1, ];
E: 37 101 [weight=1, ];
E: 37 123 [weight=4, ];
E: 38 41 [weight=1, ];
E: 38 95 [weight=1, ];
E: 38 101 [weight=1, ];
E: 38 123 [weight=4, ];
E: 39 41 [weight=1, ];
E: 39 95 [weight=1, ];
E: 39 101 [weight=1, ];
E: 39 123 [weight=3, ];
E: 40 41 [weight=2, ];
E: 40 67 [weight=1, ];
E: 40 85 [weight=1, ];
E: 40 123 [weight=2, ];
E: 41 101 [weight=1, ];
E: 41 123 [weight=2, ];
E: 42 123 [weight=3, ];
E: 43 57 [weight=1, ];
E: 43 110 [weight=1, ];
E: 43 123 [weight=2, ];
E: 44 58 [weight=1, ];
E: 44 109 [weight=1, ];
E: 44 123 [weight=2, ];
E: 45 53 [weight=1, ];
E: 45 109 [weight=1, ];
E: 45 123 [weight=2, ];
E: 46 54 [weight=1, ];
E: 46 110 [weight=1, ];
E: 46 123 [weight=2, ];
E: 47 55 [weight=1, ];
E: 47 109 [weight=1, ];
E: 47 123 [weight=2, ];
E: 48 56 [weight=1, ];
E: 48 110 [weight=1, ];
E: 48 123 [weight=2, ];
E: 49 63 [weight=1, ];
E: 49 123 [weight=2, ];
E: 50 62 [weight=1, ];
E: 50 123 [weight=2, ];
E: 51 63 [weight=1, ];
E: 51 123 [weight=2, ];
E: 52 62 [weight=1, ];
E: 52 123 [weight=2, ];
E: 53 63 [weight=1, ];
E: 53 123 [weight=2, ];
E: 54 62 [weight=1, ];
E: 54 123 [weight=2, ];
E: 55 63 [weight=1, ];
E: 55 123 [weight=2, ];
E: 56 62 [weight=1, ];
E: 56 123 [weight=2, ];
E: 57 62 [weight=1, ];
E: 57 123 [weight=2, ];
E: 58 63 [weight=1, ];
E: 58 123 [weight=2, ];
E: 59 123 [weight=2, ];
E: 60 123 [weight=2, ];
E: 61 123 [weight=2, ];
E: 62 107 [weight=1, ];
E: 62 108 [weight=1, ];
E: 62 109 [weight=2, ];
E: 62 111 [weight=2, ];
E: 62 123 [weight=2, ];
E: 63 107 [weight=1, ];
E: 63 108 [weight=1, ];
E: 63 110 [weight=2, ];
E: 63 111 [weight=2, ];
E: 63 123 [weight=2, ];
E: 64 76 [weight=1, ];
E: 64 84 [weight=4, ];
E: 64 92 [weight=7, ];
E: 64 101 [weight=14, ];
E: 64 112 [weight=25, ];
E: 64 123 [weight=9, ];
E: 65 86 [weight=1, ];
E: 65 101 [weight=1, ];
E: 65 110 [weight=1, ];
E: 65 123 [weight=4, ];
E: 66 67 [weight=1, ];
E: 66 83 [weight=1, ];
E: 66 84 [weight=1, ];
E: 66 123 [weight=2, ];
E: 67 86 [weight=1, ];
E: 67 101 [weight=1, ];
E: 67 123 [weight=2, ];
E: 68 83 [weight=1, ];
E: 68 84 [weight=4, ];
E: 68 85 [weight=1, ];
E: 68 95 [weight=1, ];
E: 68 123 [weight=5, ];
E: 69 72 [weight=1, ];
E: 69 84 [weight=2, ];
E: 69 123 [weight=4, ];
E: 70 71 [weight=1, ];
E: 70 84 [weight=2, ];
E: 70 123 [weight=3, ];
E: 71 83 [weight=1, ];
E: 71 84 [weight=1, ];
E: 71 86 [weight=1, ];
E: 71 123 [weight=4, ];
E: 72 83 [weight=1, ];
E: 72 84 [weight=3, ];
E: 72 86 [weight=1, ];
E: 72 101 [weight=1, ];
E: 72 123 [weight=4, ];
E: 73 74 [weight=1, ];
E: 73 84 [weight=5, ];
E: 73 117 [weight=3, ];
E: 73 123 [weight=4, ];
E: 74 76 [weight=13, ];
E: 74 84 [weight=9, ];
E: 74 91 [weight=1, ];
E: 74 101 [weight=14, ];
E: 74 117 [weight=3, ];
E: 74 123 [weight=4, ];
E: 75 84 [weight=2, ];
E: 75 123 [weight=4, ];
E: 76 83 [weight=8, ];
E: 76 84 [weight=12, ];
E: 76 101 [weight=39, ];
E: 76 123 [weight=4, ];
E: 77 84 [weight=2, ];
E: 77 123 [weight=4, ];
E: 78 84 [weight=2, ];
E: 78 101 [weight=1, ];
E: 78 123 [weight=4, ];
E: 79 83 [weight=2, ];
E: 79 84 [weight=4, ];
E: 79 101 [weight=2, ];
E: 79 123 [weight=4, ];
E: 80 82 [weight=1, ];
E: 80 83 [weight=1, ];
E: 80 84 [weight=3, ];
E: 80 101 [weight=1, ];
E: 80 123 [weight=4, ];
E: 81 83 [weight=2, ];
E: 81 84 [weight=4, ];
E: 81 101 [weight=2, ];
E: 81 123 [weight=4, ];
E: 82 83 [weight=2, ];
E: 82 84 [weight=4, ];
E: 82 101 [weight=2, ];
E: 82 123 [weight=4, ];
E: 83 101 [weight=1, ];
E: 83 123 [weight=2, ];
E: 84 101 [weight=1, ];
E: 84 123 [weight=2, ];
E: 85 86 [weight=1, ];
E: 85 101 [weight=5, ];
E: 85 123 [weight=6, ];
E: 86 100 [weight=1, ];
E: 86 101 [weight=1, ];
E: 86 109 [weight=1, ];
E: 86 123 [weight=4, ];
E: 87 88 [weight=1, ];
E: 87 89 [weight=1, ];
E: 87 95 [weight=1, ];
E: 87 101 [weight=2, ];
E: 87 102 [weight=1, ];
E: 87 107 [weight=1, ];
E: 87 108 [weight=1, ];
E: 87 123 [weight=4, ];
E: 88 101 [weight=2, ];
E: 88 123 [weight=4, ];
E: 89 101 [weight=2, ];
E: 89 123 [weight=4, ];
E: 90 91 [weight=1, ];
E: 90 101 [weight=5, ];
E: 90 117 [weight=3, ];
E: 90 123 [weight=4, ];
E: 91 92 [weight=15, ];
E: 91 101 [weight=9, ];
E: 91 117 [weight=4, ];
E: 91 123 [weight=4, ];
E: 92 100 [weight=8, ];
E: 92 101 [weight=12, ];
E: 92 123 [weight=4, ];
E: 93 101 [weight=2, ];
E: 93 105 [weight=5, ];
E: 93 123 [weight=4, ];
E: 94 101 [weight=2, ];
E: 94 123 [weight=4, ];
E: 95 101 [weight=2, ];
E: 95 123 [weight=4, ];
E: 96 100 [weight=2, ];
E: 96 101 [weight=4, ];
E: 96 123 [weight=4, ];
E: 97 99 [weight=1, ];
E: 97 100 [weight=1, ];
E: 97 101 [weight=3, ];
E: 97 123 [weight=4, ];
E: 98 100 [weight=2, ];
E: 98 101 [weight=4, ];
E: 98 123 [weight=4, ];
E: 99 100 [weight=2, ];
E: 99 101 [weight=4, ];
E: 99 123 [weight=4, ];
E: 100 123 [weight=2, ];
E: 101 123 [weight=2, ];
E: 103 104 [weight=1, ];
E: 105 106 [weight=1, ];
E: 105 123 [weight=2, ];
E: 106 123 [weight=2, ];
E: 107 123 [weight=2, ];
E: 108 123 [weight=2, ];
E: 109 123 [weight=2, ];
E: 110 123 [weight=2, ];
E: 111 123 [weight=2, ];
E: 112 122 [weight=8, ];
E: 112 123 [weight=12, ];
E: 113 123 [weight=2, ];
E: 114 123 [weight=2, ];
E: 115 123 [weight=2, ];
E: 116 123 [weight=2, ];
E: 117 123 [weight=2, ];
E: 118 122 [weight=2, ];
E: 118 123 [weight=4, ];
E: 119 121 [weight=1, ];
E: 119 122 [weight=1, ];
E: 119 123 [weight=3, ];
E: 120 122 [weight=2, ];
E: 120 123 [weight=4, ];
E: 121 122 [weight=2, ];
E: 121 123 [weight=4, ];
