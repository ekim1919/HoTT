N: 60 "AbSES" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 75 "AbSES'_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 74 "AbSES'_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 76 "AbSES'_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 73 "AbSES'_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 17 "AbSESMorphism_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 16 "AbSESMorphism_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 18 "AbSESMorphism_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 15 "AbSESMorphism_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 66 "Build_AbSES" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 26 "abses_ap_fmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 23 "abses_endomorphism_trivial" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 1 "abses_from_inclusion" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 32 "abses_path_compose_beta" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 53 "abses_path_data" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 44 "abses_path_data_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 33 "abses_path_data_V" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 43 "abses_path_data_compose" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 31 "abses_path_data_compose_beta" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 41 "abses_path_data_inverse" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 59 "abses_path_data_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 52 "abses_path_data_to_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 8 "absesmorphism_compose" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 14 "component1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 13 "component2" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 12 "component3" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 50 "equiv_path_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 34 "equiv_path_absesV_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 35 "equiv_path_abses_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 51 "equiv_path_abses_data" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 57 "equiv_path_abses_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 30 "equiv_path_data_homotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 24 "equiv_ptransformation_phomotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 36 "hasmorext_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 21 "hom_loops_data_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 2 "iff_abses_trivial_split" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 71 "inclusion" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 42 "is01cat_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 47 "is01cat_abses_path_data" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 40 "is0gpd_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 46 "is0gpd_abses_path_data" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 38 "is1cat_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 37 "is1gpd_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 39 "is2graph_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 62 "iscomplex_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 69 "isembedding_inclusion" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 67 "isexact_inclusion_projection" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 45 "isgraph_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 48 "isgraph_abses_path_data" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 61 "ispointed_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 9 "issig_AbSESMorphism" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 63 "issig_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 65 "issig_abses_do_not_print" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 64 "issig_abses_helper" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 68 "issurjection_projection" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 56 "istrunc_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 11 "left_square" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 22 "loops_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 72 "middle" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 49 "path_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 55 "path_abses_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 29 "pmap_abses_const" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 27 "pmap_abses_const_to_pointed" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 70 "projection" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 3 "projection_split_beta" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 4 "projection_split_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 5 "projection_split_iso1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 7 "projection_split_to_kernel" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 6 "projection_split_to_kernel_beta" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 10 "right_square" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 54 "short_five_lemma" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 58 "shuffle_abses_path_data_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 28 "to_pointed" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 25 "to_pointed_compose" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 78 "AbSES'" [kind=inductive, prop=no, path="Core", ];
N: 20 "AbSESMorphism" [kind=inductive, prop=no, path="Core", ];
N: 77 "Build_AbSES'" [kind=construct, prop=no, path="Core", ];
N: 19 "Build_AbSESMorphism" [kind=construct, prop=no, path="Core", ];
E: 1 60 [weight=1, ];
E: 1 66 [weight=1, ];
E: 2 3 [weight=1, ];
E: 2 4 [weight=4, ];
E: 2 57 [weight=1, ];
E: 2 59 [weight=5, ];
E: 2 60 [weight=47, ];
E: 2 61 [weight=42, ];
E: 3 4 [weight=2, ];
E: 3 6 [weight=1, ];
E: 3 7 [weight=11, ];
E: 3 60 [weight=2, ];
E: 4 5 [weight=1, ];
E: 4 60 [weight=2, ];
E: 5 7 [weight=6, ];
E: 5 60 [weight=2, ];
E: 6 7 [weight=4, ];
E: 6 60 [weight=2, ];
E: 7 60 [weight=2, ];
E: 8 19 [weight=1, ];
E: 8 20 [weight=5, ];
E: 8 60 [weight=6, ];
E: 9 19 [weight=4, ];
E: 9 20 [weight=19, ];
E: 9 60 [weight=4, ];
E: 10 20 [weight=2, ];
E: 10 60 [weight=4, ];
E: 11 20 [weight=2, ];
E: 11 60 [weight=4, ];
E: 12 20 [weight=2, ];
E: 12 60 [weight=4, ];
E: 13 20 [weight=2, ];
E: 13 60 [weight=4, ];
E: 14 20 [weight=2, ];
E: 14 60 [weight=4, ];
E: 15 19 [weight=2, ];
E: 15 20 [weight=4, ];
E: 15 60 [weight=4, ];
E: 16 18 [weight=1, ];
E: 16 19 [weight=1, ];
E: 16 20 [weight=3, ];
E: 16 60 [weight=4, ];
E: 17 19 [weight=2, ];
E: 17 20 [weight=4, ];
E: 17 60 [weight=4, ];
E: 18 19 [weight=2, ];
E: 18 20 [weight=4, ];
E: 18 60 [weight=4, ];
E: 19 60 [weight=2, ];
E: 20 60 [weight=2, ];
E: 21 53 [weight=1, ];
E: 21 60 [weight=2, ];
E: 21 62 [weight=2, ];
E: 21 78 [weight=4, ];
E: 22 23 [weight=1, ];
E: 22 50 [weight=1, ];
E: 22 53 [weight=1, ];
E: 22 60 [weight=26, ];
E: 22 61 [weight=24, ];
E: 23 60 [weight=633, ];
E: 23 61 [weight=633, ];
E: 24 28 [weight=191, ];
E: 24 30 [weight=4, ];
E: 24 31 [weight=1, ];
E: 24 33 [weight=1, ];
E: 24 37 [weight=2, ];
E: 24 38 [weight=12, ];
E: 24 39 [weight=8, ];
E: 24 40 [weight=10, ];
E: 24 41 [weight=16, ];
E: 24 42 [weight=16, ];
E: 24 43 [weight=11, ];
E: 24 45 [weight=27, ];
E: 24 57 [weight=18, ];
E: 24 59 [weight=2, ];
E: 24 60 [weight=687, ];
E: 24 61 [weight=70, ];
E: 25 26 [weight=1, ];
E: 25 28 [weight=95, ];
E: 25 31 [weight=1, ];
E: 25 36 [weight=1, ];
E: 25 38 [weight=9, ];
E: 25 39 [weight=10, ];
E: 25 42 [weight=80, ];
E: 25 43 [weight=5, ];
E: 25 45 [weight=81, ];
E: 25 46 [weight=1, ];
E: 25 47 [weight=1, ];
E: 25 57 [weight=15, ];
E: 25 59 [weight=2, ];
E: 25 60 [weight=517, ];
E: 25 61 [weight=89, ];
E: 25 78 [weight=6, ];
E: 26 35 [weight=1, ];
E: 26 36 [weight=1, ];
E: 26 38 [weight=9, ];
E: 26 39 [weight=7, ];
E: 26 40 [weight=2, ];
E: 26 42 [weight=16, ];
E: 26 44 [weight=1, ];
E: 26 45 [weight=15, ];
E: 26 46 [weight=1, ];
E: 26 57 [weight=28, ];
E: 26 59 [weight=15, ];
E: 26 60 [weight=76, ];
E: 27 28 [weight=9, ];
E: 27 29 [weight=9, ];
E: 27 35 [weight=1, ];
E: 27 60 [weight=83, ];
E: 27 78 [weight=3, ];
E: 28 42 [weight=4, ];
E: 28 45 [weight=4, ];
E: 28 57 [weight=1, ];
E: 28 60 [weight=11, ];
E: 28 61 [weight=6, ];
E: 29 42 [weight=6, ];
E: 29 45 [weight=6, ];
E: 29 60 [weight=11, ];
E: 29 61 [weight=7, ];
E: 30 45 [weight=3, ];
E: 30 57 [weight=1, ];
E: 30 60 [weight=8, ];
E: 31 32 [weight=1, ];
E: 31 43 [weight=4, ];
E: 31 57 [weight=30, ];
E: 31 59 [weight=11, ];
E: 31 60 [weight=22, ];
E: 32 35 [weight=1, ];
E: 32 43 [weight=8, ];
E: 32 44 [weight=5, ];
E: 32 57 [weight=23, ];
E: 32 59 [weight=1, ];
E: 32 60 [weight=39, ];
E: 33 34 [weight=1, ];
E: 33 35 [weight=1, ];
E: 33 36 [weight=1, ];
E: 33 37 [weight=1, ];
E: 33 38 [weight=1, ];
E: 33 39 [weight=1, ];
E: 33 40 [weight=3, ];
E: 33 41 [weight=8, ];
E: 33 42 [weight=7, ];
E: 33 45 [weight=4, ];
E: 33 57 [weight=28, ];
E: 33 59 [weight=8, ];
E: 33 60 [weight=43, ];
E: 33 78 [weight=1, ];
E: 34 35 [weight=1, ];
E: 34 42 [weight=3, ];
E: 34 57 [weight=7, ];
E: 34 59 [weight=5, ];
E: 34 60 [weight=9, ];
E: 34 78 [weight=1, ];
E: 35 44 [weight=7, ];
E: 35 57 [weight=11, ];
E: 35 59 [weight=3, ];
E: 35 60 [weight=14, ];
E: 36 38 [weight=14, ];
E: 36 39 [weight=11, ];
E: 36 42 [weight=2, ];
E: 36 45 [weight=24, ];
E: 36 46 [weight=3, ];
E: 36 47 [weight=3, ];
E: 36 59 [weight=10, ];
E: 36 60 [weight=10, ];
E: 36 78 [weight=3, ];
E: 37 38 [weight=6, ];
E: 37 39 [weight=4, ];
E: 37 40 [weight=6, ];
E: 37 42 [weight=10, ];
E: 37 45 [weight=8, ];
E: 37 60 [weight=8, ];
E: 38 39 [weight=13, ];
E: 38 42 [weight=20, ];
E: 38 45 [weight=41, ];
E: 38 46 [weight=4, ];
E: 38 47 [weight=4, ];
E: 38 59 [weight=5, ];
E: 38 60 [weight=53, ];
E: 38 78 [weight=8, ];
E: 39 45 [weight=1, ];
E: 39 48 [weight=1, ];
E: 39 60 [weight=3, ];
E: 40 41 [weight=1, ];
E: 40 42 [weight=2, ];
E: 40 45 [weight=2, ];
E: 40 60 [weight=4, ];
E: 41 45 [weight=3, ];
E: 41 60 [weight=4, ];
E: 42 43 [weight=1, ];
E: 42 44 [weight=1, ];
E: 42 45 [weight=4, ];
E: 42 60 [weight=5, ];
E: 43 45 [weight=5, ];
E: 43 60 [weight=6, ];
E: 44 45 [weight=1, ];
E: 44 60 [weight=2, ];
E: 45 59 [weight=1, ];
E: 45 60 [weight=2, ];
E: 46 47 [weight=1, ];
E: 46 48 [weight=1, ];
E: 46 59 [weight=1, ];
E: 46 60 [weight=4, ];
E: 47 48 [weight=1, ];
E: 47 59 [weight=1, ];
E: 47 60 [weight=4, ];
E: 48 59 [weight=1, ];
E: 48 60 [weight=4, ];
E: 49 50 [weight=1, ];
E: 49 60 [weight=5, ];
E: 50 51 [weight=1, ];
E: 50 53 [weight=2, ];
E: 50 57 [weight=1, ];
E: 50 59 [weight=1, ];
E: 50 60 [weight=6, ];
E: 51 52 [weight=4, ];
E: 51 53 [weight=6, ];
E: 51 59 [weight=10, ];
E: 51 60 [weight=4, ];
E: 52 53 [weight=2, ];
E: 52 54 [weight=1, ];
E: 52 59 [weight=1, ];
E: 52 60 [weight=4, ];
E: 53 60 [weight=4, ];
E: 54 60 [weight=4, ];
E: 54 68 [weight=1, ];
E: 54 78 [weight=2, ];
E: 55 57 [weight=1, ];
E: 55 60 [weight=5, ];
E: 56 57 [weight=1, ];
E: 56 59 [weight=1, ];
E: 56 60 [weight=5, ];
E: 57 58 [weight=1, ];
E: 57 59 [weight=2, ];
E: 57 60 [weight=6, ];
E: 57 63 [weight=94, ];
E: 57 78 [weight=2, ];
E: 58 59 [weight=1, ];
E: 58 60 [weight=4, ];
E: 59 60 [weight=4, ];
E: 60 61 [weight=1, ];
E: 60 78 [weight=1, ];
E: 61 66 [weight=1, ];
E: 61 78 [weight=1, ];
E: 62 78 [weight=2, ];
E: 63 64 [weight=1, ];
E: 63 65 [weight=1, ];
E: 63 78 [weight=2, ];
E: 65 77 [weight=8, ];
E: 65 78 [weight=12, ];
E: 66 77 [weight=1, ];
E: 66 78 [weight=1, ];
E: 67 78 [weight=2, ];
E: 68 78 [weight=2, ];
E: 69 78 [weight=2, ];
E: 70 78 [weight=2, ];
E: 71 78 [weight=2, ];
E: 72 78 [weight=2, ];
E: 73 77 [weight=2, ];
E: 73 78 [weight=4, ];
E: 74 76 [weight=1, ];
E: 74 77 [weight=1, ];
E: 74 78 [weight=3, ];
E: 75 77 [weight=2, ];
E: 75 78 [weight=4, ];
E: 76 77 [weight=2, ];
E: 76 78 [weight=4, ];
