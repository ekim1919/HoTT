N: 16 "CutMinusSpec_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 15 "CutMinusSpec_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 17 "CutMinusSpec_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 14 "CutMinusSpec_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 111 "FieldCharacteristic" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 166 "IsAbGroup_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 165 "IsAbGroup_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 167 "IsAbGroup_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 164 "IsAbGroup_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 240 "IsApart_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 239 "IsApart_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 241 "IsApart_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 238 "IsApart_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 41 "IsBoundedJoinPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 107 "IsBoundedJoinSemiLattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 88 "IsBoundedLattice_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 87 "IsBoundedLattice_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 89 "IsBoundedLattice_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 86 "IsBoundedLattice_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 103 "IsBoundedMeetSemiLattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 174 "IsBoundedSemiLattice_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 173 "IsBoundedSemiLattice_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 175 "IsBoundedSemiLattice_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 172 "IsBoundedSemiLattice_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 191 "IsCommutativeMonoid_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 190 "IsCommutativeMonoid_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 192 "IsCommutativeMonoid_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 189 "IsCommutativeMonoid_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 216 "IsCommutativeSemiGroup_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 215 "IsCommutativeSemiGroup_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 217 "IsCommutativeSemiGroup_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 214 "IsCommutativeSemiGroup_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 118 "IsDecField_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 117 "IsDecField_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 119 "IsDecField_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 116 "IsDecField_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 78 "IsDistributiveLattice_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 77 "IsDistributiveLattice_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 79 "IsDistributiveLattice_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 76 "IsDistributiveLattice_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 130 "IsField_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 129 "IsField_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 131 "IsField_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 128 "IsField_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 183 "IsGroup_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 182 "IsGroup_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 184 "IsGroup_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 181 "IsGroup_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 31 "IsInjective" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 139 "IsIntegralDomain_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 138 "IsIntegralDomain_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 140 "IsIntegralDomain_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 137 "IsIntegralDomain_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 45 "IsJoinPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 109 "IsJoinSemiLattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 36 "IsLatticePreserving_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 35 "IsLatticePreserving_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 37 "IsLatticePreserving_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 34 "IsLatticePreserving_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 98 "IsLattice_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 97 "IsLattice_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 99 "IsLattice_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 96 "IsLattice_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 43 "IsMeetPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 105 "IsMeetSemiLattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 66 "IsMonoidPreserving_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 65 "IsMonoidPreserving_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 67 "IsMonoidPreserving_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 64 "IsMonoidPreserving_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 200 "IsMonoid_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 199 "IsMonoid_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 201 "IsMonoid_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 198 "IsMonoid_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 148 "IsRing_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 147 "IsRing_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 149 "IsRing_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 146 "IsRing_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 73 "IsSemiGroupPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 224 "IsSemiGroup_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 223 "IsSemiGroup_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 225 "IsSemiGroup_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 222 "IsSemiGroup_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 208 "IsSemiLattice_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 207 "IsSemiLattice_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 209 "IsSemiLattice_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 206 "IsSemiLattice_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 58 "IsSemiRingPreserving_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 57 "IsSemiRingPreserving_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 59 "IsSemiRingPreserving_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 56 "IsSemiRingPreserving_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 50 "IsSemiRingStrongPreserving_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 49 "IsSemiRingStrongPreserving_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 51 "IsSemiRingStrongPreserving_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 48 "IsSemiRingStrongPreserving_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 158 "IsSemiRing_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 157 "IsSemiRing_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 159 "IsSemiRing_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 156 "IsSemiRing_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 24 "IsStrongInjective_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 23 "IsStrongInjective_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 25 "IsStrongInjective_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 22 "IsStrongInjective_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 71 "IsUnitPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 229 "StrongBinaryExtensionality" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 231 "StrongExtensionality" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 162 "abgroup_commutative" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 163 "abgroup_group" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 234 "apart_cotrans" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 232 "apart_irrefl" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 236 "apart_mere" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 237 "apart_set" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 235 "apart_symmetric" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 106 "bounded_join_semilattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 40 "bounded_join_slmor_monmor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 102 "bounded_meet_semilattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 170 "bounded_semilattice_idempotent" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 171 "bounded_semilattice_mon" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 83 "boundedjoin_meet_absorption" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 85 "boundedlattice_join" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 84 "boundedlattice_meet" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 82 "boundedmeet_join_absorption" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 187 "commonoid_commutative" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 188 "commonoid_mon" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 212 "comsg_comm" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 213 "comsg_sg" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 12 "cut_minus_0" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 13 "cut_minus_le" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 113 "dec_recip_0" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 112 "dec_recip_inverse" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 114 "decfield_nontrivial" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 115 "decfield_ring" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 75 "distr_lattice_lattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 126 "field_apart" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 110 "field_characteristic" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 124 "field_mult_ext" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 123 "field_nontrivial" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 125 "field_plus_ext" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 127 "field_ring" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 180 "group_monoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 30 "injective" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 135 "intdom_nontrivial" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 134 "intdom_nozeroes" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 136 "intdom_ring" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 1 "ishprop_isgroup" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 3 "ishprop_ismonoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 8 "ishprop_ismonoidpreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 5 "ishprop_issemigroup" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 11 "ishprop_issemigrouppreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 7 "ishprop_issemiringpreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 28 "isinj_idmap" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 29 "isinjective_ne" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 9 "issig_IsMonoidPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 10 "issig_IsSemiRingPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 2 "issig_isgroup" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 4 "issig_ismonoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 6 "issig_issemigroup" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 93 "join_meet_absorption" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 74 "join_meet_distr_l" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 108 "join_semilattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 44 "join_slmor_sgmor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 95 "lattice_join" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 94 "lattice_meet" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 33 "latticemor_join_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 32 "latticemor_meet_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 92 "meet_join_absorption" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 104 "meet_semilattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 42 "meet_slmor_sgmor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 63 "monmor_sgmor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 62 "monmor_unitmor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 196 "monoid_left_id" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 195 "monoid_right_id" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 197 "monoid_semigroup" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 179 "negate_l" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 178 "negate_r" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 70 "preserves_mon_unit" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 72 "preserves_sg_op" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 122 "recip_inverse" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 143 "ring_dist" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 145 "ring_group" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 144 "ring_monoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 204 "semilattice_idempotent" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 205 "semilattice_sg" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 154 "semimult_monoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 155 "semiplus_monoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 153 "semiring_distr" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 152 "semiring_left_absorb" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 54 "semiringmor_mult_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 55 "semiringmor_plus_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 220 "sg_ass" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 221 "sg_set" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 228 "strong_binary_extensionality" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 230 "strong_extensionality" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 21 "strong_injective" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 20 "strong_injective_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 47 "strong_semiringmor_sr_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 46 "strong_semiringmor_strong_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 233 "tight_apart" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 19 "CutMinusSpec" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 169 "IsAbGroup" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 243 "IsApart" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 91 "IsBoundedLattice" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 177 "IsBoundedSemiLattice" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 194 "IsCommutativeMonoid" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 219 "IsCommutativeSemiGroup" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 121 "IsDecField" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 81 "IsDistributiveLattice" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 133 "IsField" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 186 "IsGroup" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 142 "IsIntegralDomain" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 101 "IsLattice" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 39 "IsLatticePreserving" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 203 "IsMonoid" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 69 "IsMonoidPreserving" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 151 "IsRing" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 227 "IsSemiGroup" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 211 "IsSemiLattice" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 161 "IsSemiRing" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 61 "IsSemiRingPreserving" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 53 "IsSemiRingStrongPreserving" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 27 "IsStrongInjective" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 18 "Build_CutMinusSpec" [kind=construct, prop=no, path="abstract_algebra", ];
N: 168 "Build_IsAbGroup" [kind=construct, prop=no, path="abstract_algebra", ];
N: 242 "Build_IsApart" [kind=construct, prop=no, path="abstract_algebra", ];
N: 90 "Build_IsBoundedLattice" [kind=construct, prop=no, path="abstract_algebra", ];
N: 176 "Build_IsBoundedSemiLattice" [kind=construct, prop=no, path="abstract_algebra", ];
N: 193 "Build_IsCommutativeMonoid" [kind=construct, prop=no, path="abstract_algebra", ];
N: 218 "Build_IsCommutativeSemiGroup" [kind=construct, prop=no, path="abstract_algebra", ];
N: 120 "Build_IsDecField" [kind=construct, prop=no, path="abstract_algebra", ];
N: 80 "Build_IsDistributiveLattice" [kind=construct, prop=no, path="abstract_algebra", ];
N: 132 "Build_IsField" [kind=construct, prop=no, path="abstract_algebra", ];
N: 185 "Build_IsGroup" [kind=construct, prop=no, path="abstract_algebra", ];
N: 141 "Build_IsIntegralDomain" [kind=construct, prop=no, path="abstract_algebra", ];
N: 100 "Build_IsLattice" [kind=construct, prop=no, path="abstract_algebra", ];
N: 38 "Build_IsLatticePreserving" [kind=construct, prop=no, path="abstract_algebra", ];
N: 202 "Build_IsMonoid" [kind=construct, prop=no, path="abstract_algebra", ];
N: 68 "Build_IsMonoidPreserving" [kind=construct, prop=no, path="abstract_algebra", ];
N: 150 "Build_IsRing" [kind=construct, prop=no, path="abstract_algebra", ];
N: 226 "Build_IsSemiGroup" [kind=construct, prop=no, path="abstract_algebra", ];
N: 210 "Build_IsSemiLattice" [kind=construct, prop=no, path="abstract_algebra", ];
N: 160 "Build_IsSemiRing" [kind=construct, prop=no, path="abstract_algebra", ];
N: 60 "Build_IsSemiRingPreserving" [kind=construct, prop=no, path="abstract_algebra", ];
N: 52 "Build_IsSemiRingStrongPreserving" [kind=construct, prop=no, path="abstract_algebra", ];
N: 26 "Build_IsStrongInjective" [kind=construct, prop=no, path="abstract_algebra", ];
E: 1 2 [weight=15, ];
E: 1 3 [weight=1, ];
E: 1 186 [weight=13, ];
E: 1 203 [weight=62, ];
E: 2 185 [weight=8, ];
E: 2 186 [weight=12, ];
E: 2 203 [weight=44, ];
E: 3 4 [weight=15, ];
E: 3 5 [weight=1, ];
E: 3 203 [weight=13, ];
E: 3 227 [weight=62, ];
E: 4 202 [weight=8, ];
E: 4 203 [weight=12, ];
E: 4 227 [weight=44, ];
E: 5 6 [weight=15, ];
E: 5 227 [weight=13, ];
E: 6 226 [weight=8, ];
E: 6 227 [weight=12, ];
E: 7 8 [weight=2, ];
E: 7 10 [weight=1, ];
E: 7 61 [weight=2, ];
E: 7 69 [weight=7, ];
E: 8 9 [weight=1, ];
E: 8 11 [weight=1, ];
E: 8 69 [weight=2, ];
E: 8 71 [weight=8, ];
E: 8 73 [weight=10, ];
E: 9 68 [weight=8, ];
E: 9 69 [weight=12, ];
E: 9 71 [weight=21, ];
E: 9 73 [weight=39, ];
E: 10 60 [weight=8, ];
E: 10 61 [weight=12, ];
E: 10 69 [weight=60, ];
E: 11 73 [weight=2, ];
E: 12 19 [weight=2, ];
E: 13 19 [weight=2, ];
E: 14 18 [weight=2, ];
E: 14 19 [weight=4, ];
E: 15 17 [weight=1, ];
E: 15 18 [weight=1, ];
E: 15 19 [weight=3, ];
E: 16 18 [weight=2, ];
E: 16 19 [weight=4, ];
E: 17 18 [weight=2, ];
E: 17 19 [weight=4, ];
E: 20 27 [weight=2, ];
E: 20 231 [weight=1, ];
E: 21 27 [weight=2, ];
E: 22 26 [weight=2, ];
E: 22 27 [weight=4, ];
E: 22 231 [weight=2, ];
E: 23 25 [weight=1, ];
E: 23 26 [weight=1, ];
E: 23 27 [weight=3, ];
E: 23 231 [weight=1, ];
E: 24 26 [weight=2, ];
E: 24 27 [weight=4, ];
E: 24 231 [weight=2, ];
E: 25 26 [weight=2, ];
E: 25 27 [weight=4, ];
E: 25 231 [weight=2, ];
E: 26 231 [weight=1, ];
E: 27 231 [weight=1, ];
E: 28 31 [weight=1, ];
E: 29 30 [weight=1, ];
E: 29 31 [weight=2, ];
E: 30 31 [weight=2, ];
E: 32 39 [weight=2, ];
E: 32 43 [weight=1, ];
E: 33 39 [weight=2, ];
E: 33 45 [weight=1, ];
E: 34 38 [weight=2, ];
E: 34 39 [weight=4, ];
E: 34 43 [weight=2, ];
E: 34 45 [weight=2, ];
E: 35 37 [weight=1, ];
E: 35 38 [weight=1, ];
E: 35 39 [weight=3, ];
E: 35 43 [weight=1, ];
E: 35 45 [weight=1, ];
E: 36 38 [weight=2, ];
E: 36 39 [weight=4, ];
E: 36 43 [weight=2, ];
E: 36 45 [weight=2, ];
E: 37 38 [weight=2, ];
E: 37 39 [weight=4, ];
E: 37 43 [weight=2, ];
E: 37 45 [weight=2, ];
E: 38 43 [weight=1, ];
E: 38 45 [weight=1, ];
E: 39 43 [weight=1, ];
E: 39 45 [weight=1, ];
E: 40 41 [weight=2, ];
E: 40 69 [weight=1, ];
E: 41 69 [weight=1, ];
E: 42 43 [weight=2, ];
E: 42 73 [weight=1, ];
E: 43 73 [weight=1, ];
E: 44 45 [weight=2, ];
E: 44 73 [weight=1, ];
E: 45 73 [weight=1, ];
E: 46 53 [weight=2, ];
E: 46 231 [weight=1, ];
E: 47 53 [weight=2, ];
E: 47 61 [weight=1, ];
E: 48 52 [weight=2, ];
E: 48 53 [weight=4, ];
E: 48 61 [weight=2, ];
E: 48 231 [weight=2, ];
E: 49 51 [weight=1, ];
E: 49 52 [weight=1, ];
E: 49 53 [weight=3, ];
E: 49 61 [weight=1, ];
E: 49 231 [weight=1, ];
E: 50 52 [weight=2, ];
E: 50 53 [weight=4, ];
E: 50 61 [weight=2, ];
E: 50 231 [weight=2, ];
E: 51 52 [weight=2, ];
E: 51 53 [weight=4, ];
E: 51 61 [weight=2, ];
E: 51 231 [weight=2, ];
E: 52 61 [weight=1, ];
E: 52 231 [weight=1, ];
E: 53 61 [weight=1, ];
E: 53 231 [weight=1, ];
E: 54 61 [weight=2, ];
E: 54 69 [weight=1, ];
E: 55 61 [weight=2, ];
E: 55 69 [weight=1, ];
E: 56 60 [weight=2, ];
E: 56 61 [weight=4, ];
E: 56 69 [weight=4, ];
E: 57 59 [weight=1, ];
E: 57 60 [weight=1, ];
E: 57 61 [weight=3, ];
E: 57 69 [weight=2, ];
E: 58 60 [weight=2, ];
E: 58 61 [weight=4, ];
E: 58 69 [weight=4, ];
E: 59 60 [weight=2, ];
E: 59 61 [weight=4, ];
E: 59 69 [weight=4, ];
E: 60 69 [weight=2, ];
E: 61 69 [weight=2, ];
E: 62 69 [weight=2, ];
E: 62 71 [weight=1, ];
E: 63 69 [weight=2, ];
E: 63 73 [weight=1, ];
E: 64 68 [weight=2, ];
E: 64 69 [weight=4, ];
E: 64 71 [weight=2, ];
E: 64 73 [weight=2, ];
E: 65 67 [weight=1, ];
E: 65 68 [weight=1, ];
E: 65 69 [weight=3, ];
E: 65 71 [weight=1, ];
E: 65 73 [weight=1, ];
E: 66 68 [weight=2, ];
E: 66 69 [weight=4, ];
E: 66 71 [weight=2, ];
E: 66 73 [weight=2, ];
E: 67 68 [weight=2, ];
E: 67 69 [weight=4, ];
E: 67 71 [weight=2, ];
E: 67 73 [weight=2, ];
E: 68 71 [weight=1, ];
E: 68 73 [weight=1, ];
E: 69 71 [weight=1, ];
E: 69 73 [weight=1, ];
E: 70 71 [weight=2, ];
E: 72 73 [weight=2, ];
E: 74 81 [weight=2, ];
E: 75 81 [weight=2, ];
E: 75 101 [weight=1, ];
E: 76 80 [weight=2, ];
E: 76 81 [weight=4, ];
E: 76 101 [weight=2, ];
E: 77 79 [weight=1, ];
E: 77 80 [weight=1, ];
E: 77 81 [weight=3, ];
E: 77 101 [weight=1, ];
E: 78 80 [weight=2, ];
E: 78 81 [weight=4, ];
E: 78 101 [weight=2, ];
E: 79 80 [weight=2, ];
E: 79 81 [weight=4, ];
E: 79 101 [weight=2, ];
E: 80 101 [weight=1, ];
E: 81 101 [weight=1, ];
E: 82 91 [weight=2, ];
E: 83 91 [weight=2, ];
E: 84 91 [weight=2, ];
E: 84 103 [weight=1, ];
E: 85 91 [weight=2, ];
E: 85 107 [weight=1, ];
E: 86 90 [weight=2, ];
E: 86 91 [weight=4, ];
E: 86 103 [weight=2, ];
E: 86 107 [weight=2, ];
E: 87 89 [weight=1, ];
E: 87 90 [weight=1, ];
E: 87 91 [weight=3, ];
E: 87 103 [weight=1, ];
E: 87 107 [weight=1, ];
E: 88 90 [weight=2, ];
E: 88 91 [weight=4, ];
E: 88 103 [weight=2, ];
E: 88 107 [weight=2, ];
E: 89 90 [weight=2, ];
E: 89 91 [weight=4, ];
E: 89 103 [weight=2, ];
E: 89 107 [weight=2, ];
E: 90 103 [weight=1, ];
E: 90 107 [weight=1, ];
E: 91 103 [weight=1, ];
E: 91 107 [weight=1, ];
E: 92 101 [weight=2, ];
E: 93 101 [weight=2, ];
E: 94 101 [weight=2, ];
E: 94 105 [weight=1, ];
E: 95 101 [weight=2, ];
E: 95 109 [weight=1, ];
E: 96 100 [weight=2, ];
E: 96 101 [weight=4, ];
E: 96 105 [weight=2, ];
E: 96 109 [weight=2, ];
E: 97 99 [weight=1, ];
E: 97 100 [weight=1, ];
E: 97 101 [weight=3, ];
E: 97 105 [weight=1, ];
E: 97 109 [weight=1, ];
E: 98 100 [weight=2, ];
E: 98 101 [weight=4, ];
E: 98 105 [weight=2, ];
E: 98 109 [weight=2, ];
E: 99 100 [weight=2, ];
E: 99 101 [weight=4, ];
E: 99 105 [weight=2, ];
E: 99 109 [weight=2, ];
E: 100 105 [weight=1, ];
E: 100 109 [weight=1, ];
E: 101 105 [weight=1, ];
E: 101 109 [weight=1, ];
E: 102 103 [weight=2, ];
E: 102 177 [weight=1, ];
E: 103 177 [weight=1, ];
E: 104 105 [weight=2, ];
E: 104 211 [weight=1, ];
E: 105 211 [weight=1, ];
E: 106 107 [weight=2, ];
E: 106 177 [weight=1, ];
E: 107 177 [weight=1, ];
E: 108 109 [weight=2, ];
E: 108 211 [weight=1, ];
E: 109 211 [weight=1, ];
E: 110 111 [weight=2, ];
E: 112 121 [weight=2, ];
E: 113 121 [weight=2, ];
E: 114 121 [weight=2, ];
E: 115 121 [weight=2, ];
E: 115 151 [weight=1, ];
E: 116 120 [weight=2, ];
E: 116 121 [weight=4, ];
E: 116 151 [weight=2, ];
E: 117 119 [weight=1, ];
E: 117 120 [weight=1, ];
E: 117 121 [weight=3, ];
E: 117 151 [weight=1, ];
E: 118 120 [weight=2, ];
E: 118 121 [weight=4, ];
E: 118 151 [weight=2, ];
E: 119 120 [weight=2, ];
E: 119 121 [weight=4, ];
E: 119 151 [weight=2, ];
E: 120 151 [weight=1, ];
E: 121 151 [weight=1, ];
E: 122 133 [weight=2, ];
E: 123 133 [weight=2, ];
E: 124 133 [weight=2, ];
E: 124 229 [weight=1, ];
E: 125 133 [weight=2, ];
E: 125 229 [weight=1, ];
E: 126 133 [weight=2, ];
E: 126 243 [weight=1, ];
E: 127 133 [weight=2, ];
E: 127 151 [weight=1, ];
E: 128 132 [weight=2, ];
E: 128 133 [weight=4, ];
E: 128 151 [weight=2, ];
E: 128 229 [weight=4, ];
E: 128 243 [weight=2, ];
E: 129 131 [weight=1, ];
E: 129 132 [weight=1, ];
E: 129 133 [weight=3, ];
E: 129 151 [weight=1, ];
E: 129 229 [weight=2, ];
E: 129 243 [weight=1, ];
E: 130 132 [weight=2, ];
E: 130 133 [weight=4, ];
E: 130 151 [weight=2, ];
E: 130 229 [weight=4, ];
E: 130 243 [weight=2, ];
E: 131 132 [weight=2, ];
E: 131 133 [weight=4, ];
E: 131 151 [weight=2, ];
E: 131 229 [weight=4, ];
E: 131 243 [weight=2, ];
E: 132 151 [weight=1, ];
E: 132 229 [weight=2, ];
E: 132 243 [weight=1, ];
E: 133 151 [weight=1, ];
E: 133 229 [weight=2, ];
E: 133 243 [weight=1, ];
E: 134 142 [weight=2, ];
E: 135 142 [weight=2, ];
E: 136 142 [weight=2, ];
E: 136 151 [weight=1, ];
E: 137 141 [weight=2, ];
E: 137 142 [weight=4, ];
E: 137 151 [weight=2, ];
E: 138 140 [weight=1, ];
E: 138 141 [weight=1, ];
E: 138 142 [weight=3, ];
E: 138 151 [weight=1, ];
E: 139 141 [weight=2, ];
E: 139 142 [weight=4, ];
E: 139 151 [weight=2, ];
E: 140 141 [weight=2, ];
E: 140 142 [weight=4, ];
E: 140 151 [weight=2, ];
E: 141 151 [weight=1, ];
E: 142 151 [weight=1, ];
E: 143 151 [weight=2, ];
E: 144 151 [weight=2, ];
E: 144 194 [weight=1, ];
E: 145 151 [weight=2, ];
E: 145 169 [weight=1, ];
E: 146 150 [weight=2, ];
E: 146 151 [weight=4, ];
E: 146 169 [weight=2, ];
E: 146 194 [weight=2, ];
E: 147 149 [weight=1, ];
E: 147 150 [weight=1, ];
E: 147 151 [weight=3, ];
E: 147 169 [weight=1, ];
E: 147 194 [weight=1, ];
E: 148 150 [weight=2, ];
E: 148 151 [weight=4, ];
E: 148 169 [weight=2, ];
E: 148 194 [weight=2, ];
E: 149 150 [weight=2, ];
E: 149 151 [weight=4, ];
E: 149 169 [weight=2, ];
E: 149 194 [weight=2, ];
E: 150 169 [weight=1, ];
E: 150 194 [weight=1, ];
E: 151 169 [weight=1, ];
E: 151 194 [weight=1, ];
E: 152 161 [weight=2, ];
E: 153 161 [weight=2, ];
E: 154 161 [weight=2, ];
E: 154 194 [weight=1, ];
E: 155 161 [weight=2, ];
E: 155 194 [weight=1, ];
E: 156 160 [weight=2, ];
E: 156 161 [weight=4, ];
E: 156 194 [weight=4, ];
E: 157 159 [weight=1, ];
E: 157 160 [weight=1, ];
E: 157 161 [weight=3, ];
E: 157 194 [weight=2, ];
E: 158 160 [weight=2, ];
E: 158 161 [weight=4, ];
E: 158 194 [weight=4, ];
E: 159 160 [weight=2, ];
E: 159 161 [weight=4, ];
E: 159 194 [weight=4, ];
E: 160 194 [weight=2, ];
E: 161 194 [weight=2, ];
E: 162 169 [weight=2, ];
E: 163 169 [weight=2, ];
E: 163 186 [weight=1, ];
E: 164 168 [weight=2, ];
E: 164 169 [weight=4, ];
E: 164 186 [weight=2, ];
E: 165 167 [weight=1, ];
E: 165 168 [weight=1, ];
E: 165 169 [weight=3, ];
E: 165 186 [weight=1, ];
E: 166 168 [weight=2, ];
E: 166 169 [weight=4, ];
E: 166 186 [weight=2, ];
E: 167 168 [weight=2, ];
E: 167 169 [weight=4, ];
E: 167 186 [weight=2, ];
E: 168 186 [weight=1, ];
E: 169 186 [weight=1, ];
E: 170 177 [weight=2, ];
E: 171 177 [weight=2, ];
E: 171 194 [weight=1, ];
E: 172 176 [weight=2, ];
E: 172 177 [weight=4, ];
E: 172 194 [weight=2, ];
E: 173 175 [weight=1, ];
E: 173 176 [weight=1, ];
E: 173 177 [weight=3, ];
E: 173 194 [weight=1, ];
E: 174 176 [weight=2, ];
E: 174 177 [weight=4, ];
E: 174 194 [weight=2, ];
E: 175 176 [weight=2, ];
E: 175 177 [weight=4, ];
E: 175 194 [weight=2, ];
E: 176 194 [weight=1, ];
E: 177 194 [weight=1, ];
E: 178 186 [weight=2, ];
E: 179 186 [weight=2, ];
E: 180 186 [weight=2, ];
E: 180 203 [weight=1, ];
E: 181 185 [weight=2, ];
E: 181 186 [weight=4, ];
E: 181 203 [weight=2, ];
E: 182 184 [weight=1, ];
E: 182 185 [weight=1, ];
E: 182 186 [weight=3, ];
E: 182 203 [weight=1, ];
E: 183 185 [weight=2, ];
E: 183 186 [weight=4, ];
E: 183 203 [weight=2, ];
E: 184 185 [weight=2, ];
E: 184 186 [weight=4, ];
E: 184 203 [weight=2, ];
E: 185 203 [weight=1, ];
E: 186 203 [weight=1, ];
E: 187 194 [weight=2, ];
E: 188 194 [weight=2, ];
E: 188 203 [weight=1, ];
E: 189 193 [weight=2, ];
E: 189 194 [weight=4, ];
E: 189 203 [weight=2, ];
E: 190 192 [weight=1, ];
E: 190 193 [weight=1, ];
E: 190 194 [weight=3, ];
E: 190 203 [weight=1, ];
E: 191 193 [weight=2, ];
E: 191 194 [weight=4, ];
E: 191 203 [weight=2, ];
E: 192 193 [weight=2, ];
E: 192 194 [weight=4, ];
E: 192 203 [weight=2, ];
E: 193 203 [weight=1, ];
E: 194 203 [weight=1, ];
E: 195 203 [weight=2, ];
E: 196 203 [weight=2, ];
E: 197 203 [weight=2, ];
E: 197 227 [weight=1, ];
E: 198 202 [weight=2, ];
E: 198 203 [weight=4, ];
E: 198 227 [weight=2, ];
E: 199 201 [weight=1, ];
E: 199 202 [weight=1, ];
E: 199 203 [weight=3, ];
E: 199 227 [weight=1, ];
E: 200 202 [weight=2, ];
E: 200 203 [weight=4, ];
E: 200 227 [weight=2, ];
E: 201 202 [weight=2, ];
E: 201 203 [weight=4, ];
E: 201 227 [weight=2, ];
E: 202 227 [weight=1, ];
E: 203 227 [weight=1, ];
E: 204 211 [weight=2, ];
E: 205 211 [weight=2, ];
E: 205 219 [weight=1, ];
E: 206 210 [weight=2, ];
E: 206 211 [weight=4, ];
E: 206 219 [weight=2, ];
E: 207 209 [weight=1, ];
E: 207 210 [weight=1, ];
E: 207 211 [weight=3, ];
E: 207 219 [weight=1, ];
E: 208 210 [weight=2, ];
E: 208 211 [weight=4, ];
E: 208 219 [weight=2, ];
E: 209 210 [weight=2, ];
E: 209 211 [weight=4, ];
E: 209 219 [weight=2, ];
E: 210 219 [weight=1, ];
E: 211 219 [weight=1, ];
E: 212 219 [weight=2, ];
E: 213 219 [weight=2, ];
E: 213 227 [weight=1, ];
E: 214 218 [weight=2, ];
E: 214 219 [weight=4, ];
E: 214 227 [weight=2, ];
E: 215 217 [weight=1, ];
E: 215 218 [weight=1, ];
E: 215 219 [weight=3, ];
E: 215 227 [weight=1, ];
E: 216 218 [weight=2, ];
E: 216 219 [weight=4, ];
E: 216 227 [weight=2, ];
E: 217 218 [weight=2, ];
E: 217 219 [weight=4, ];
E: 217 227 [weight=2, ];
E: 218 227 [weight=1, ];
E: 219 227 [weight=1, ];
E: 220 227 [weight=2, ];
E: 221 227 [weight=2, ];
E: 222 226 [weight=2, ];
E: 222 227 [weight=4, ];
E: 223 225 [weight=1, ];
E: 223 226 [weight=1, ];
E: 223 227 [weight=3, ];
E: 224 226 [weight=2, ];
E: 224 227 [weight=4, ];
E: 225 226 [weight=2, ];
E: 225 227 [weight=4, ];
E: 228 229 [weight=2, ];
E: 230 231 [weight=2, ];
E: 232 243 [weight=2, ];
E: 233 243 [weight=2, ];
E: 234 243 [weight=2, ];
E: 235 243 [weight=2, ];
E: 236 243 [weight=2, ];
E: 237 243 [weight=2, ];
E: 238 242 [weight=2, ];
E: 238 243 [weight=4, ];
E: 239 241 [weight=1, ];
E: 239 242 [weight=1, ];
E: 239 243 [weight=3, ];
E: 240 242 [weight=2, ];
E: 240 243 [weight=4, ];
E: 241 242 [weight=2, ];
E: 241 243 [weight=4, ];
