N: 83 "Pos_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 55 "Pos_mask_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 54 "Pos_mask_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 56 "Pos_mask_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 53 "Pos_mask_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 82 "Pos_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 84 "Pos_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 81 "Pos_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 66 "decpaths_pos" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 65 "ishset_pos" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 7 "mul_xI_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 8 "mul_xO_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 39 "nat_pos_size" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 64 "pos_add" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 25 "pos_add_1_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 26 "pos_add_1_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 15 "pos_add_assoc" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 63 "pos_add_carry" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 24 "pos_add_carry_spec" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 19 "pos_add_carry_spec_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 18 "pos_add_carry_spec_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 23 "pos_add_comm" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 17 "pos_add_no_neutral" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 20 "pos_add_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 21 "pos_add_succ_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 22 "pos_add_succ_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 41 "pos_div2" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 40 "pos_div2_up" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 44 "pos_iter" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 37 "pos_iter_op" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 10 "pos_iter_succ_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 9 "pos_iter_succ_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 51 "pos_mask_double" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 50 "pos_mask_double_pred" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 49 "pos_mask_pred" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 48 "pos_mask_sub" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 47 "pos_mask_sub_carry" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 52 "pos_mask_succ_double" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 45 "pos_mul" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 14 "pos_mul_1_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 13 "pos_mul_1_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 5 "pos_mul_add_distr_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 4 "pos_mul_add_distr_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 3 "pos_mul_assoc" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 6 "pos_mul_comm" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 2 "pos_mul_succ_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 1 "pos_mul_succ_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 32 "pos_of_decimal_int" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 36 "pos_of_nat" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 31 "pos_of_number_uint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 35 "pos_of_succ_nat" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 33 "pos_of_uint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 34 "pos_of_uint_acc" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 79 "pos_peano_ind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 78 "pos_peano_ind_beta_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 77 "pos_peano_ind_beta_pos_succ" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 76 "pos_peano_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 75 "pos_peano_rec_beta_pos_succ" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 43 "pos_pow" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 61 "pos_pred" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 62 "pos_pred_double" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 12 "pos_pred_double_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 38 "pos_size" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 42 "pos_square" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 46 "pos_sub" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 80 "pos_succ" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 16 "pos_succ_inj" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 11 "pos_succ_pred_double" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 28 "pos_to_decimal_int" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 30 "pos_to_little_uint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 27 "pos_to_number_uint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 29 "pos_to_uint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 74 "x0_inj" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 70 "x0_neq_x1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 72 "x0_neq_xH" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 73 "x1_inj" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 67 "x1_neq_x0" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 71 "x1_neq_xH" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 69 "xH_neq_x0" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 68 "xH_neq_x1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 88 "Pos" [kind=inductive, prop=no, path="Core", ];
N: 60 "Pos_mask" [kind=inductive, prop=no, path="Core", ];
N: 87 "xH" [kind=construct, prop=no, path="Core", ];
N: 59 "IsNul" [kind=construct, prop=no, path="Core", ];
N: 86 "x0" [kind=construct, prop=no, path="Core", ];
N: 58 "IsPos" [kind=construct, prop=no, path="Core", ];
N: 85 "x1" [kind=construct, prop=no, path="Core", ];
N: 57 "IsNeg" [kind=construct, prop=no, path="Core", ];
E: 1 5 [weight=1, ];
E: 1 13 [weight=1, ];
E: 1 25 [weight=1, ];
E: 1 45 [weight=12, ];
E: 1 64 [weight=9, ];
E: 1 80 [weight=2, ];
E: 1 87 [weight=5, ];
E: 1 88 [weight=15, ];
E: 2 4 [weight=1, ];
E: 2 14 [weight=1, ];
E: 2 26 [weight=1, ];
E: 2 45 [weight=12, ];
E: 2 64 [weight=9, ];
E: 2 80 [weight=2, ];
E: 2 87 [weight=5, ];
E: 2 88 [weight=15, ];
E: 3 4 [weight=1, ];
E: 3 45 [weight=56, ];
E: 3 64 [weight=6, ];
E: 3 84 [weight=1, ];
E: 3 85 [weight=2, ];
E: 3 86 [weight=12, ];
E: 3 87 [weight=2, ];
E: 3 88 [weight=28, ];
E: 4 5 [weight=1, ];
E: 4 6 [weight=3, ];
E: 4 45 [weight=15, ];
E: 4 64 [weight=10, ];
E: 4 88 [weight=16, ];
E: 5 15 [weight=4, ];
E: 5 23 [weight=1, ];
E: 5 45 [weight=31, ];
E: 5 64 [weight=74, ];
E: 5 84 [weight=1, ];
E: 5 85 [weight=3, ];
E: 5 86 [weight=11, ];
E: 5 87 [weight=3, ];
E: 5 88 [weight=51, ];
E: 6 7 [weight=1, ];
E: 6 8 [weight=1, ];
E: 6 13 [weight=1, ];
E: 6 45 [weight=26, ];
E: 6 64 [weight=5, ];
E: 6 84 [weight=1, ];
E: 6 85 [weight=3, ];
E: 6 86 [weight=15, ];
E: 6 87 [weight=2, ];
E: 6 88 [weight=32, ];
E: 7 15 [weight=2, ];
E: 7 23 [weight=1, ];
E: 7 45 [weight=30, ];
E: 7 64 [weight=30, ];
E: 7 84 [weight=1, ];
E: 7 85 [weight=17, ];
E: 7 86 [weight=26, ];
E: 7 87 [weight=3, ];
E: 7 88 [weight=33, ];
E: 8 45 [weight=20, ];
E: 8 64 [weight=5, ];
E: 8 84 [weight=1, ];
E: 8 85 [weight=2, ];
E: 8 86 [weight=31, ];
E: 8 87 [weight=2, ];
E: 8 88 [weight=31, ];
E: 9 44 [weight=19, ];
E: 9 77 [weight=2, ];
E: 9 79 [weight=17, ];
E: 9 80 [weight=26, ];
E: 9 87 [weight=2, ];
E: 9 88 [weight=44, ];
E: 10 44 [weight=4, ];
E: 10 77 [weight=1, ];
E: 10 79 [weight=4, ];
E: 10 80 [weight=3, ];
E: 10 88 [weight=12, ];
E: 11 62 [weight=6, ];
E: 11 80 [weight=6, ];
E: 11 84 [weight=1, ];
E: 11 85 [weight=1, ];
E: 11 86 [weight=11, ];
E: 11 87 [weight=1, ];
E: 11 88 [weight=14, ];
E: 12 62 [weight=6, ];
E: 12 80 [weight=6, ];
E: 12 84 [weight=1, ];
E: 12 85 [weight=11, ];
E: 12 86 [weight=1, ];
E: 12 87 [weight=1, ];
E: 12 88 [weight=14, ];
E: 13 45 [weight=9, ];
E: 13 84 [weight=1, ];
E: 13 85 [weight=3, ];
E: 13 86 [weight=3, ];
E: 13 87 [weight=12, ];
E: 13 88 [weight=17, ];
E: 14 45 [weight=1, ];
E: 14 87 [weight=1, ];
E: 14 88 [weight=4, ];
E: 15 18 [weight=4, ];
E: 15 19 [weight=3, ];
E: 15 20 [weight=2, ];
E: 15 21 [weight=3, ];
E: 15 22 [weight=2, ];
E: 15 24 [weight=7, ];
E: 15 26 [weight=2, ];
E: 15 63 [weight=30, ];
E: 15 64 [weight=266, ];
E: 15 80 [weight=52, ];
E: 15 84 [weight=1, ];
E: 15 85 [weight=84, ];
E: 15 86 [weight=85, ];
E: 15 87 [weight=64, ];
E: 15 88 [weight=209, ];
E: 16 67 [weight=2, ];
E: 16 68 [weight=1, ];
E: 16 69 [weight=2, ];
E: 16 70 [weight=2, ];
E: 16 71 [weight=1, ];
E: 16 72 [weight=2, ];
E: 16 73 [weight=1, ];
E: 16 74 [weight=3, ];
E: 16 80 [weight=75, ];
E: 16 84 [weight=4, ];
E: 16 85 [weight=36, ];
E: 16 86 [weight=33, ];
E: 16 87 [weight=58, ];
E: 16 88 [weight=127, ];
E: 17 64 [weight=13, ];
E: 17 67 [weight=2, ];
E: 17 70 [weight=2, ];
E: 17 71 [weight=1, ];
E: 17 72 [weight=2, ];
E: 17 73 [weight=1, ];
E: 17 74 [weight=1, ];
E: 17 80 [weight=14, ];
E: 17 84 [weight=1, ];
E: 17 85 [weight=24, ];
E: 17 86 [weight=28, ];
E: 17 87 [weight=7, ];
E: 17 88 [weight=85, ];
E: 18 22 [weight=1, ];
E: 18 24 [weight=1, ];
E: 18 63 [weight=2, ];
E: 18 64 [weight=7, ];
E: 18 80 [weight=7, ];
E: 18 88 [weight=12, ];
E: 19 21 [weight=1, ];
E: 19 24 [weight=1, ];
E: 19 63 [weight=2, ];
E: 19 64 [weight=7, ];
E: 19 80 [weight=7, ];
E: 19 88 [weight=12, ];
E: 20 21 [weight=1, ];
E: 20 22 [weight=1, ];
E: 20 64 [weight=9, ];
E: 20 80 [weight=9, ];
E: 20 88 [weight=12, ];
E: 21 22 [weight=1, ];
E: 21 23 [weight=2, ];
E: 21 64 [weight=8, ];
E: 21 80 [weight=8, ];
E: 21 88 [weight=11, ];
E: 22 24 [weight=2, ];
E: 22 26 [weight=2, ];
E: 22 63 [weight=4, ];
E: 22 64 [weight=46, ];
E: 22 80 [weight=49, ];
E: 22 84 [weight=1, ];
E: 22 85 [weight=19, ];
E: 22 86 [weight=18, ];
E: 22 87 [weight=19, ];
E: 22 88 [weight=67, ];
E: 23 24 [weight=2, ];
E: 23 63 [weight=5, ];
E: 23 64 [weight=43, ];
E: 23 80 [weight=10, ];
E: 23 84 [weight=1, ];
E: 23 85 [weight=18, ];
E: 23 86 [weight=19, ];
E: 23 87 [weight=17, ];
E: 23 88 [weight=69, ];
E: 24 63 [weight=21, ];
E: 24 64 [weight=21, ];
E: 24 80 [weight=30, ];
E: 24 84 [weight=1, ];
E: 24 85 [weight=19, ];
E: 24 86 [weight=18, ];
E: 24 87 [weight=17, ];
E: 24 88 [weight=63, ];
E: 25 64 [weight=2, ];
E: 25 80 [weight=5, ];
E: 25 85 [weight=1, ];
E: 25 86 [weight=1, ];
E: 25 87 [weight=3, ];
E: 25 88 [weight=10, ];
E: 26 64 [weight=2, ];
E: 26 80 [weight=5, ];
E: 26 85 [weight=1, ];
E: 26 86 [weight=1, ];
E: 26 87 [weight=3, ];
E: 26 88 [weight=10, ];
E: 27 29 [weight=1, ];
E: 27 88 [weight=2, ];
E: 28 29 [weight=1, ];
E: 28 88 [weight=2, ];
E: 29 30 [weight=1, ];
E: 29 88 [weight=2, ];
E: 30 88 [weight=4, ];
E: 31 32 [weight=1, ];
E: 31 88 [weight=3, ];
E: 32 33 [weight=1, ];
E: 32 88 [weight=3, ];
E: 33 34 [weight=9, ];
E: 33 85 [weight=6, ];
E: 33 86 [weight=10, ];
E: 33 87 [weight=9, ];
E: 33 88 [weight=13, ];
E: 34 45 [weight=10, ];
E: 34 64 [weight=9, ];
E: 34 85 [weight=16, ];
E: 34 86 [weight=30, ];
E: 34 87 [weight=19, ];
E: 34 88 [weight=6, ];
E: 35 80 [weight=1, ];
E: 35 87 [weight=1, ];
E: 35 88 [weight=3, ];
E: 36 80 [weight=1, ];
E: 36 87 [weight=2, ];
E: 36 88 [weight=4, ];
E: 37 88 [weight=4, ];
E: 38 80 [weight=2, ];
E: 38 87 [weight=1, ];
E: 38 88 [weight=7, ];
E: 39 88 [weight=4, ];
E: 40 80 [weight=1, ];
E: 40 87 [weight=1, ];
E: 40 88 [weight=5, ];
E: 41 87 [weight=1, ];
E: 41 88 [weight=5, ];
E: 42 64 [weight=1, ];
E: 42 85 [weight=1, ];
E: 42 86 [weight=3, ];
E: 42 87 [weight=1, ];
E: 42 88 [weight=7, ];
E: 43 44 [weight=1, ];
E: 43 45 [weight=1, ];
E: 43 87 [weight=1, ];
E: 43 88 [weight=5, ];
E: 44 79 [weight=1, ];
E: 44 88 [weight=3, ];
E: 45 64 [weight=1, ];
E: 45 86 [weight=2, ];
E: 45 88 [weight=10, ];
E: 46 48 [weight=1, ];
E: 46 60 [weight=1, ];
E: 46 87 [weight=2, ];
E: 46 88 [weight=6, ];
E: 47 50 [weight=1, ];
E: 47 51 [weight=4, ];
E: 47 52 [weight=4, ];
E: 47 57 [weight=3, ];
E: 47 58 [weight=3, ];
E: 47 59 [weight=1, ];
E: 47 60 [weight=10, ];
E: 47 62 [weight=2, ];
E: 47 86 [weight=1, ];
E: 47 88 [weight=17, ];
E: 48 50 [weight=1, ];
E: 48 51 [weight=4, ];
E: 48 52 [weight=4, ];
E: 48 57 [weight=3, ];
E: 48 58 [weight=3, ];
E: 48 59 [weight=1, ];
E: 48 60 [weight=10, ];
E: 48 62 [weight=2, ];
E: 48 86 [weight=1, ];
E: 48 88 [weight=17, ];
E: 49 57 [weight=2, ];
E: 49 58 [weight=2, ];
E: 49 59 [weight=1, ];
E: 49 60 [weight=6, ];
E: 49 61 [weight=2, ];
E: 49 88 [weight=1, ];
E: 50 58 [weight=2, ];
E: 50 59 [weight=1, ];
E: 50 60 [weight=2, ];
E: 50 62 [weight=1, ];
E: 50 86 [weight=3, ];
E: 50 88 [weight=3, ];
E: 51 57 [weight=1, ];
E: 51 58 [weight=1, ];
E: 51 59 [weight=1, ];
E: 51 60 [weight=5, ];
E: 51 86 [weight=1, ];
E: 52 57 [weight=1, ];
E: 52 58 [weight=2, ];
E: 52 60 [weight=5, ];
E: 52 85 [weight=1, ];
E: 52 87 [weight=1, ];
E: 53 57 [weight=2, ];
E: 53 58 [weight=2, ];
E: 53 59 [weight=2, ];
E: 53 60 [weight=5, ];
E: 53 88 [weight=2, ];
E: 54 56 [weight=1, ];
E: 54 57 [weight=1, ];
E: 54 58 [weight=1, ];
E: 54 59 [weight=1, ];
E: 54 60 [weight=3, ];
E: 54 88 [weight=1, ];
E: 55 57 [weight=2, ];
E: 55 58 [weight=2, ];
E: 55 59 [weight=2, ];
E: 55 60 [weight=5, ];
E: 55 88 [weight=2, ];
E: 56 57 [weight=2, ];
E: 56 58 [weight=2, ];
E: 56 59 [weight=2, ];
E: 56 60 [weight=5, ];
E: 56 88 [weight=2, ];
E: 57 88 [weight=1, ];
E: 58 88 [weight=1, ];
E: 59 88 [weight=1, ];
E: 60 88 [weight=1, ];
E: 61 62 [weight=1, ];
E: 61 86 [weight=1, ];
E: 61 87 [weight=1, ];
E: 61 88 [weight=5, ];
E: 62 85 [weight=2, ];
E: 62 86 [weight=1, ];
E: 62 87 [weight=1, ];
E: 62 88 [weight=7, ];
E: 63 80 [weight=6, ];
E: 63 85 [weight=9, ];
E: 63 86 [weight=9, ];
E: 63 87 [weight=2, ];
E: 63 88 [weight=29, ];
E: 64 80 [weight=6, ];
E: 64 85 [weight=9, ];
E: 64 86 [weight=9, ];
E: 64 87 [weight=2, ];
E: 64 88 [weight=29, ];
E: 65 66 [weight=1, ];
E: 65 88 [weight=3, ];
E: 66 67 [weight=1, ];
E: 66 68 [weight=1, ];
E: 66 69 [weight=1, ];
E: 66 70 [weight=1, ];
E: 66 71 [weight=1, ];
E: 66 72 [weight=1, ];
E: 66 73 [weight=1, ];
E: 66 74 [weight=1, ];
E: 66 84 [weight=4, ];
E: 66 85 [weight=26, ];
E: 66 86 [weight=26, ];
E: 66 87 [weight=16, ];
E: 66 88 [weight=78, ];
E: 67 70 [weight=1, ];
E: 67 85 [weight=6, ];
E: 67 86 [weight=6, ];
E: 67 88 [weight=12, ];
E: 68 71 [weight=1, ];
E: 68 85 [weight=6, ];
E: 68 87 [weight=6, ];
E: 68 88 [weight=10, ];
E: 69 72 [weight=1, ];
E: 69 86 [weight=6, ];
E: 69 87 [weight=6, ];
E: 69 88 [weight=10, ];
E: 70 85 [weight=3, ];
E: 70 86 [weight=3, ];
E: 70 88 [weight=11, ];
E: 71 85 [weight=3, ];
E: 71 87 [weight=3, ];
E: 71 88 [weight=9, ];
E: 72 86 [weight=3, ];
E: 72 87 [weight=3, ];
E: 72 88 [weight=9, ];
E: 73 85 [weight=6, ];
E: 73 88 [weight=13, ];
E: 74 86 [weight=6, ];
E: 74 88 [weight=13, ];
E: 75 76 [weight=2, ];
E: 75 77 [weight=1, ];
E: 75 80 [weight=1, ];
E: 75 88 [weight=5, ];
E: 76 79 [weight=1, ];
E: 76 88 [weight=3, ];
E: 77 79 [weight=10, ];
E: 77 80 [weight=19, ];
E: 77 84 [weight=1, ];
E: 77 86 [weight=7, ];
E: 77 87 [weight=12, ];
E: 77 88 [weight=23, ];
E: 78 79 [weight=2, ];
E: 78 80 [weight=2, ];
E: 78 87 [weight=6, ];
E: 78 88 [weight=4, ];
E: 79 80 [weight=4, ];
E: 79 86 [weight=6, ];
E: 79 87 [weight=4, ];
E: 79 88 [weight=14, ];
E: 80 85 [weight=1, ];
E: 80 86 [weight=2, ];
E: 80 87 [weight=1, ];
E: 80 88 [weight=7, ];
E: 81 85 [weight=2, ];
E: 81 86 [weight=2, ];
E: 81 87 [weight=2, ];
E: 81 88 [weight=10, ];
E: 82 84 [weight=1, ];
E: 82 85 [weight=1, ];
E: 82 86 [weight=1, ];
E: 82 87 [weight=1, ];
E: 82 88 [weight=5, ];
E: 83 85 [weight=2, ];
E: 83 86 [weight=2, ];
E: 83 87 [weight=2, ];
E: 83 88 [weight=10, ];
E: 84 85 [weight=2, ];
E: 84 86 [weight=2, ];
E: 84 87 [weight=2, ];
E: 84 88 [weight=10, ];
