N: 26 "FinNat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 15 "compute_finnat_ind_succ" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 16 "compute_finnat_ind_zero" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 1 "equiv_fin_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 13 "fin_to_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 17 "finnat_ind" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 12 "finnat_to_fin" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 19 "incl_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 14 "is_bounded_fin_to_nat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 21 "last_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 9 "path_fin_to_finnat_fin_incl" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 8 "path_fin_to_finnat_fin_last" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 10 "path_fin_to_finnat_fin_zero" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 11 "path_fin_to_finnat_fsucc" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 2 "path_fin_to_finnat_to_fin" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 5 "path_finnat_to_fin_incl" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 4 "path_finnat_to_fin_last" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 7 "path_finnat_to_fin_succ" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 3 "path_finnat_to_fin_to_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 6 "path_finnat_to_fin_zero" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 18 "path_incl_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 20 "path_last_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 22 "path_succ_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 24 "path_zero_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 23 "succ_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 25 "zero_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 12 [weight=1, ];
E: 1 13 [weight=1, ];
E: 1 26 [weight=2, ];
E: 2 4 [weight=1, ];
E: 2 5 [weight=1, ];
E: 2 12 [weight=10, ];
E: 2 13 [weight=11, ];
E: 2 19 [weight=1, ];
E: 3 10 [weight=1, ];
E: 3 11 [weight=1, ];
E: 3 12 [weight=8, ];
E: 3 13 [weight=13, ];
E: 3 23 [weight=2, ];
E: 3 25 [weight=1, ];
E: 3 26 [weight=30, ];
E: 4 12 [weight=4, ];
E: 4 21 [weight=4, ];
E: 5 7 [weight=1, ];
E: 5 12 [weight=29, ];
E: 5 19 [weight=23, ];
E: 5 22 [weight=1, ];
E: 5 23 [weight=10, ];
E: 5 26 [weight=9, ];
E: 6 12 [weight=1, ];
E: 6 25 [weight=1, ];
E: 7 12 [weight=9, ];
E: 7 23 [weight=2, ];
E: 7 26 [weight=4, ];
E: 8 13 [weight=1, ];
E: 8 21 [weight=2, ];
E: 8 26 [weight=2, ];
E: 9 13 [weight=3, ];
E: 9 19 [weight=2, ];
E: 9 26 [weight=2, ];
E: 10 13 [weight=2, ];
E: 10 25 [weight=2, ];
E: 10 26 [weight=1, ];
E: 11 13 [weight=4, ];
E: 11 23 [weight=2, ];
E: 11 26 [weight=1, ];
E: 12 26 [weight=5, ];
E: 13 14 [weight=1, ];
E: 13 26 [weight=1, ];
E: 15 17 [weight=13, ];
E: 15 22 [weight=7, ];
E: 15 23 [weight=34, ];
E: 15 25 [weight=2, ];
E: 15 26 [weight=19, ];
E: 16 17 [weight=2, ];
E: 16 23 [weight=2, ];
E: 16 24 [weight=3, ];
E: 16 25 [weight=24, ];
E: 16 26 [weight=15, ];
E: 17 22 [weight=1, ];
E: 17 23 [weight=3, ];
E: 17 24 [weight=1, ];
E: 17 25 [weight=3, ];
E: 17 26 [weight=12, ];
E: 18 19 [weight=2, ];
E: 18 26 [weight=3, ];
E: 19 26 [weight=3, ];
E: 20 21 [weight=2, ];
E: 20 26 [weight=1, ];
E: 21 26 [weight=1, ];
E: 22 23 [weight=2, ];
E: 22 26 [weight=3, ];
E: 23 26 [weight=3, ];
E: 24 25 [weight=2, ];
E: 24 26 [weight=1, ];
E: 25 26 [weight=1, ];
