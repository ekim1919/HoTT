N: 12 "ap_loopexp" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 13 "ap_loopexp_pos" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 2 "equiv_path_loopexp" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 9 "int_add_pred_l" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 8 "int_add_pred_r" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 11 "int_add_succ_l" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 10 "int_add_succ_r" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 15 "loopexp" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 3 "loopexp_add" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 5 "loopexp_int_pos_sub_l" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 4 "loopexp_int_pos_sub_r" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 1 "loopexp_path_universe" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 16 "loopexp_pos" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 6 "loopexp_pos_add" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 7 "loopexp_pos_concat" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 14 "loopexp_pos_inv" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
E: 1 2 [weight=1, ];
E: 1 15 [weight=5, ];
E: 2 15 [weight=8, ];
E: 2 16 [weight=2, ];
E: 3 4 [weight=1, ];
E: 3 5 [weight=1, ];
E: 3 6 [weight=2, ];
E: 3 15 [weight=35, ];
E: 3 16 [weight=12, ];
E: 4 7 [weight=2, ];
E: 4 15 [weight=28, ];
E: 4 16 [weight=69, ];
E: 5 7 [weight=2, ];
E: 5 15 [weight=27, ];
E: 5 16 [weight=59, ];
E: 6 7 [weight=2, ];
E: 6 16 [weight=90, ];
E: 7 16 [weight=17, ];
E: 12 13 [weight=2, ];
E: 12 14 [weight=2, ];
E: 12 15 [weight=7, ];
E: 12 16 [weight=12, ];
E: 13 16 [weight=14, ];
E: 14 16 [weight=14, ];
E: 15 16 [weight=2, ];
