N: 34 "Fun01_ind" [body=yes, kind=cnst, prop=yes, path="FunctorCat", ];
N: 33 "Fun01_rec" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 35 "Fun01_rect" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 32 "Fun01_sind" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 20 "Fun11_ind" [body=yes, kind=cnst, prop=yes, path="FunctorCat", ];
N: 19 "Fun11_rec" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 21 "Fun11_rect" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 18 "Fun11_sind" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 31 "fun01_F" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 6 "fun01_compose" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 14 "fun01_fun11" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 8 "fun01_id" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 30 "fun01_is0functor" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 5 "fun01_postcomp" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 1 "fun11_compose" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 17 "fun11_fun" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 2 "fun11_fun01_postcomp" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 7 "fun11_id" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 24 "hasequivs_fun01" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 9 "hasequivs_fun11" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 27 "is01cat_fun01" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 12 "is01cat_fun11" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 4 "is0functor_fun01_postcomp" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 16 "is0functor_fun11" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 25 "is1cat_fun01" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 10 "is1cat_fun11" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 3 "is1functor_fun01_postcomp" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 15 "is1functor_fun11" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 26 "is2graph_fun01" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 11 "is2graph_fun11" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 28 "isgraph_fun01" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 13 "isgraph_fun11" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 29 "issig_Fun01" [body=yes, kind=cnst, prop=no, path="FunctorCat", ];
N: 37 "Fun01" [kind=inductive, prop=no, path="FunctorCat", ];
N: 23 "Fun11" [kind=inductive, prop=no, path="FunctorCat", ];
N: 36 "Build_Fun01" [kind=construct, prop=no, path="FunctorCat", ];
N: 22 "Build_Fun11" [kind=construct, prop=no, path="FunctorCat", ];
E: 1 22 [weight=1, ];
E: 1 23 [weight=5, ];
E: 2 3 [weight=1, ];
E: 2 4 [weight=1, ];
E: 2 5 [weight=1, ];
E: 2 22 [weight=1, ];
E: 2 23 [weight=3, ];
E: 2 25 [weight=4, ];
E: 2 26 [weight=4, ];
E: 2 27 [weight=4, ];
E: 2 28 [weight=4, ];
E: 2 37 [weight=4, ];
E: 3 4 [weight=8, ];
E: 3 5 [weight=30, ];
E: 3 14 [weight=6, ];
E: 3 23 [weight=2, ];
E: 3 25 [weight=12, ];
E: 3 26 [weight=8, ];
E: 3 27 [weight=8, ];
E: 3 28 [weight=16, ];
E: 3 37 [weight=14, ];
E: 4 5 [weight=2, ];
E: 4 14 [weight=2, ];
E: 4 23 [weight=2, ];
E: 4 28 [weight=5, ];
E: 4 37 [weight=6, ];
E: 5 6 [weight=1, ];
E: 5 14 [weight=1, ];
E: 5 23 [weight=2, ];
E: 5 37 [weight=2, ];
E: 6 36 [weight=1, ];
E: 6 37 [weight=5, ];
E: 7 22 [weight=1, ];
E: 7 23 [weight=1, ];
E: 8 36 [weight=1, ];
E: 8 37 [weight=1, ];
E: 9 10 [weight=1, ];
E: 9 11 [weight=1, ];
E: 9 12 [weight=1, ];
E: 9 13 [weight=1, ];
E: 9 14 [weight=1, ];
E: 9 23 [weight=2, ];
E: 9 24 [weight=1, ];
E: 9 25 [weight=1, ];
E: 9 26 [weight=1, ];
E: 9 27 [weight=1, ];
E: 9 28 [weight=1, ];
E: 9 37 [weight=1, ];
E: 10 11 [weight=1, ];
E: 10 12 [weight=1, ];
E: 10 13 [weight=1, ];
E: 10 14 [weight=1, ];
E: 10 23 [weight=2, ];
E: 10 25 [weight=1, ];
E: 10 26 [weight=1, ];
E: 10 27 [weight=1, ];
E: 10 28 [weight=1, ];
E: 10 37 [weight=1, ];
E: 11 13 [weight=1, ];
E: 11 14 [weight=1, ];
E: 11 23 [weight=2, ];
E: 11 26 [weight=1, ];
E: 11 28 [weight=1, ];
E: 11 37 [weight=1, ];
E: 12 13 [weight=1, ];
E: 12 14 [weight=1, ];
E: 12 23 [weight=2, ];
E: 12 27 [weight=1, ];
E: 12 28 [weight=1, ];
E: 12 37 [weight=1, ];
E: 13 14 [weight=1, ];
E: 13 23 [weight=2, ];
E: 13 28 [weight=1, ];
E: 13 37 [weight=1, ];
E: 14 23 [weight=2, ];
E: 14 36 [weight=1, ];
E: 14 37 [weight=1, ];
E: 15 23 [weight=2, ];
E: 16 23 [weight=2, ];
E: 17 23 [weight=2, ];
E: 18 22 [weight=2, ];
E: 18 23 [weight=4, ];
E: 19 21 [weight=1, ];
E: 19 22 [weight=1, ];
E: 19 23 [weight=3, ];
E: 20 22 [weight=2, ];
E: 20 23 [weight=4, ];
E: 21 22 [weight=2, ];
E: 21 23 [weight=4, ];
E: 24 25 [weight=12, ];
E: 24 26 [weight=7, ];
E: 24 27 [weight=10, ];
E: 24 28 [weight=25, ];
E: 24 36 [weight=82, ];
E: 24 37 [weight=27, ];
E: 25 26 [weight=48, ];
E: 25 27 [weight=24, ];
E: 25 28 [weight=124, ];
E: 25 36 [weight=298, ];
E: 25 37 [weight=72, ];
E: 26 28 [weight=5, ];
E: 26 36 [weight=6, ];
E: 26 37 [weight=4, ];
E: 27 28 [weight=6, ];
E: 27 36 [weight=8, ];
E: 27 37 [weight=6, ];
E: 28 37 [weight=4, ];
E: 29 36 [weight=8, ];
E: 29 37 [weight=12, ];
E: 30 37 [weight=2, ];
E: 31 37 [weight=2, ];
E: 32 36 [weight=2, ];
E: 32 37 [weight=4, ];
E: 33 35 [weight=1, ];
E: 33 36 [weight=1, ];
E: 33 37 [weight=3, ];
E: 34 36 [weight=2, ];
E: 34 37 [weight=4, ];
E: 35 36 [weight=2, ];
E: 35 37 [weight=4, ];
