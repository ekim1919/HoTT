N: 54 "Finite_ind" [body=yes, kind=cnst, prop=yes, path="Finite", ];
N: 53 "Finite_rec" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 55 "Finite_rect" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 52 "Finite_sind" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 32 "decidable_finite_hprop" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 31 "decidable_merely_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 33 "decidablepaths_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 6 "detachable_finite_subset" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 7 "detachable_image_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 51 "fcard" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 21 "fcard_arrow" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 19 "fcard_aut" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 13 "fcard_domain" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 44 "fcard_equiv" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 43 "fcard_equiv'" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 10 "fcard_forall" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 23 "fcard_prod" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 4 "fcard_quotient" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 16 "fcard_sigma" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 34 "fcard_succ" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 25 "fcard_sum" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 17 "finadd" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 15 "finadd_const" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 20 "finite_aut" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 28 "finite_choice" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 39 "finite_contr" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 38 "finite_decidable_hprop" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 8 "finite_detachable_subset" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 41 "finite_empty" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 1 "finite_enumeration_repeats" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 2 "finite_enumeration_stage" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 47 "finite_equiv" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 46 "finite_equiv'" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 45 "finite_equiv_equiv" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 42 "finite_fin" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 22 "finite_forall" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 14 "finite_hfiber" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 12 "finite_image" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 29 "finite_ind_hprop" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 37 "finite_merely" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 36 "finite_paths" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 24 "finite_prod" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 5 "finite_quotient" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 18 "finite_sigma" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 35 "finite_succ" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 26 "finite_sum" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 40 "finite_unit" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 11 "finmult" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 9 "finmult_const" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 48 "ishprop_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 27 "isprojective_fin_n" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 49 "issig_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 3 "leq_inj_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 30 "merely_decidable_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 50 "merely_equiv_fin" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 57 "Finite" [kind=inductive, prop=no, path="Finite", ];
N: 56 "Build_Finite" [kind=construct, prop=no, path="Finite", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 42 [weight=2, ];
E: 1 57 [weight=2, ];
E: 2 7 [weight=1, ];
E: 2 33 [weight=1, ];
E: 2 42 [weight=1, ];
E: 2 57 [weight=2, ];
E: 3 56 [weight=2, ];
E: 3 57 [weight=4, ];
E: 4 5 [weight=14, ];
E: 4 8 [weight=10, ];
E: 4 13 [weight=1, ];
E: 4 17 [weight=4, ];
E: 4 18 [weight=9, ];
E: 4 36 [weight=9, ];
E: 4 43 [weight=1, ];
E: 4 57 [weight=2, ];
E: 5 18 [weight=1, ];
E: 5 31 [weight=1, ];
E: 5 35 [weight=1, ];
E: 5 38 [weight=1, ];
E: 5 41 [weight=1, ];
E: 5 42 [weight=1, ];
E: 5 46 [weight=3, ];
E: 5 47 [weight=1, ];
E: 5 48 [weight=2, ];
E: 5 57 [weight=10, ];
E: 6 7 [weight=1, ];
E: 6 57 [weight=4, ];
E: 7 18 [weight=1, ];
E: 7 36 [weight=1, ];
E: 7 57 [weight=5, ];
E: 8 18 [weight=1, ];
E: 8 38 [weight=1, ];
E: 8 57 [weight=3, ];
E: 9 11 [weight=1, ];
E: 9 21 [weight=1, ];
E: 9 42 [weight=1, ];
E: 9 57 [weight=2, ];
E: 10 11 [weight=5, ];
E: 10 22 [weight=7, ];
E: 10 28 [weight=1, ];
E: 10 42 [weight=1, ];
E: 10 43 [weight=1, ];
E: 10 57 [weight=4, ];
E: 11 22 [weight=1, ];
E: 11 42 [weight=1, ];
E: 11 57 [weight=2, ];
E: 12 18 [weight=2, ];
E: 12 36 [weight=1, ];
E: 12 37 [weight=1, ];
E: 12 57 [weight=5, ];
E: 13 16 [weight=1, ];
E: 13 17 [weight=2, ];
E: 13 18 [weight=7, ];
E: 13 36 [weight=5, ];
E: 13 43 [weight=1, ];
E: 13 57 [weight=4, ];
E: 14 18 [weight=1, ];
E: 14 36 [weight=1, ];
E: 14 57 [weight=5, ];
E: 15 17 [weight=2, ];
E: 15 18 [weight=1, ];
E: 15 23 [weight=1, ];
E: 15 24 [weight=2, ];
E: 15 42 [weight=4, ];
E: 15 43 [weight=1, ];
E: 15 57 [weight=2, ];
E: 16 17 [weight=5, ];
E: 16 18 [weight=7, ];
E: 16 28 [weight=1, ];
E: 16 42 [weight=1, ];
E: 16 43 [weight=1, ];
E: 16 57 [weight=4, ];
E: 17 18 [weight=1, ];
E: 17 42 [weight=1, ];
E: 17 57 [weight=2, ];
E: 18 26 [weight=1, ];
E: 18 41 [weight=1, ];
E: 18 46 [weight=1, ];
E: 18 47 [weight=3, ];
E: 18 48 [weight=1, ];
E: 18 57 [weight=15, ];
E: 19 20 [weight=18, ];
E: 19 23 [weight=1, ];
E: 19 24 [weight=3, ];
E: 19 42 [weight=18, ];
E: 19 44 [weight=2, ];
E: 19 57 [weight=2, ];
E: 20 24 [weight=1, ];
E: 20 39 [weight=1, ];
E: 20 42 [weight=1, ];
E: 20 47 [weight=2, ];
E: 20 48 [weight=1, ];
E: 20 57 [weight=7, ];
E: 21 22 [weight=26, ];
E: 21 23 [weight=1, ];
E: 21 24 [weight=3, ];
E: 21 40 [weight=7, ];
E: 21 42 [weight=16, ];
E: 21 44 [weight=4, ];
E: 21 57 [weight=4, ];
E: 22 24 [weight=1, ];
E: 22 39 [weight=1, ];
E: 22 46 [weight=1, ];
E: 22 47 [weight=2, ];
E: 22 48 [weight=1, ];
E: 22 57 [weight=14, ];
E: 23 24 [weight=30, ];
E: 23 25 [weight=1, ];
E: 23 26 [weight=3, ];
E: 23 40 [weight=9, ];
E: 23 41 [weight=2, ];
E: 23 42 [weight=23, ];
E: 23 43 [weight=2, ];
E: 23 44 [weight=3, ];
E: 23 57 [weight=4, ];
E: 24 26 [weight=1, ];
E: 24 41 [weight=1, ];
E: 24 47 [weight=4, ];
E: 24 48 [weight=1, ];
E: 24 57 [weight=8, ];
E: 25 26 [weight=17, ];
E: 25 35 [weight=2, ];
E: 25 41 [weight=1, ];
E: 25 42 [weight=17, ];
E: 25 43 [weight=1, ];
E: 25 44 [weight=3, ];
E: 25 57 [weight=4, ];
E: 26 35 [weight=1, ];
E: 26 47 [weight=3, ];
E: 26 48 [weight=1, ];
E: 26 57 [weight=8, ];
E: 27 28 [weight=1, ];
E: 27 42 [weight=1, ];
E: 28 57 [weight=2, ];
E: 29 35 [weight=4, ];
E: 29 41 [weight=2, ];
E: 29 42 [weight=12, ];
E: 29 48 [weight=2, ];
E: 29 57 [weight=16, ];
E: 30 31 [weight=1, ];
E: 30 57 [weight=2, ];
E: 31 32 [weight=1, ];
E: 31 37 [weight=1, ];
E: 31 57 [weight=2, ];
E: 32 57 [weight=2, ];
E: 33 57 [weight=2, ];
E: 34 35 [weight=2, ];
E: 34 57 [weight=2, ];
E: 35 56 [weight=1, ];
E: 35 57 [weight=3, ];
E: 36 38 [weight=1, ];
E: 36 47 [weight=1, ];
E: 36 48 [weight=1, ];
E: 36 57 [weight=4, ];
E: 37 38 [weight=2, ];
E: 37 57 [weight=4, ];
E: 38 39 [weight=1, ];
E: 38 41 [weight=1, ];
E: 38 47 [weight=1, ];
E: 38 57 [weight=2, ];
E: 39 40 [weight=1, ];
E: 39 47 [weight=1, ];
E: 39 57 [weight=1, ];
E: 40 42 [weight=1, ];
E: 40 46 [weight=1, ];
E: 40 57 [weight=1, ];
E: 41 42 [weight=1, ];
E: 41 57 [weight=1, ];
E: 42 56 [weight=1, ];
E: 42 57 [weight=1, ];
E: 43 44 [weight=1, ];
E: 43 57 [weight=4, ];
E: 44 47 [weight=4, ];
E: 44 48 [weight=1, ];
E: 44 51 [weight=1, ];
E: 44 57 [weight=6, ];
E: 45 46 [weight=2, ];
E: 45 48 [weight=2, ];
E: 45 57 [weight=4, ];
E: 46 47 [weight=1, ];
E: 46 57 [weight=2, ];
E: 47 56 [weight=1, ];
E: 47 57 [weight=3, ];
E: 48 49 [weight=1, ];
E: 48 57 [weight=2, ];
E: 49 56 [weight=8, ];
E: 49 57 [weight=12, ];
E: 50 57 [weight=2, ];
E: 51 57 [weight=2, ];
E: 52 56 [weight=2, ];
E: 52 57 [weight=4, ];
E: 53 55 [weight=1, ];
E: 53 56 [weight=1, ];
E: 53 57 [weight=3, ];
E: 54 56 [weight=2, ];
E: 54 57 [weight=4, ];
E: 55 56 [weight=2, ];
E: 55 57 [weight=4, ];
