N: 33 "Int_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 32 "Int_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 34 "Int_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 31 "Int_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 2 "decpaths_int" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 1 "hset_int" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 10 "int_add" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 16 "int_double" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 6 "int_mul" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 12 "int_negation" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 11 "int_negation_negation" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 18 "int_of_decimal_int" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 19 "int_of_decimal_uint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 17 "int_of_number_int" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 13 "int_pos_sub" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 5 "int_pow" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 8 "int_pred" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 14 "int_pred_double" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 4 "int_square" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 7 "int_sub" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 9 "int_succ" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 15 "int_succ_double" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 21 "int_to_decimal_int" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 20 "int_to_number_int" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 30 "ispointed_Int" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 29 "neg_inj" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 25 "neg_neq_pos" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 27 "neg_neq_zero" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 28 "pos_inj" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 22 "pos_neq_neg" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 26 "pos_neq_zero" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 3 "sgn" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 24 "zero_neq_neg" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 23 "zero_neq_pos" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 38 "Int" [kind=inductive, prop=no, path="Core", ];
N: 37 "neg" [kind=construct, prop=no, path="Core", ];
N: 36 "zero" [kind=construct, prop=no, path="Core", ];
N: 35 "pos" [kind=construct, prop=no, path="Core", ];
E: 1 2 [weight=1, ];
E: 1 38 [weight=3, ];
E: 2 22 [weight=1, ];
E: 2 23 [weight=1, ];
E: 2 24 [weight=1, ];
E: 2 25 [weight=1, ];
E: 2 26 [weight=1, ];
E: 2 27 [weight=1, ];
E: 2 28 [weight=1, ];
E: 2 29 [weight=1, ];
E: 2 35 [weight=24, ];
E: 2 36 [weight=14, ];
E: 2 37 [weight=24, ];
E: 2 38 [weight=46, ];
E: 3 35 [weight=1, ];
E: 3 36 [weight=1, ];
E: 3 37 [weight=1, ];
E: 3 38 [weight=5, ];
E: 4 35 [weight=2, ];
E: 4 36 [weight=1, ];
E: 4 38 [weight=5, ];
E: 5 6 [weight=1, ];
E: 5 35 [weight=2, ];
E: 5 36 [weight=1, ];
E: 5 38 [weight=8, ];
E: 6 35 [weight=2, ];
E: 6 36 [weight=3, ];
E: 6 37 [weight=2, ];
E: 6 38 [weight=11, ];
E: 7 10 [weight=1, ];
E: 7 12 [weight=1, ];
E: 7 38 [weight=5, ];
E: 8 10 [weight=1, ];
E: 8 37 [weight=1, ];
E: 8 38 [weight=3, ];
E: 9 10 [weight=1, ];
E: 9 35 [weight=1, ];
E: 9 38 [weight=3, ];
E: 10 13 [weight=2, ];
E: 10 35 [weight=1, ];
E: 10 37 [weight=1, ];
E: 10 38 [weight=11, ];
E: 11 12 [weight=4, ];
E: 11 35 [weight=1, ];
E: 11 36 [weight=1, ];
E: 11 37 [weight=1, ];
E: 11 38 [weight=8, ];
E: 12 35 [weight=1, ];
E: 12 36 [weight=1, ];
E: 12 37 [weight=1, ];
E: 12 38 [weight=5, ];
E: 13 14 [weight=1, ];
E: 13 15 [weight=1, ];
E: 13 16 [weight=2, ];
E: 13 35 [weight=2, ];
E: 13 36 [weight=1, ];
E: 13 37 [weight=2, ];
E: 13 38 [weight=6, ];
E: 14 35 [weight=1, ];
E: 14 37 [weight=2, ];
E: 14 38 [weight=5, ];
E: 15 35 [weight=2, ];
E: 15 37 [weight=1, ];
E: 15 38 [weight=5, ];
E: 16 35 [weight=1, ];
E: 16 36 [weight=1, ];
E: 16 37 [weight=1, ];
E: 16 38 [weight=5, ];
E: 17 18 [weight=1, ];
E: 17 38 [weight=4, ];
E: 18 19 [weight=2, ];
E: 18 36 [weight=2, ];
E: 18 37 [weight=1, ];
E: 18 38 [weight=5, ];
E: 19 35 [weight=9, ];
E: 19 36 [weight=1, ];
E: 19 38 [weight=3, ];
E: 20 21 [weight=1, ];
E: 20 38 [weight=2, ];
E: 21 38 [weight=3, ];
E: 22 25 [weight=1, ];
E: 22 35 [weight=6, ];
E: 22 37 [weight=6, ];
E: 22 38 [weight=8, ];
E: 23 26 [weight=1, ];
E: 23 35 [weight=6, ];
E: 23 36 [weight=6, ];
E: 23 38 [weight=8, ];
E: 24 27 [weight=1, ];
E: 24 36 [weight=6, ];
E: 24 37 [weight=6, ];
E: 24 38 [weight=8, ];
E: 25 35 [weight=3, ];
E: 25 37 [weight=3, ];
E: 25 38 [weight=5, ];
E: 26 35 [weight=3, ];
E: 26 36 [weight=3, ];
E: 26 38 [weight=5, ];
E: 27 36 [weight=3, ];
E: 27 37 [weight=3, ];
E: 27 38 [weight=5, ];
E: 28 35 [weight=6, ];
E: 28 38 [weight=5, ];
E: 29 37 [weight=6, ];
E: 29 38 [weight=5, ];
E: 30 36 [weight=1, ];
E: 30 38 [weight=1, ];
E: 31 35 [weight=2, ];
E: 31 36 [weight=2, ];
E: 31 37 [weight=2, ];
E: 31 38 [weight=5, ];
E: 32 34 [weight=1, ];
E: 32 35 [weight=1, ];
E: 32 36 [weight=1, ];
E: 32 37 [weight=1, ];
E: 32 38 [weight=3, ];
E: 33 35 [weight=2, ];
E: 33 36 [weight=2, ];
E: 33 37 [weight=2, ];
E: 33 38 [weight=5, ];
E: 34 35 [weight=2, ];
E: 34 36 [weight=2, ];
E: 34 37 [weight=2, ];
E: 34 38 [weight=5, ];
