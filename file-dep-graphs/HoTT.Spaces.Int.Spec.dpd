N: 7 "equiv_int_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 38 "int_add_0_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 37 "int_add_0_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 9 "int_add_assoc" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 10 "int_add_assoc_pos" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 39 "int_add_comm" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 31 "int_add_negation_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 30 "int_add_negation_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 36 "int_mul_0_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 35 "int_mul_0_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 34 "int_mul_1_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 33 "int_mul_1_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 2 "int_mul_add_distr_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 3 "int_mul_add_distr_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 1 "int_mul_assoc" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 6 "int_mul_comm" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 29 "int_neg_pos_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 21 "int_negation_add_distr" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 27 "int_negation_double" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 20 "int_negation_inj" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 26 "int_negation_pred_double" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 13 "int_negation_pred_negation_red" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 25 "int_negation_succ_double" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 28 "int_pos_pos_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 11 "int_pos_sub_add" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 32 "int_pos_sub_diag" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 4 "int_pos_sub_mul_neg" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 5 "int_pos_sub_mul_pos" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 24 "int_pos_sub_negation" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 19 "int_pos_sub_succ_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 18 "int_pos_sub_succ_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 15 "int_pos_sub_succ_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 12 "int_pred_add_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 16 "int_pred_double_int_pos_sub" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 14 "int_pred_pos_sub_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 22 "int_pred_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 17 "int_succ_double_int_pos_sub" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 23 "int_succ_pred" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 8 "isequiv_int_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
E: 2 3 [weight=1, ];
E: 2 6 [weight=3, ];
E: 3 4 [weight=2, ];
E: 3 5 [weight=2, ];
E: 3 35 [weight=2, ];
E: 4 6 [weight=1, ];
E: 4 9 [weight=1, ];
E: 4 11 [weight=2, ];
E: 4 21 [weight=1, ];
E: 4 24 [weight=5, ];
E: 5 6 [weight=1, ];
E: 5 9 [weight=1, ];
E: 5 11 [weight=2, ];
E: 5 21 [weight=1, ];
E: 5 24 [weight=2, ];
E: 5 34 [weight=1, ];
E: 7 8 [weight=1, ];
E: 8 22 [weight=1, ];
E: 8 23 [weight=1, ];
E: 9 10 [weight=2, ];
E: 9 20 [weight=1, ];
E: 9 21 [weight=4, ];
E: 10 11 [weight=4, ];
E: 10 20 [weight=1, ];
E: 10 21 [weight=1, ];
E: 10 24 [weight=2, ];
E: 10 37 [weight=1, ];
E: 10 39 [weight=2, ];
E: 11 12 [weight=2, ];
E: 11 14 [weight=2, ];
E: 12 13 [weight=1, ];
E: 12 14 [weight=2, ];
E: 12 20 [weight=1, ];
E: 12 22 [weight=5, ];
E: 12 24 [weight=2, ];
E: 12 39 [weight=1, ];
E: 14 15 [weight=2, ];
E: 15 16 [weight=1, ];
E: 15 17 [weight=1, ];
E: 21 24 [weight=2, ];
E: 24 25 [weight=1, ];
E: 24 26 [weight=1, ];
E: 24 27 [weight=2, ];
E: 30 32 [weight=2, ];
E: 31 32 [weight=2, ];
