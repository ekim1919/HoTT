N: 22 "IsTruncMap" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 17 "TruncType_ind" [body=yes, kind=cnst, prop=yes, path="Trunc", ];
N: 16 "TruncType_rec" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 18 "TruncType_rect" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 15 "TruncType_sind" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 11 "contr_inhabited_hprop" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 30 "contr_istrunc_minus_two" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 12 "default_TruncType" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 3 "equiv_contr_hprop" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 5 "equiv_iff_hprop" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 6 "equiv_iff_hprop_uncurried" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 8 "hprop_allpath" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 10 "hprop_inhabited_contr" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 4 "iff_contr_hprop" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 52 "int_to_trunc_index" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 7 "isequiv_iff_hprop" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 2 "ishprop_istrunc" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 1 "ishprop_istruncmap" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 27 "istrunc_contr" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 23 "istrunc_equiv_istrunc" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 26 "istrunc_hprop" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 25 "istrunc_hset" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 24 "istrunc_isequiv_istrunc" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 28 "istrunc_leq" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 29 "istrunc_succ" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 21 "istruncmap_fiber" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 53 "nat_to_trunc_index" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 51 "num_int_to_trunc_index" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 9 "path_ishprop" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 47 "trunc_index_add" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 46 "trunc_index_add_minus_two" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 45 "trunc_index_add_succ" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 57 "trunc_index_inc" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 56 "trunc_index_inc'" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 55 "trunc_index_inc'_succ" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 54 "trunc_index_inc_agree" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 44 "trunc_index_leq" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 40 "trunc_index_leq_minus_two" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 43 "trunc_index_leq_minus_two_n" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 38 "trunc_index_leq_refl" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 42 "trunc_index_leq_succ" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 39 "trunc_index_leq_succ'" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 37 "trunc_index_leq_transitive" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 36 "trunc_index_min" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 32 "trunc_index_min_leq_left" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 31 "trunc_index_min_leq_right" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 35 "trunc_index_min_minus_two" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 33 "trunc_index_min_path" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 34 "trunc_index_min_swap" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 41 "trunc_index_pred" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 49 "trunc_index_to_int" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 50 "trunc_index_to_little_uint" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 48 "trunc_index_to_num_int" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 13 "trunctype_istrunc" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 14 "trunctype_type" [body=yes, kind=cnst, prop=no, path="Trunc", ];
N: 20 "TruncType" [kind=inductive, prop=no, path="Trunc", ];
N: 19 "Build_TruncType" [kind=construct, prop=no, path="Trunc", ];
E: 1 2 [weight=1, ];
E: 1 8 [weight=1, ];
E: 1 9 [weight=1, ];
E: 1 22 [weight=4, ];
E: 2 10 [weight=1, ];
E: 3 4 [weight=1, ];
E: 3 6 [weight=1, ];
E: 3 10 [weight=1, ];
E: 4 11 [weight=1, ];
E: 5 6 [weight=1, ];
E: 6 9 [weight=2, ];
E: 7 9 [weight=2, ];
E: 12 19 [weight=1, ];
E: 12 20 [weight=1, ];
E: 13 20 [weight=2, ];
E: 14 20 [weight=2, ];
E: 15 19 [weight=2, ];
E: 15 20 [weight=4, ];
E: 16 18 [weight=1, ];
E: 16 19 [weight=1, ];
E: 16 20 [weight=3, ];
E: 17 19 [weight=2, ];
E: 17 20 [weight=4, ];
E: 18 19 [weight=2, ];
E: 18 20 [weight=4, ];
E: 21 22 [weight=2, ];
E: 23 24 [weight=1, ];
E: 25 28 [weight=1, ];
E: 26 28 [weight=1, ];
E: 27 28 [weight=1, ];
E: 28 29 [weight=1, ];
E: 28 44 [weight=11, ];
E: 31 36 [weight=7, ];
E: 31 44 [weight=7, ];
E: 32 36 [weight=7, ];
E: 32 44 [weight=7, ];
E: 33 36 [weight=30, ];
E: 34 35 [weight=1, ];
E: 34 36 [weight=17, ];
E: 35 36 [weight=2, ];
E: 37 40 [weight=1, ];
E: 37 44 [weight=44, ];
E: 38 44 [weight=4, ];
E: 39 43 [weight=1, ];
E: 39 44 [weight=16, ];
E: 40 44 [weight=4, ];
E: 42 44 [weight=3, ];
E: 43 44 [weight=1, ];
E: 45 47 [weight=24, ];
E: 46 47 [weight=5, ];
E: 48 49 [weight=1, ];
E: 49 50 [weight=1, ];
E: 51 52 [weight=1, ];
E: 52 53 [weight=1, ];
E: 53 57 [weight=1, ];
E: 54 55 [weight=1, ];
E: 54 56 [weight=10, ];
E: 54 57 [weight=6, ];
E: 55 56 [weight=7, ];
