N: 21 "Circle" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 3 "Circle_action_is_iter" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 13 "Circle_code" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 9 "Circle_decode" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 10 "Circle_encode" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 7 "Circle_encode_isequiv" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 8 "Circle_encode_loopexp" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 18 "Circle_ind" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 17 "Circle_ind_beta_loop" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 2 "Circle_ind_dp" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 1 "Circle_ind_dp_beta_loop" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 16 "Circle_rec" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 15 "Circle_rec_beta_loop" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 20 "base" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 6 "equiv_loopCircle_int" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 5 "isconnected_Circle" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 14 "ispointed_Circle" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 4 "istrunc_Circle" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 19 "loop" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 12 "transport_Circle_code_loop" [body=yes, kind=cnst, prop=no, path="Circle", ];
N: 11 "transport_Circle_code_loopV" [body=yes, kind=cnst, prop=no, path="Circle", ];
E: 1 2 [weight=4, ];
E: 1 17 [weight=1, ];
E: 1 19 [weight=6, ];
E: 1 20 [weight=16, ];
E: 1 21 [weight=8, ];
E: 2 18 [weight=1, ];
E: 2 19 [weight=3, ];
E: 2 20 [weight=8, ];
E: 2 21 [weight=7, ];
E: 3 6 [weight=7, ];
E: 3 7 [weight=1, ];
E: 3 9 [weight=1, ];
E: 3 10 [weight=1, ];
E: 3 11 [weight=1, ];
E: 3 13 [weight=15, ];
E: 3 15 [weight=1, ];
E: 3 16 [weight=59, ];
E: 3 18 [weight=1, ];
E: 3 19 [weight=79, ];
E: 3 20 [weight=329, ];
E: 3 21 [weight=147, ];
E: 4 5 [weight=2, ];
E: 4 6 [weight=1, ];
E: 4 20 [weight=19, ];
E: 4 21 [weight=26, ];
E: 5 18 [weight=4, ];
E: 5 19 [weight=4, ];
E: 5 20 [weight=57, ];
E: 5 21 [weight=56, ];
E: 6 7 [weight=1, ];
E: 6 10 [weight=1, ];
E: 6 13 [weight=1, ];
E: 6 20 [weight=7, ];
E: 6 21 [weight=2, ];
E: 7 8 [weight=7, ];
E: 7 9 [weight=10, ];
E: 7 10 [weight=11, ];
E: 7 13 [weight=32, ];
E: 7 18 [weight=1, ];
E: 7 19 [weight=3, ];
E: 7 20 [weight=35, ];
E: 7 21 [weight=23, ];
E: 8 10 [weight=5, ];
E: 8 11 [weight=1, ];
E: 8 12 [weight=3, ];
E: 8 13 [weight=57, ];
E: 8 19 [weight=65, ];
E: 8 20 [weight=295, ];
E: 8 21 [weight=131, ];
E: 9 11 [weight=1, ];
E: 9 13 [weight=18, ];
E: 9 18 [weight=1, ];
E: 9 19 [weight=87, ];
E: 9 20 [weight=280, ];
E: 9 21 [weight=151, ];
E: 10 13 [weight=2, ];
E: 10 20 [weight=3, ];
E: 10 21 [weight=5, ];
E: 11 13 [weight=26, ];
E: 11 15 [weight=1, ];
E: 11 16 [weight=15, ];
E: 11 19 [weight=9, ];
E: 11 20 [weight=60, ];
E: 11 21 [weight=15, ];
E: 12 13 [weight=12, ];
E: 12 15 [weight=1, ];
E: 12 16 [weight=10, ];
E: 12 19 [weight=6, ];
E: 12 20 [weight=28, ];
E: 12 21 [weight=7, ];
E: 13 16 [weight=1, ];
E: 13 21 [weight=1, ];
E: 14 20 [weight=1, ];
E: 14 21 [weight=1, ];
E: 15 16 [weight=6, ];
E: 15 17 [weight=1, ];
E: 15 18 [weight=20, ];
E: 15 19 [weight=60, ];
E: 15 20 [weight=140, ];
E: 15 21 [weight=112, ];
E: 16 18 [weight=1, ];
E: 16 19 [weight=2, ];
E: 16 20 [weight=4, ];
E: 16 21 [weight=5, ];
E: 17 18 [weight=3, ];
E: 17 19 [weight=4, ];
E: 17 20 [weight=15, ];
E: 17 21 [weight=9, ];
E: 18 19 [weight=2, ];
E: 18 20 [weight=8, ];
E: 18 21 [weight=8, ];
E: 19 20 [weight=2, ];
E: 19 21 [weight=1, ];
E: 20 21 [weight=1, ];
