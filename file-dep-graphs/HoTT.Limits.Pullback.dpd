N: 24 "IsPullback" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 33 "Pullback" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 28 "diagonal" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 23 "equiv_ispullback" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 6 "equiv_path_pullback" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 5 "equiv_path_pullback_hset" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 4 "equiv_path_pullback_rec_hset" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 8 "equiv_pullback" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 26 "equiv_pullback_symm" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 25 "equiv_pullback_unit_prod" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 7 "equiv_sigma_pullback" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 20 "equiv_sigprod_pullback" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 11 "functor_pullback" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 27 "hfiber_diagonal" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 9 "hfiber_functor_pullback" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 10 "hfiber_functor_pullback_subproof" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 15 "hfiber_pullback_along" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 13 "hfiber_pullback_along'" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 12 "hfiber_pullback_along_pointed" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 19 "hfiber_pullback_corec" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 17 "isequiv_functor_hfiber_ispullback" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 18 "ispullback_isequiv_functor_hfiber" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 2 "ispullback_pasting_left" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 1 "ispullback_pasting_outer" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 21 "ispullback_sigprod" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 22 "ispullback_symm" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 3 "pullback3x3" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 16 "pullback_along" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 14 "pullback_along'" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 30 "pullback_commsq" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 29 "pullback_corec" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 32 "pullback_pr1" [body=yes, kind=cnst, prop=no, path="Pullback", ];
N: 31 "pullback_pr2" [body=yes, kind=cnst, prop=no, path="Pullback", ];
E: 1 17 [weight=2, ];
E: 1 18 [weight=1, ];
E: 1 24 [weight=5, ];
E: 2 17 [weight=2, ];
E: 2 18 [weight=1, ];
E: 2 24 [weight=5, ];
E: 3 6 [weight=2, ];
E: 3 11 [weight=8, ];
E: 3 33 [weight=594, ];
E: 4 5 [weight=1, ];
E: 4 31 [weight=12, ];
E: 4 32 [weight=12, ];
E: 4 33 [weight=40, ];
E: 5 6 [weight=1, ];
E: 5 33 [weight=6, ];
E: 6 33 [weight=9, ];
E: 7 33 [weight=114, ];
E: 8 33 [weight=4, ];
E: 9 10 [weight=1, ];
E: 9 11 [weight=1, ];
E: 9 33 [weight=6, ];
E: 11 33 [weight=2, ];
E: 12 13 [weight=1, ];
E: 12 14 [weight=2, ];
E: 12 33 [weight=2, ];
E: 13 14 [weight=20, ];
E: 13 33 [weight=42, ];
E: 14 33 [weight=2, ];
E: 15 16 [weight=34, ];
E: 15 33 [weight=43, ];
E: 16 33 [weight=1, ];
E: 17 24 [weight=2, ];
E: 17 29 [weight=3, ];
E: 17 33 [weight=5, ];
E: 18 19 [weight=1, ];
E: 18 24 [weight=2, ];
E: 18 29 [weight=4, ];
E: 18 33 [weight=5, ];
E: 19 29 [weight=20, ];
E: 19 33 [weight=5, ];
E: 20 21 [weight=1, ];
E: 20 29 [weight=1, ];
E: 20 33 [weight=2, ];
E: 21 24 [weight=1, ];
E: 21 29 [weight=4, ];
E: 21 33 [weight=18, ];
E: 22 24 [weight=3, ];
E: 22 26 [weight=2, ];
E: 22 29 [weight=1, ];
E: 22 33 [weight=2, ];
E: 23 24 [weight=2, ];
E: 23 29 [weight=1, ];
E: 23 33 [weight=2, ];
E: 24 29 [weight=1, ];
E: 24 33 [weight=1, ];
E: 25 33 [weight=16, ];
E: 26 33 [weight=3, ];
E: 27 28 [weight=22, ];
E: 27 33 [weight=4, ];
E: 28 33 [weight=1, ];
E: 29 33 [weight=1, ];
E: 30 31 [weight=1, ];
E: 30 32 [weight=1, ];
E: 30 33 [weight=7, ];
E: 31 33 [weight=2, ];
E: 32 33 [weight=2, ];
