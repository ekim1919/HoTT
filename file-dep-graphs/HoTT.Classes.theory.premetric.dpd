N: 108 "Approximation_ind" [body=yes, kind=cnst, prop=yes, path="premetric", ];
N: 107 "Approximation_rec" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 109 "Approximation_rect" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 106 "Approximation_sind" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 71 "BinaryDup" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 67 "BinaryDup_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 99 "CauchyComplete" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 133 "Closeness" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 73 "Continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 33 "Interval" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 29 "Interval_close" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 28 "Interval_premetric" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 31 "Interval_restrict" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 30 "Interval_restrict_pr" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 102 "IsLimit" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 101 "Lim" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 77 "Lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 79 "NonExpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 121 "PreMetric_ind" [body=yes, kind=cnst, prop=yes, path="premetric", ];
N: 120 "PreMetric_rec" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 122 "PreMetric_rect" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 119 "PreMetric_sind" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 131 "Q_close" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 24 "Q_close_symm" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 18 "Q_premetric" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 7 "Q_recip_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 22 "Q_triangular" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 23 "Q_triangular_one" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 14 "Qabs_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 26 "Qclose_alt" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 25 "Qclose_neg" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 19 "Qclose_rounded" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 20 "Qclose_separating" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 21 "Qclose_separating_not_lt" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 11 "Qjoin_nonexpanding_l" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 10 "Qjoin_nonexpanding_r" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 13 "Qmeet_nonexpanding_l" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 12 "Qmeet_nonexpanding_r" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 9 "Qmult_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 17 "Qneg_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 16 "Qplus_nonexpanding_l" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 15 "Qplus_nonexpanding_r" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 8 "Qpos_upper_close" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 126 "Rounded" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 130 "Separated" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 128 "Triangular" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 75 "Uniform" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 103 "approx_eq" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 104 "approx_equiv" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 105 "approximate" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 80 "arrow_cauchy_complete" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 81 "arrow_lim" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 98 "cauchy_complete" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 132 "close" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 84 "close_arrow" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 83 "close_arrow_apply" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 82 "close_arrow_premetric" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 94 "close_prod" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 93 "close_prod_refl" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 88 "close_prod_rounded" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 89 "close_prod_rounded'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 91 "close_prod_separated" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 92 "close_prod_symm" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 90 "close_prod_triangular" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 63 "const_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 72 "continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 50 "continuous_compose" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 3 "equiv_lim_lim" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 40 "equiv_prod_assoc_inc_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 41 "equiv_prod_assoc_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 42 "equiv_prod_symm_inv_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 43 "equiv_prod_symm_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 4 "equiv_through_approx" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 5 "equiv_through_approx0" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 45 "fst_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 68 "id_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 32 "interval_proj" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 27 "interval_proj_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 100 "lim" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 2 "lim_same_distance" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 6 "limit_unique" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 76 "lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 56 "lipschitz_compose" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 52 "lipschitz_compose_nonexpanding_l" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 53 "lipschitz_compose_nonexpanding_l'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 54 "lipschitz_compose_nonexpanding_r" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 55 "lipschitz_compose_nonexpanding_r'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 62 "lipschitz_const" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 59 "lipschitz_continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 1 "lipschitz_lim_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 64 "lipschitz_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 61 "lipschitz_uniform" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 69 "map2" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 34 "map2_continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 35 "map2_continuous'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 36 "map2_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 37 "map2_lipschitz'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 38 "map2_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 39 "map2_nonexpanding'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 78 "non_expanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 57 "nonexpanding_compose" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 58 "nonexpanding_continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 65 "nonexpanding_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 66 "nonexpanding_lipschitz'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 47 "pair_nonexpanding_l" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 46 "pair_nonexpanding_r" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 112 "premetric_hset" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 118 "premetric_prop" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 117 "premetric_refl" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 113 "premetric_rounded" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 115 "premetric_separated" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 116 "premetric_symm" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 114 "premetric_triangular" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 85 "prod_cauchy_complete" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 86 "prod_lim" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 87 "prod_premetric" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 125 "rounded" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 95 "rounded_le" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 96 "rounded_le'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 97 "rounded_plus" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 129 "separated" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 44 "snd_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 127 "triangular" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 70 "uncurry" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 49 "uncurry_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 48 "uncurry_uniform" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 74 "uniform" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 51 "uniform_compose" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 60 "uniform_continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 111 "Approximation" [kind=inductive, prop=no, path="premetric", ];
N: 124 "PreMetric" [kind=inductive, prop=no, path="premetric", ];
N: 110 "Build_Approximation" [kind=construct, prop=no, path="premetric", ];
N: 123 "Build_PreMetric" [kind=construct, prop=no, path="premetric", ];
E: 1 2 [weight=1, ];
E: 1 76 [weight=1, ];
E: 1 77 [weight=4, ];
E: 1 81 [weight=10, ];
E: 1 83 [weight=4, ];
E: 1 84 [weight=24, ];
E: 1 97 [weight=1, ];
E: 1 99 [weight=2, ];
E: 1 100 [weight=10, ];
E: 1 101 [weight=2, ];
E: 1 104 [weight=4, ];
E: 1 105 [weight=8, ];
E: 1 110 [weight=4, ];
E: 1 111 [weight=2, ];
E: 1 124 [weight=4, ];
E: 1 125 [weight=1, ];
E: 1 132 [weight=15, ];
E: 1 133 [weight=4, ];
E: 2 3 [weight=1, ];
E: 2 99 [weight=2, ];
E: 2 100 [weight=2, ];
E: 2 101 [weight=2, ];
E: 2 111 [weight=4, ];
E: 2 124 [weight=2, ];
E: 2 132 [weight=3, ];
E: 2 133 [weight=2, ];
E: 3 4 [weight=2, ];
E: 3 99 [weight=2, ];
E: 3 100 [weight=8, ];
E: 3 101 [weight=2, ];
E: 3 111 [weight=4, ];
E: 3 124 [weight=2, ];
E: 3 132 [weight=5, ];
E: 3 133 [weight=2, ];
E: 4 5 [weight=1, ];
E: 4 98 [weight=1, ];
E: 4 99 [weight=2, ];
E: 4 100 [weight=2, ];
E: 4 101 [weight=2, ];
E: 4 111 [weight=2, ];
E: 4 124 [weight=2, ];
E: 4 132 [weight=2, ];
E: 4 133 [weight=2, ];
E: 5 102 [weight=2, ];
E: 5 111 [weight=2, ];
E: 5 124 [weight=2, ];
E: 5 125 [weight=1, ];
E: 5 127 [weight=1, ];
E: 5 132 [weight=11, ];
E: 5 133 [weight=2, ];
E: 6 102 [weight=4, ];
E: 6 111 [weight=2, ];
E: 6 124 [weight=2, ];
E: 6 127 [weight=1, ];
E: 6 129 [weight=1, ];
E: 6 132 [weight=2, ];
E: 6 133 [weight=2, ];
E: 7 11 [weight=1, ];
E: 7 24 [weight=1, ];
E: 7 26 [weight=2, ];
E: 7 77 [weight=2, ];
E: 7 78 [weight=1, ];
E: 7 131 [weight=11, ];
E: 7 132 [weight=5, ];
E: 8 131 [weight=1, ];
E: 8 132 [weight=1, ];
E: 8 133 [weight=1, ];
E: 9 26 [weight=2, ];
E: 9 77 [weight=2, ];
E: 9 131 [weight=7, ];
E: 9 132 [weight=3, ];
E: 10 11 [weight=1, ];
E: 10 78 [weight=1, ];
E: 10 79 [weight=2, ];
E: 10 131 [weight=9, ];
E: 10 132 [weight=3, ];
E: 11 26 [weight=2, ];
E: 11 79 [weight=2, ];
E: 11 131 [weight=7, ];
E: 11 132 [weight=3, ];
E: 12 13 [weight=1, ];
E: 12 78 [weight=1, ];
E: 12 79 [weight=2, ];
E: 12 131 [weight=9, ];
E: 12 132 [weight=3, ];
E: 13 26 [weight=2, ];
E: 13 79 [weight=2, ];
E: 13 131 [weight=7, ];
E: 13 132 [weight=3, ];
E: 14 26 [weight=2, ];
E: 14 79 [weight=2, ];
E: 14 131 [weight=7, ];
E: 14 132 [weight=3, ];
E: 15 79 [weight=2, ];
E: 15 131 [weight=6, ];
E: 15 132 [weight=2, ];
E: 16 79 [weight=2, ];
E: 16 131 [weight=6, ];
E: 16 132 [weight=2, ];
E: 17 25 [weight=1, ];
E: 17 79 [weight=2, ];
E: 17 131 [weight=6, ];
E: 17 132 [weight=2, ];
E: 18 19 [weight=1, ];
E: 18 20 [weight=1, ];
E: 18 22 [weight=1, ];
E: 18 24 [weight=1, ];
E: 18 26 [weight=1, ];
E: 18 123 [weight=1, ];
E: 18 124 [weight=1, ];
E: 18 131 [weight=4, ];
E: 18 132 [weight=2, ];
E: 19 26 [weight=4, ];
E: 19 126 [weight=2, ];
E: 19 131 [weight=24, ];
E: 19 132 [weight=22, ];
E: 20 21 [weight=2, ];
E: 20 24 [weight=1, ];
E: 20 130 [weight=2, ];
E: 20 131 [weight=3, ];
E: 20 132 [weight=1, ];
E: 21 24 [weight=1, ];
E: 21 26 [weight=1, ];
E: 21 131 [weight=6, ];
E: 21 132 [weight=6, ];
E: 22 23 [weight=1, ];
E: 22 24 [weight=1, ];
E: 22 128 [weight=2, ];
E: 22 131 [weight=4, ];
E: 22 132 [weight=2, ];
E: 23 131 [weight=11, ];
E: 23 132 [weight=6, ];
E: 24 131 [weight=7, ];
E: 24 132 [weight=4, ];
E: 25 26 [weight=4, ];
E: 25 131 [weight=12, ];
E: 25 132 [weight=12, ];
E: 26 131 [weight=4, ];
E: 26 132 [weight=4, ];
E: 27 29 [weight=2, ];
E: 27 32 [weight=1, ];
E: 27 33 [weight=4, ];
E: 27 79 [weight=1, ];
E: 27 132 [weight=1, ];
E: 27 133 [weight=2, ];
E: 28 29 [weight=25, ];
E: 28 32 [weight=16, ];
E: 28 33 [weight=39, ];
E: 28 123 [weight=1, ];
E: 28 124 [weight=3, ];
E: 28 125 [weight=2, ];
E: 28 126 [weight=1, ];
E: 28 127 [weight=1, ];
E: 28 128 [weight=1, ];
E: 28 129 [weight=1, ];
E: 28 130 [weight=1, ];
E: 28 132 [weight=18, ];
E: 28 133 [weight=2, ];
E: 29 32 [weight=2, ];
E: 29 33 [weight=3, ];
E: 29 132 [weight=1, ];
E: 29 133 [weight=3, ];
E: 30 31 [weight=2, ];
E: 30 33 [weight=2, ];
E: 31 33 [weight=1, ];
E: 32 33 [weight=1, ];
E: 34 35 [weight=1, ];
E: 34 69 [weight=1, ];
E: 34 73 [weight=3, ];
E: 34 94 [weight=2, ];
E: 34 126 [weight=2, ];
E: 34 133 [weight=8, ];
E: 35 69 [weight=22, ];
E: 35 72 [weight=2, ];
E: 35 73 [weight=6, ];
E: 35 94 [weight=17, ];
E: 35 95 [weight=2, ];
E: 35 126 [weight=4, ];
E: 35 132 [weight=31, ];
E: 35 133 [weight=8, ];
E: 36 37 [weight=1, ];
E: 36 69 [weight=1, ];
E: 36 77 [weight=3, ];
E: 36 94 [weight=2, ];
E: 36 126 [weight=2, ];
E: 36 133 [weight=8, ];
E: 37 69 [weight=10, ];
E: 37 76 [weight=2, ];
E: 37 77 [weight=6, ];
E: 37 94 [weight=5, ];
E: 37 95 [weight=2, ];
E: 37 126 [weight=4, ];
E: 37 132 [weight=7, ];
E: 37 133 [weight=8, ];
E: 38 39 [weight=1, ];
E: 38 69 [weight=1, ];
E: 38 79 [weight=3, ];
E: 38 94 [weight=2, ];
E: 38 133 [weight=8, ];
E: 39 69 [weight=10, ];
E: 39 78 [weight=2, ];
E: 39 79 [weight=6, ];
E: 39 94 [weight=5, ];
E: 39 132 [weight=7, ];
E: 39 133 [weight=8, ];
E: 40 79 [weight=2, ];
E: 40 94 [weight=13, ];
E: 40 132 [weight=10, ];
E: 40 133 [weight=6, ];
E: 41 79 [weight=2, ];
E: 41 94 [weight=13, ];
E: 41 132 [weight=10, ];
E: 41 133 [weight=6, ];
E: 42 79 [weight=2, ];
E: 42 94 [weight=5, ];
E: 42 132 [weight=5, ];
E: 42 133 [weight=4, ];
E: 43 79 [weight=2, ];
E: 43 94 [weight=5, ];
E: 43 132 [weight=5, ];
E: 43 133 [weight=4, ];
E: 44 79 [weight=2, ];
E: 44 94 [weight=3, ];
E: 44 132 [weight=2, ];
E: 44 133 [weight=4, ];
E: 45 79 [weight=2, ];
E: 45 94 [weight=3, ];
E: 45 132 [weight=2, ];
E: 45 133 [weight=4, ];
E: 46 79 [weight=2, ];
E: 46 94 [weight=2, ];
E: 46 132 [weight=7, ];
E: 46 133 [weight=4, ];
E: 47 79 [weight=2, ];
E: 47 94 [weight=2, ];
E: 47 132 [weight=7, ];
E: 47 133 [weight=4, ];
E: 48 70 [weight=8, ];
E: 48 74 [weight=2, ];
E: 48 75 [weight=6, ];
E: 48 94 [weight=3, ];
E: 48 95 [weight=2, ];
E: 48 126 [weight=4, ];
E: 48 127 [weight=1, ];
E: 48 128 [weight=2, ];
E: 48 132 [weight=5, ];
E: 48 133 [weight=6, ];
E: 49 70 [weight=4, ];
E: 49 76 [weight=2, ];
E: 49 77 [weight=6, ];
E: 49 94 [weight=3, ];
E: 49 127 [weight=1, ];
E: 49 128 [weight=2, ];
E: 49 132 [weight=6, ];
E: 49 133 [weight=6, ];
E: 50 72 [weight=2, ];
E: 50 73 [weight=6, ];
E: 50 132 [weight=25, ];
E: 50 133 [weight=6, ];
E: 51 74 [weight=2, ];
E: 51 75 [weight=6, ];
E: 51 132 [weight=2, ];
E: 51 133 [weight=6, ];
E: 52 53 [weight=1, ];
E: 52 77 [weight=3, ];
E: 52 79 [weight=2, ];
E: 52 133 [weight=6, ];
E: 53 56 [weight=1, ];
E: 53 65 [weight=1, ];
E: 53 77 [weight=4, ];
E: 53 79 [weight=2, ];
E: 53 133 [weight=6, ];
E: 54 55 [weight=1, ];
E: 54 77 [weight=3, ];
E: 54 79 [weight=2, ];
E: 54 133 [weight=6, ];
E: 55 56 [weight=1, ];
E: 55 65 [weight=1, ];
E: 55 77 [weight=5, ];
E: 55 79 [weight=2, ];
E: 55 133 [weight=6, ];
E: 56 77 [weight=6, ];
E: 56 132 [weight=6, ];
E: 56 133 [weight=6, ];
E: 57 78 [weight=2, ];
E: 57 79 [weight=6, ];
E: 57 132 [weight=1, ];
E: 57 133 [weight=6, ];
E: 58 60 [weight=1, ];
E: 58 61 [weight=1, ];
E: 58 65 [weight=1, ];
E: 58 73 [weight=1, ];
E: 58 79 [weight=2, ];
E: 58 133 [weight=4, ];
E: 59 60 [weight=1, ];
E: 59 61 [weight=1, ];
E: 59 73 [weight=1, ];
E: 59 77 [weight=2, ];
E: 59 133 [weight=4, ];
E: 60 73 [weight=2, ];
E: 60 74 [weight=1, ];
E: 60 75 [weight=2, ];
E: 60 132 [weight=4, ];
E: 60 133 [weight=4, ];
E: 61 75 [weight=2, ];
E: 61 76 [weight=1, ];
E: 61 77 [weight=2, ];
E: 61 132 [weight=3, ];
E: 61 133 [weight=4, ];
E: 62 77 [weight=2, ];
E: 62 132 [weight=3, ];
E: 62 133 [weight=4, ];
E: 63 79 [weight=2, ];
E: 63 132 [weight=3, ];
E: 63 133 [weight=4, ];
E: 64 76 [weight=1, ];
E: 64 77 [weight=2, ];
E: 64 79 [weight=2, ];
E: 64 132 [weight=2, ];
E: 64 133 [weight=4, ];
E: 65 66 [weight=1, ];
E: 65 77 [weight=1, ];
E: 65 79 [weight=2, ];
E: 65 133 [weight=4, ];
E: 66 77 [weight=2, ];
E: 66 78 [weight=1, ];
E: 66 79 [weight=2, ];
E: 66 132 [weight=2, ];
E: 66 133 [weight=4, ];
E: 67 71 [weight=6, ];
E: 67 79 [weight=2, ];
E: 67 94 [weight=2, ];
E: 67 132 [weight=3, ];
E: 67 133 [weight=2, ];
E: 68 79 [weight=2, ];
E: 68 132 [weight=1, ];
E: 68 133 [weight=2, ];
E: 72 73 [weight=2, ];
E: 72 132 [weight=2, ];
E: 72 133 [weight=4, ];
E: 73 132 [weight=2, ];
E: 73 133 [weight=4, ];
E: 74 75 [weight=2, ];
E: 74 132 [weight=2, ];
E: 74 133 [weight=4, ];
E: 75 132 [weight=2, ];
E: 75 133 [weight=4, ];
E: 76 77 [weight=2, ];
E: 76 132 [weight=2, ];
E: 76 133 [weight=4, ];
E: 77 132 [weight=2, ];
E: 77 133 [weight=4, ];
E: 78 79 [weight=2, ];
E: 78 132 [weight=2, ];
E: 78 133 [weight=4, ];
E: 79 132 [weight=2, ];
E: 79 133 [weight=4, ];
E: 80 81 [weight=5, ];
E: 80 83 [weight=5, ];
E: 80 84 [weight=23, ];
E: 80 98 [weight=1, ];
E: 80 99 [weight=4, ];
E: 80 100 [weight=7, ];
E: 80 101 [weight=2, ];
E: 80 102 [weight=2, ];
E: 80 104 [weight=5, ];
E: 80 105 [weight=10, ];
E: 80 110 [weight=5, ];
E: 80 111 [weight=2, ];
E: 80 124 [weight=2, ];
E: 80 132 [weight=6, ];
E: 80 133 [weight=2, ];
E: 81 83 [weight=1, ];
E: 81 84 [weight=6, ];
E: 81 100 [weight=1, ];
E: 81 101 [weight=4, ];
E: 81 104 [weight=1, ];
E: 81 105 [weight=2, ];
E: 81 110 [weight=1, ];
E: 81 111 [weight=1, ];
E: 81 124 [weight=2, ];
E: 81 133 [weight=2, ];
E: 82 83 [weight=1, ];
E: 82 84 [weight=31, ];
E: 82 97 [weight=1, ];
E: 82 123 [weight=1, ];
E: 82 124 [weight=3, ];
E: 82 126 [weight=1, ];
E: 82 127 [weight=1, ];
E: 82 128 [weight=1, ];
E: 82 129 [weight=1, ];
E: 82 130 [weight=1, ];
E: 82 132 [weight=82, ];
E: 82 133 [weight=2, ];
E: 83 84 [weight=2, ];
E: 83 97 [weight=1, ];
E: 83 124 [weight=2, ];
E: 83 132 [weight=12, ];
E: 83 133 [weight=2, ];
E: 84 132 [weight=1, ];
E: 84 133 [weight=3, ];
E: 85 86 [weight=5, ];
E: 85 94 [weight=9, ];
E: 85 98 [weight=2, ];
E: 85 99 [weight=6, ];
E: 85 100 [weight=3, ];
E: 85 101 [weight=4, ];
E: 85 102 [weight=1, ];
E: 85 110 [weight=2, ];
E: 85 111 [weight=1, ];
E: 85 132 [weight=6, ];
E: 85 133 [weight=4, ];
E: 86 94 [weight=5, ];
E: 86 100 [weight=2, ];
E: 86 101 [weight=6, ];
E: 86 110 [weight=2, ];
E: 86 111 [weight=1, ];
E: 86 132 [weight=4, ];
E: 86 133 [weight=4, ];
E: 87 88 [weight=1, ];
E: 87 90 [weight=1, ];
E: 87 91 [weight=1, ];
E: 87 92 [weight=1, ];
E: 87 93 [weight=1, ];
E: 87 94 [weight=2, ];
E: 87 123 [weight=1, ];
E: 87 124 [weight=5, ];
E: 87 132 [weight=6, ];
E: 87 133 [weight=4, ];
E: 88 89 [weight=1, ];
E: 88 94 [weight=1, ];
E: 88 126 [weight=3, ];
E: 88 132 [weight=4, ];
E: 88 133 [weight=4, ];
E: 89 94 [weight=24, ];
E: 89 95 [weight=2, ];
E: 89 97 [weight=2, ];
E: 89 125 [weight=2, ];
E: 89 126 [weight=6, ];
E: 89 132 [weight=56, ];
E: 89 133 [weight=4, ];
E: 90 94 [weight=4, ];
E: 90 127 [weight=2, ];
E: 90 128 [weight=6, ];
E: 90 132 [weight=8, ];
E: 90 133 [weight=4, ];
E: 91 94 [weight=3, ];
E: 91 129 [weight=2, ];
E: 91 130 [weight=6, ];
E: 91 132 [weight=3, ];
E: 91 133 [weight=4, ];
E: 92 94 [weight=3, ];
E: 92 132 [weight=11, ];
E: 92 133 [weight=4, ];
E: 93 94 [weight=1, ];
E: 93 132 [weight=7, ];
E: 93 133 [weight=4, ];
E: 94 132 [weight=2, ];
E: 94 133 [weight=5, ];
E: 95 96 [weight=1, ];
E: 95 126 [weight=1, ];
E: 95 132 [weight=2, ];
E: 95 133 [weight=1, ];
E: 96 97 [weight=1, ];
E: 96 126 [weight=2, ];
E: 96 132 [weight=6, ];
E: 96 133 [weight=2, ];
E: 97 125 [weight=1, ];
E: 97 126 [weight=2, ];
E: 97 132 [weight=9, ];
E: 97 133 [weight=2, ];
E: 98 99 [weight=2, ];
E: 98 100 [weight=1, ];
E: 98 101 [weight=2, ];
E: 98 102 [weight=1, ];
E: 98 111 [weight=1, ];
E: 98 133 [weight=2, ];
E: 99 100 [weight=1, ];
E: 99 101 [weight=2, ];
E: 99 102 [weight=1, ];
E: 99 111 [weight=1, ];
E: 99 133 [weight=2, ];
E: 100 101 [weight=2, ];
E: 100 111 [weight=1, ];
E: 100 133 [weight=2, ];
E: 101 111 [weight=1, ];
E: 101 133 [weight=2, ];
E: 102 111 [weight=2, ];
E: 102 132 [weight=1, ];
E: 102 133 [weight=2, ];
E: 103 110 [weight=7, ];
E: 103 111 [weight=8, ];
E: 103 132 [weight=10, ];
E: 103 133 [weight=2, ];
E: 104 111 [weight=2, ];
E: 104 132 [weight=1, ];
E: 104 133 [weight=2, ];
E: 105 111 [weight=2, ];
E: 105 133 [weight=2, ];
E: 106 110 [weight=2, ];
E: 106 111 [weight=4, ];
E: 106 132 [weight=2, ];
E: 106 133 [weight=2, ];
E: 107 109 [weight=1, ];
E: 107 110 [weight=1, ];
E: 107 111 [weight=3, ];
E: 107 132 [weight=1, ];
E: 107 133 [weight=2, ];
E: 108 110 [weight=2, ];
E: 108 111 [weight=4, ];
E: 108 132 [weight=2, ];
E: 108 133 [weight=2, ];
E: 109 110 [weight=2, ];
E: 109 111 [weight=4, ];
E: 109 132 [weight=2, ];
E: 109 133 [weight=2, ];
E: 110 132 [weight=1, ];
E: 110 133 [weight=1, ];
E: 111 132 [weight=1, ];
E: 111 133 [weight=1, ];
E: 112 124 [weight=2, ];
E: 112 129 [weight=1, ];
E: 112 132 [weight=3, ];
E: 112 133 [weight=2, ];
E: 113 124 [weight=2, ];
E: 113 126 [weight=1, ];
E: 113 133 [weight=2, ];
E: 114 124 [weight=2, ];
E: 114 128 [weight=1, ];
E: 114 133 [weight=2, ];
E: 115 124 [weight=2, ];
E: 115 130 [weight=1, ];
E: 115 133 [weight=2, ];
E: 116 124 [weight=2, ];
E: 116 132 [weight=1, ];
E: 116 133 [weight=2, ];
E: 117 124 [weight=2, ];
E: 117 132 [weight=1, ];
E: 117 133 [weight=2, ];
E: 118 124 [weight=2, ];
E: 118 132 [weight=1, ];
E: 118 133 [weight=2, ];
E: 119 123 [weight=2, ];
E: 119 124 [weight=4, ];
E: 119 126 [weight=2, ];
E: 119 128 [weight=2, ];
E: 119 130 [weight=2, ];
E: 119 132 [weight=6, ];
E: 119 133 [weight=2, ];
E: 120 122 [weight=1, ];
E: 120 123 [weight=1, ];
E: 120 124 [weight=3, ];
E: 120 126 [weight=1, ];
E: 120 128 [weight=1, ];
E: 120 130 [weight=1, ];
E: 120 132 [weight=3, ];
E: 120 133 [weight=2, ];
E: 121 123 [weight=2, ];
E: 121 124 [weight=4, ];
E: 121 126 [weight=2, ];
E: 121 128 [weight=2, ];
E: 121 130 [weight=2, ];
E: 121 132 [weight=6, ];
E: 121 133 [weight=2, ];
E: 122 123 [weight=2, ];
E: 122 124 [weight=4, ];
E: 122 126 [weight=2, ];
E: 122 128 [weight=2, ];
E: 122 130 [weight=2, ];
E: 122 132 [weight=6, ];
E: 122 133 [weight=2, ];
E: 123 126 [weight=1, ];
E: 123 128 [weight=1, ];
E: 123 130 [weight=1, ];
E: 123 132 [weight=3, ];
E: 123 133 [weight=1, ];
E: 124 126 [weight=1, ];
E: 124 128 [weight=1, ];
E: 124 130 [weight=1, ];
E: 124 132 [weight=3, ];
E: 124 133 [weight=1, ];
E: 125 126 [weight=2, ];
E: 125 132 [weight=2, ];
E: 125 133 [weight=2, ];
E: 126 132 [weight=2, ];
E: 126 133 [weight=2, ];
E: 127 128 [weight=2, ];
E: 127 132 [weight=3, ];
E: 127 133 [weight=2, ];
E: 128 132 [weight=3, ];
E: 128 133 [weight=2, ];
E: 129 130 [weight=2, ];
E: 129 132 [weight=1, ];
E: 129 133 [weight=2, ];
E: 130 132 [weight=1, ];
E: 130 133 [weight=2, ];
E: 131 133 [weight=1, ];
E: 132 133 [weight=2, ];
