N: 22 "Colimit" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 19 "Colimit_ind" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 18 "Colimit_ind_beta_colimp" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 17 "Colimit_rec" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 16 "Colimit_rec_beta_colimp" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 28 "IsColimit_ind" [body=yes, kind=cnst, prop=yes, path="Colimit", ];
N: 27 "IsColimit_rec" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 29 "IsColimit_rect" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 26 "IsColimit_sind" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 13 "cocone_colimit" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 23 "cocone_postcompose_inv" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 21 "colim" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 1 "colimit_adjoint" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 2 "colimit_unicity" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 20 "colimp" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 14 "equiv_colimit_rec" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 3 "equiv_functor_colimit" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 8 "functor_colimit" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 7 "functor_colimit_commute" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 5 "functor_colimit_eisretr" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 6 "functor_colimit_eissect" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 25 "iscolimit_cocone" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 11 "iscolimit_colimit" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 9 "iscolimit_postcompose_equiv" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 10 "iscolimit_precompose_equiv" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 24 "iscolimit_unicocone" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 15 "isequiv_colimit_rec" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 4 "isequiv_functor_colimit" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 12 "unicocone_colimit" [body=yes, kind=cnst, prop=no, path="Colimit", ];
N: 31 "IsColimit" [kind=inductive, prop=no, path="Colimit", ];
N: 30 "Build_IsColimit" [kind=construct, prop=no, path="Colimit", ];
E: 1 14 [weight=1, ];
E: 1 22 [weight=3, ];
E: 2 3 [weight=1, ];
E: 2 31 [weight=4, ];
E: 3 4 [weight=1, ];
E: 3 8 [weight=1, ];
E: 3 31 [weight=4, ];
E: 4 5 [weight=1, ];
E: 4 6 [weight=1, ];
E: 4 8 [weight=3, ];
E: 4 31 [weight=4, ];
E: 5 8 [weight=18, ];
E: 5 31 [weight=4, ];
E: 6 8 [weight=18, ];
E: 6 31 [weight=4, ];
E: 7 8 [weight=1, ];
E: 7 31 [weight=4, ];
E: 8 23 [weight=1, ];
E: 8 31 [weight=4, ];
E: 9 30 [weight=1, ];
E: 9 31 [weight=3, ];
E: 10 30 [weight=1, ];
E: 10 31 [weight=3, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=1, ];
E: 11 22 [weight=2, ];
E: 11 30 [weight=1, ];
E: 11 31 [weight=1, ];
E: 12 13 [weight=52, ];
E: 12 16 [weight=2, ];
E: 12 17 [weight=47, ];
E: 12 19 [weight=1, ];
E: 12 20 [weight=15, ];
E: 12 21 [weight=108, ];
E: 12 22 [weight=87, ];
E: 13 20 [weight=1, ];
E: 13 21 [weight=1, ];
E: 13 22 [weight=2, ];
E: 14 15 [weight=1, ];
E: 14 17 [weight=1, ];
E: 14 22 [weight=2, ];
E: 15 16 [weight=2, ];
E: 15 17 [weight=86, ];
E: 15 19 [weight=1, ];
E: 15 20 [weight=78, ];
E: 15 21 [weight=323, ];
E: 15 22 [weight=102, ];
E: 16 17 [weight=12, ];
E: 16 18 [weight=1, ];
E: 16 19 [weight=17, ];
E: 16 20 [weight=53, ];
E: 16 21 [weight=130, ];
E: 16 22 [weight=99, ];
E: 17 19 [weight=1, ];
E: 17 20 [weight=2, ];
E: 17 21 [weight=4, ];
E: 17 22 [weight=5, ];
E: 18 19 [weight=42, ];
E: 18 20 [weight=4, ];
E: 18 21 [weight=110, ];
E: 18 22 [weight=31, ];
E: 19 20 [weight=2, ];
E: 19 21 [weight=8, ];
E: 19 22 [weight=5, ];
E: 20 21 [weight=2, ];
E: 20 22 [weight=1, ];
E: 21 22 [weight=1, ];
E: 23 31 [weight=2, ];
E: 24 31 [weight=2, ];
E: 25 31 [weight=2, ];
E: 26 30 [weight=2, ];
E: 26 31 [weight=4, ];
E: 27 29 [weight=1, ];
E: 27 30 [weight=1, ];
E: 27 31 [weight=3, ];
E: 28 30 [weight=2, ];
E: 28 31 [weight=4, ];
E: 29 30 [weight=2, ];
E: 29 31 [weight=4, ];
