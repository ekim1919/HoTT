N: 156 "Fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 107 "FinNat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 81 "FinSeq" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 54 "Finite_ind" [body=yes, kind=cnst, prop=yes, path="Finite", ];
N: 53 "Finite_rec" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 55 "Finite_rect" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 52 "Finite_sind" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 112 "compute_fin_ind_fin_zero" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 111 "compute_fin_ind_fsucc" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 109 "compute_fin_rec_fin_zero" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 108 "compute_fin_rec_fsucc" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 96 "compute_finnat_ind_succ" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 97 "compute_finnat_ind_zero" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 58 "compute_finseq_ind_fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 59 "compute_finseq_ind_fsnil" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 73 "compute_fshead" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 74 "compute_fshead'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 69 "compute_fstail" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 70 "compute_fstail'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 63 "compute_path_fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 65 "compute_path_fscons'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 152 "contr_fin1" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 154 "decidable_fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 32 "decidable_finite_hprop" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 31 "decidable_merely_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 153 "decidablepaths_fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 33 "decidablepaths_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 6 "detachable_finite_subset" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 7 "detachable_image_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 122 "equiv_fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 82 "equiv_fin_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 51 "fcard" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 21 "fcard_arrow" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 19 "fcard_aut" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 13 "fcard_domain" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 44 "fcard_equiv" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 43 "fcard_equiv'" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 10 "fcard_forall" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 23 "fcard_prod" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 4 "fcard_quotient" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 16 "fcard_sigma" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 34 "fcard_succ" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 25 "fcard_sum" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 151 "fin_empty" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 130 "fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 129 "fin_equiv'" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 128 "fin_equiv_hfiber" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 125 "fin_equiv_inj_fst" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 124 "fin_equiv_inj_snd" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 127 "fin_equiv_inv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 126 "fin_equiv_issect" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 148 "fin_incl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 113 "fin_ind" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 149 "fin_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 115 "fin_nat" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 110 "fin_rec" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 94 "fin_to_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 155 "fin_to_nat" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 140 "fin_transpose_last_two" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 139 "fin_transpose_last_two_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 138 "fin_transpose_last_two_nextlast" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 137 "fin_transpose_last_two_rest" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 136 "fin_transpose_last_with" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 131 "fin_transpose_last_with_invol" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 135 "fin_transpose_last_with_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 132 "fin_transpose_last_with_last_other" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 133 "fin_transpose_last_with_rest" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 134 "fin_transpose_last_with_with" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 150 "fin_zero" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 17 "finadd" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 15 "finadd_const" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 20 "finite_aut" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 28 "finite_choice" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 39 "finite_contr" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 38 "finite_decidable_hprop" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 8 "finite_detachable_subset" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 41 "finite_empty" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 1 "finite_enumeration_repeats" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 2 "finite_enumeration_stage" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 47 "finite_equiv" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 46 "finite_equiv'" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 45 "finite_equiv_equiv" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 42 "finite_fin" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 22 "finite_forall" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 14 "finite_hfiber" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 12 "finite_image" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 29 "finite_ind_hprop" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 37 "finite_merely" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 36 "finite_paths" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 24 "finite_prod" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 5 "finite_quotient" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 18 "finite_sigma" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 35 "finite_succ" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 26 "finite_sum" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 40 "finite_unit" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 11 "finmult" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 9 "finmult_const" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 98 "finnat_ind" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 93 "finnat_to_fin" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 60 "finseq_ind" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 77 "fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 78 "fscons'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 75 "fshead" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 76 "fshead'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 80 "fsnil" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 71 "fstail" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 72 "fstail'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 147 "fsucc" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 116 "fsucc_mod" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 100 "incl_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 95 "is_bounded_fin_to_nat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 146 "isembedding_fsucc" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 123 "isequiv_fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 48 "ishprop_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 27 "isprojective_fin_n" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 49 "issig_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 102 "last_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 3 "leq_inj_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 30 "merely_decidable_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 50 "merely_equiv_fin" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 121 "nat_eq_fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 120 "nat_fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 118 "nat_fin_compl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 117 "nat_fin_compl_compl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 119 "nat_fin_inl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 67 "path_expand_fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 68 "path_expand_fscons'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 61 "path_expand_fscons_fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 62 "path_expand_fscons_fscons'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 145 "path_fin_fsucc_incl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 90 "path_fin_to_finnat_fin_incl" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 89 "path_fin_to_finnat_fin_last" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 91 "path_fin_to_finnat_fin_zero" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 92 "path_fin_to_finnat_fsucc" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 83 "path_fin_to_finnat_to_fin" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 86 "path_finnat_to_fin_incl" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 85 "path_finnat_to_fin_last" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 88 "path_finnat_to_fin_succ" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 84 "path_finnat_to_fin_to_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 87 "path_finnat_to_fin_zero" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 64 "path_fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 66 "path_fscons'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 79 "path_fsnil" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 99 "path_incl_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 101 "path_last_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 144 "path_nat_fin_incl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 141 "path_nat_fin_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 142 "path_nat_fin_zero" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 143 "path_nat_fsucc" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 103 "path_succ_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 105 "path_zero_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 114 "sperners_lemma_1d" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 104 "succ_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 106 "zero_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 57 "Finite" [kind=inductive, prop=no, path="Finite", ];
N: 56 "Build_Finite" [kind=construct, prop=no, path="Finite", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 42 [weight=2, ];
E: 1 57 [weight=2, ];
E: 1 120 [weight=1, ];
E: 1 156 [weight=6, ];
E: 2 7 [weight=1, ];
E: 2 33 [weight=1, ];
E: 2 42 [weight=1, ];
E: 2 57 [weight=2, ];
E: 2 117 [weight=1, ];
E: 2 118 [weight=2, ];
E: 2 120 [weight=10, ];
E: 2 156 [weight=136, ];
E: 3 56 [weight=2, ];
E: 3 57 [weight=4, ];
E: 3 133 [weight=1, ];
E: 3 134 [weight=1, ];
E: 3 135 [weight=1, ];
E: 3 136 [weight=18, ];
E: 3 156 [weight=192, ];
E: 4 5 [weight=14, ];
E: 4 8 [weight=10, ];
E: 4 13 [weight=1, ];
E: 4 17 [weight=4, ];
E: 4 18 [weight=9, ];
E: 4 36 [weight=9, ];
E: 4 43 [weight=1, ];
E: 4 57 [weight=2, ];
E: 5 18 [weight=1, ];
E: 5 31 [weight=1, ];
E: 5 35 [weight=1, ];
E: 5 38 [weight=1, ];
E: 5 41 [weight=1, ];
E: 5 42 [weight=1, ];
E: 5 46 [weight=3, ];
E: 5 47 [weight=1, ];
E: 5 48 [weight=2, ];
E: 5 57 [weight=10, ];
E: 5 156 [weight=458, ];
E: 6 7 [weight=1, ];
E: 6 57 [weight=4, ];
E: 7 18 [weight=1, ];
E: 7 36 [weight=1, ];
E: 7 57 [weight=5, ];
E: 7 156 [weight=15, ];
E: 8 18 [weight=1, ];
E: 8 38 [weight=1, ];
E: 8 57 [weight=3, ];
E: 9 11 [weight=1, ];
E: 9 21 [weight=1, ];
E: 9 42 [weight=1, ];
E: 9 57 [weight=2, ];
E: 9 156 [weight=1, ];
E: 10 11 [weight=5, ];
E: 10 22 [weight=7, ];
E: 10 28 [weight=1, ];
E: 10 42 [weight=1, ];
E: 10 43 [weight=1, ];
E: 10 57 [weight=4, ];
E: 10 156 [weight=15, ];
E: 11 22 [weight=1, ];
E: 11 42 [weight=1, ];
E: 11 57 [weight=2, ];
E: 11 156 [weight=1, ];
E: 12 18 [weight=2, ];
E: 12 36 [weight=1, ];
E: 12 37 [weight=1, ];
E: 12 57 [weight=5, ];
E: 13 16 [weight=1, ];
E: 13 17 [weight=2, ];
E: 13 18 [weight=7, ];
E: 13 36 [weight=5, ];
E: 13 43 [weight=1, ];
E: 13 57 [weight=4, ];
E: 14 18 [weight=1, ];
E: 14 36 [weight=1, ];
E: 14 57 [weight=5, ];
E: 15 17 [weight=2, ];
E: 15 18 [weight=1, ];
E: 15 23 [weight=1, ];
E: 15 24 [weight=2, ];
E: 15 42 [weight=4, ];
E: 15 43 [weight=1, ];
E: 15 57 [weight=2, ];
E: 15 156 [weight=7, ];
E: 16 17 [weight=5, ];
E: 16 18 [weight=7, ];
E: 16 28 [weight=1, ];
E: 16 42 [weight=1, ];
E: 16 43 [weight=1, ];
E: 16 57 [weight=4, ];
E: 16 156 [weight=15, ];
E: 17 18 [weight=1, ];
E: 17 42 [weight=1, ];
E: 17 57 [weight=2, ];
E: 17 156 [weight=1, ];
E: 18 26 [weight=1, ];
E: 18 41 [weight=1, ];
E: 18 46 [weight=1, ];
E: 18 47 [weight=3, ];
E: 18 48 [weight=1, ];
E: 18 57 [weight=15, ];
E: 18 156 [weight=66, ];
E: 19 20 [weight=18, ];
E: 19 23 [weight=1, ];
E: 19 24 [weight=3, ];
E: 19 42 [weight=18, ];
E: 19 44 [weight=2, ];
E: 19 57 [weight=2, ];
E: 19 122 [weight=3, ];
E: 19 156 [weight=57, ];
E: 20 24 [weight=1, ];
E: 20 39 [weight=1, ];
E: 20 42 [weight=1, ];
E: 20 47 [weight=2, ];
E: 20 48 [weight=1, ];
E: 20 57 [weight=7, ];
E: 20 122 [weight=2, ];
E: 20 156 [weight=32, ];
E: 21 22 [weight=26, ];
E: 21 23 [weight=1, ];
E: 21 24 [weight=3, ];
E: 21 40 [weight=7, ];
E: 21 42 [weight=16, ];
E: 21 44 [weight=4, ];
E: 21 57 [weight=4, ];
E: 21 156 [weight=40, ];
E: 22 24 [weight=1, ];
E: 22 39 [weight=1, ];
E: 22 46 [weight=1, ];
E: 22 47 [weight=2, ];
E: 22 48 [weight=1, ];
E: 22 57 [weight=14, ];
E: 22 156 [weight=31, ];
E: 23 24 [weight=30, ];
E: 23 25 [weight=1, ];
E: 23 26 [weight=3, ];
E: 23 40 [weight=9, ];
E: 23 41 [weight=2, ];
E: 23 42 [weight=23, ];
E: 23 43 [weight=2, ];
E: 23 44 [weight=3, ];
E: 23 57 [weight=4, ];
E: 23 156 [weight=32, ];
E: 24 26 [weight=1, ];
E: 24 41 [weight=1, ];
E: 24 47 [weight=4, ];
E: 24 48 [weight=1, ];
E: 24 57 [weight=8, ];
E: 24 156 [weight=11, ];
E: 25 26 [weight=17, ];
E: 25 35 [weight=2, ];
E: 25 41 [weight=1, ];
E: 25 42 [weight=17, ];
E: 25 43 [weight=1, ];
E: 25 44 [weight=3, ];
E: 25 57 [weight=4, ];
E: 25 156 [weight=17, ];
E: 26 35 [weight=1, ];
E: 26 47 [weight=3, ];
E: 26 48 [weight=1, ];
E: 26 57 [weight=8, ];
E: 26 156 [weight=11, ];
E: 27 28 [weight=1, ];
E: 27 42 [weight=1, ];
E: 27 156 [weight=7, ];
E: 28 57 [weight=2, ];
E: 28 156 [weight=46, ];
E: 29 35 [weight=4, ];
E: 29 41 [weight=2, ];
E: 29 42 [weight=12, ];
E: 29 48 [weight=2, ];
E: 29 57 [weight=16, ];
E: 29 156 [weight=27, ];
E: 30 31 [weight=1, ];
E: 30 57 [weight=2, ];
E: 31 32 [weight=1, ];
E: 31 37 [weight=1, ];
E: 31 57 [weight=2, ];
E: 32 57 [weight=2, ];
E: 32 156 [weight=11, ];
E: 33 57 [weight=2, ];
E: 33 153 [weight=1, ];
E: 33 156 [weight=7, ];
E: 34 35 [weight=2, ];
E: 34 57 [weight=2, ];
E: 35 56 [weight=1, ];
E: 35 57 [weight=3, ];
E: 35 156 [weight=8, ];
E: 36 38 [weight=1, ];
E: 36 47 [weight=1, ];
E: 36 48 [weight=1, ];
E: 36 57 [weight=4, ];
E: 36 153 [weight=2, ];
E: 36 156 [weight=15, ];
E: 37 38 [weight=2, ];
E: 37 57 [weight=4, ];
E: 37 156 [weight=11, ];
E: 38 39 [weight=1, ];
E: 38 41 [weight=1, ];
E: 38 47 [weight=1, ];
E: 38 57 [weight=2, ];
E: 39 40 [weight=1, ];
E: 39 47 [weight=1, ];
E: 39 57 [weight=1, ];
E: 40 42 [weight=1, ];
E: 40 46 [weight=1, ];
E: 40 57 [weight=1, ];
E: 40 156 [weight=2, ];
E: 41 42 [weight=1, ];
E: 41 57 [weight=1, ];
E: 42 56 [weight=1, ];
E: 42 57 [weight=1, ];
E: 42 156 [weight=5, ];
E: 43 44 [weight=1, ];
E: 43 57 [weight=4, ];
E: 44 47 [weight=4, ];
E: 44 48 [weight=1, ];
E: 44 51 [weight=1, ];
E: 44 57 [weight=6, ];
E: 45 46 [weight=2, ];
E: 45 48 [weight=2, ];
E: 45 57 [weight=4, ];
E: 46 47 [weight=1, ];
E: 46 57 [weight=2, ];
E: 47 56 [weight=1, ];
E: 47 57 [weight=3, ];
E: 47 156 [weight=9, ];
E: 48 49 [weight=1, ];
E: 48 57 [weight=2, ];
E: 48 121 [weight=1, ];
E: 48 156 [weight=16, ];
E: 49 56 [weight=8, ];
E: 49 57 [weight=12, ];
E: 49 156 [weight=21, ];
E: 50 57 [weight=2, ];
E: 50 156 [weight=1, ];
E: 51 57 [weight=2, ];
E: 52 56 [weight=2, ];
E: 52 57 [weight=4, ];
E: 52 156 [weight=2, ];
E: 53 55 [weight=1, ];
E: 53 56 [weight=1, ];
E: 53 57 [weight=3, ];
E: 53 156 [weight=1, ];
E: 54 56 [weight=2, ];
E: 54 57 [weight=4, ];
E: 54 156 [weight=2, ];
E: 55 56 [weight=2, ];
E: 55 57 [weight=4, ];
E: 55 156 [weight=2, ];
E: 56 156 [weight=1, ];
E: 57 156 [weight=1, ];
E: 58 60 [weight=11, ];
E: 58 61 [weight=1, ];
E: 58 63 [weight=1, ];
E: 58 64 [weight=7, ];
E: 58 67 [weight=3, ];
E: 58 69 [weight=5, ];
E: 58 71 [weight=50, ];
E: 58 73 [weight=5, ];
E: 58 75 [weight=39, ];
E: 58 77 [weight=127, ];
E: 58 80 [weight=2, ];
E: 58 81 [weight=22, ];
E: 59 60 [weight=1, ];
E: 59 77 [weight=2, ];
E: 59 79 [weight=3, ];
E: 59 80 [weight=24, ];
E: 59 81 [weight=17, ];
E: 60 67 [weight=1, ];
E: 60 71 [weight=3, ];
E: 60 75 [weight=2, ];
E: 60 77 [weight=3, ];
E: 60 79 [weight=1, ];
E: 60 80 [weight=3, ];
E: 60 81 [weight=12, ];
E: 61 62 [weight=1, ];
E: 61 64 [weight=1, ];
E: 61 66 [weight=8, ];
E: 61 67 [weight=1, ];
E: 61 68 [weight=4, ];
E: 61 69 [weight=4, ];
E: 61 70 [weight=10, ];
E: 61 71 [weight=21, ];
E: 61 72 [weight=19, ];
E: 61 73 [weight=9, ];
E: 61 75 [weight=18, ];
E: 61 77 [weight=62, ];
E: 61 78 [weight=19, ];
E: 61 81 [weight=3, ];
E: 61 156 [weight=64, ];
E: 62 66 [weight=5, ];
E: 62 68 [weight=5, ];
E: 62 70 [weight=55, ];
E: 62 71 [weight=11, ];
E: 62 72 [weight=117, ];
E: 62 73 [weight=36, ];
E: 62 74 [weight=22, ];
E: 62 75 [weight=42, ];
E: 62 76 [weight=143, ];
E: 62 77 [weight=31, ];
E: 62 78 [weight=437, ];
E: 62 81 [weight=88, ];
E: 62 111 [weight=2, ];
E: 62 112 [weight=2, ];
E: 62 113 [weight=7, ];
E: 62 147 [weight=82, ];
E: 62 150 [weight=86, ];
E: 62 156 [weight=54, ];
E: 63 64 [weight=1, ];
E: 63 65 [weight=1, ];
E: 63 66 [weight=4, ];
E: 63 77 [weight=35, ];
E: 63 81 [weight=15, ];
E: 63 156 [weight=43, ];
E: 64 66 [weight=1, ];
E: 64 77 [weight=6, ];
E: 64 81 [weight=7, ];
E: 64 156 [weight=8, ];
E: 65 66 [weight=5, ];
E: 65 70 [weight=19, ];
E: 65 72 [weight=18, ];
E: 65 73 [weight=19, ];
E: 65 75 [weight=23, ];
E: 65 77 [weight=23, ];
E: 65 78 [weight=102, ];
E: 65 81 [weight=50, ];
E: 65 111 [weight=1, ];
E: 65 112 [weight=1, ];
E: 65 113 [weight=3, ];
E: 65 147 [weight=34, ];
E: 65 150 [weight=29, ];
E: 65 156 [weight=41, ];
E: 66 70 [weight=2, ];
E: 66 72 [weight=3, ];
E: 66 73 [weight=2, ];
E: 66 75 [weight=4, ];
E: 66 77 [weight=4, ];
E: 66 78 [weight=10, ];
E: 66 81 [weight=12, ];
E: 66 113 [weight=1, ];
E: 66 147 [weight=1, ];
E: 66 156 [weight=10, ];
E: 67 68 [weight=1, ];
E: 67 71 [weight=3, ];
E: 67 75 [weight=3, ];
E: 67 77 [weight=3, ];
E: 67 81 [weight=3, ];
E: 67 156 [weight=5, ];
E: 68 70 [weight=1, ];
E: 68 71 [weight=1, ];
E: 68 72 [weight=4, ];
E: 68 73 [weight=1, ];
E: 68 75 [weight=1, ];
E: 68 76 [weight=3, ];
E: 68 78 [weight=3, ];
E: 68 81 [weight=6, ];
E: 68 113 [weight=1, ];
E: 68 150 [weight=1, ];
E: 68 156 [weight=4, ];
E: 69 70 [weight=1, ];
E: 69 71 [weight=3, ];
E: 69 77 [weight=3, ];
E: 69 81 [weight=3, ];
E: 69 156 [weight=5, ];
E: 70 72 [weight=4, ];
E: 70 78 [weight=4, ];
E: 70 81 [weight=21, ];
E: 70 108 [weight=1, ];
E: 70 110 [weight=2, ];
E: 70 147 [weight=1, ];
E: 70 156 [weight=12, ];
E: 71 72 [weight=1, ];
E: 71 81 [weight=2, ];
E: 72 81 [weight=6, ];
E: 72 147 [weight=1, ];
E: 72 156 [weight=1, ];
E: 73 74 [weight=1, ];
E: 73 75 [weight=1, ];
E: 73 77 [weight=1, ];
E: 73 81 [weight=2, ];
E: 74 76 [weight=3, ];
E: 74 78 [weight=3, ];
E: 74 81 [weight=16, ];
E: 74 109 [weight=1, ];
E: 74 110 [weight=1, ];
E: 74 150 [weight=1, ];
E: 74 156 [weight=2, ];
E: 75 76 [weight=1, ];
E: 75 81 [weight=1, ];
E: 76 81 [weight=4, ];
E: 76 150 [weight=1, ];
E: 77 78 [weight=1, ];
E: 77 81 [weight=2, ];
E: 78 81 [weight=7, ];
E: 78 110 [weight=1, ];
E: 78 156 [weight=2, ];
E: 79 80 [weight=2, ];
E: 79 81 [weight=4, ];
E: 80 81 [weight=1, ];
E: 81 156 [weight=1, ];
E: 82 83 [weight=1, ];
E: 82 84 [weight=1, ];
E: 82 93 [weight=1, ];
E: 82 94 [weight=1, ];
E: 82 107 [weight=2, ];
E: 82 156 [weight=2, ];
E: 83 85 [weight=1, ];
E: 83 86 [weight=1, ];
E: 83 93 [weight=10, ];
E: 83 94 [weight=11, ];
E: 83 100 [weight=1, ];
E: 83 148 [weight=2, ];
E: 83 156 [weight=21, ];
E: 84 91 [weight=1, ];
E: 84 92 [weight=1, ];
E: 84 93 [weight=8, ];
E: 84 94 [weight=13, ];
E: 84 104 [weight=2, ];
E: 84 106 [weight=1, ];
E: 84 107 [weight=30, ];
E: 84 147 [weight=7, ];
E: 84 150 [weight=6, ];
E: 84 156 [weight=20, ];
E: 85 93 [weight=4, ];
E: 85 102 [weight=4, ];
E: 85 147 [weight=1, ];
E: 85 149 [weight=5, ];
E: 85 156 [weight=6, ];
E: 86 88 [weight=1, ];
E: 86 93 [weight=29, ];
E: 86 100 [weight=23, ];
E: 86 103 [weight=1, ];
E: 86 104 [weight=10, ];
E: 86 107 [weight=9, ];
E: 86 147 [weight=5, ];
E: 86 148 [weight=9, ];
E: 86 156 [weight=19, ];
E: 87 93 [weight=1, ];
E: 87 106 [weight=1, ];
E: 87 150 [weight=2, ];
E: 87 156 [weight=2, ];
E: 88 93 [weight=9, ];
E: 88 104 [weight=2, ];
E: 88 107 [weight=4, ];
E: 88 147 [weight=5, ];
E: 88 156 [weight=8, ];
E: 89 94 [weight=1, ];
E: 89 102 [weight=2, ];
E: 89 107 [weight=2, ];
E: 89 149 [weight=1, ];
E: 90 94 [weight=3, ];
E: 90 100 [weight=2, ];
E: 90 107 [weight=2, ];
E: 90 148 [weight=1, ];
E: 90 156 [weight=2, ];
E: 91 94 [weight=2, ];
E: 91 106 [weight=2, ];
E: 91 107 [weight=1, ];
E: 91 142 [weight=1, ];
E: 91 150 [weight=2, ];
E: 92 94 [weight=4, ];
E: 92 104 [weight=2, ];
E: 92 107 [weight=1, ];
E: 92 143 [weight=1, ];
E: 92 147 [weight=2, ];
E: 92 156 [weight=2, ];
E: 93 107 [weight=5, ];
E: 93 147 [weight=1, ];
E: 93 150 [weight=1, ];
E: 93 156 [weight=5, ];
E: 94 95 [weight=1, ];
E: 94 107 [weight=1, ];
E: 94 155 [weight=1, ];
E: 94 156 [weight=2, ];
E: 95 155 [weight=7, ];
E: 95 156 [weight=10, ];
E: 96 98 [weight=13, ];
E: 96 103 [weight=7, ];
E: 96 104 [weight=34, ];
E: 96 106 [weight=2, ];
E: 96 107 [weight=19, ];
E: 97 98 [weight=2, ];
E: 97 104 [weight=2, ];
E: 97 105 [weight=3, ];
E: 97 106 [weight=24, ];
E: 97 107 [weight=15, ];
E: 98 103 [weight=1, ];
E: 98 104 [weight=3, ];
E: 98 105 [weight=1, ];
E: 98 106 [weight=3, ];
E: 98 107 [weight=12, ];
E: 99 100 [weight=2, ];
E: 99 107 [weight=3, ];
E: 100 107 [weight=3, ];
E: 101 102 [weight=2, ];
E: 101 107 [weight=1, ];
E: 102 107 [weight=1, ];
E: 103 104 [weight=2, ];
E: 103 107 [weight=3, ];
E: 104 107 [weight=3, ];
E: 105 106 [weight=2, ];
E: 105 107 [weight=1, ];
E: 106 107 [weight=1, ];
E: 108 110 [weight=2, ];
E: 108 111 [weight=1, ];
E: 108 147 [weight=1, ];
E: 108 156 [weight=5, ];
E: 109 110 [weight=1, ];
E: 109 112 [weight=1, ];
E: 109 150 [weight=1, ];
E: 109 156 [weight=3, ];
E: 110 113 [weight=1, ];
E: 110 156 [weight=3, ];
E: 111 83 [weight=5, ];
E: 111 88 [weight=22, ];
E: 111 92 [weight=1, ];
E: 111 93 [weight=186, ];
E: 111 94 [weight=95, ];
E: 111 96 [weight=1, ];
E: 111 98 [weight=14, ];
E: 111 104 [weight=64, ];
E: 111 107 [weight=38, ];
E: 111 113 [weight=4, ];
E: 111 147 [weight=75, ];
E: 111 150 [weight=2, ];
E: 111 153 [weight=1, ];
E: 111 156 [weight=84, ];
E: 112 83 [weight=1, ];
E: 112 88 [weight=3, ];
E: 112 91 [weight=1, ];
E: 112 93 [weight=37, ];
E: 112 94 [weight=3, ];
E: 112 98 [weight=3, ];
E: 112 104 [weight=6, ];
E: 112 105 [weight=3, ];
E: 112 106 [weight=30, ];
E: 112 107 [weight=21, ];
E: 112 113 [weight=2, ];
E: 112 147 [weight=9, ];
E: 112 150 [weight=21, ];
E: 112 153 [weight=1, ];
E: 112 156 [weight=23, ];
E: 113 83 [weight=1, ];
E: 113 88 [weight=1, ];
E: 113 93 [weight=8, ];
E: 113 94 [weight=2, ];
E: 113 98 [weight=1, ];
E: 113 104 [weight=2, ];
E: 113 107 [weight=2, ];
E: 113 147 [weight=4, ];
E: 113 150 [weight=2, ];
E: 113 156 [weight=9, ];
E: 114 147 [weight=13, ];
E: 114 148 [weight=31, ];
E: 114 149 [weight=17, ];
E: 114 150 [weight=9, ];
E: 114 156 [weight=35, ];
E: 115 116 [weight=1, ];
E: 115 150 [weight=1, ];
E: 115 156 [weight=3, ];
E: 116 147 [weight=1, ];
E: 116 150 [weight=1, ];
E: 116 156 [weight=9, ];
E: 117 118 [weight=16, ];
E: 117 120 [weight=16, ];
E: 117 156 [weight=12, ];
E: 118 156 [weight=8, ];
E: 119 120 [weight=3, ];
E: 119 156 [weight=4, ];
E: 120 156 [weight=8, ];
E: 121 127 [weight=1, ];
E: 121 156 [weight=22, ];
E: 122 123 [weight=1, ];
E: 122 129 [weight=1, ];
E: 122 156 [weight=10, ];
E: 123 124 [weight=2, ];
E: 123 125 [weight=2, ];
E: 123 126 [weight=1, ];
E: 123 127 [weight=3, ];
E: 123 129 [weight=43, ];
E: 123 153 [weight=1, ];
E: 123 156 [weight=348, ];
E: 124 130 [weight=10, ];
E: 124 135 [weight=2, ];
E: 124 136 [weight=6, ];
E: 124 156 [weight=54, ];
E: 125 130 [weight=9, ];
E: 125 135 [weight=2, ];
E: 125 136 [weight=2, ];
E: 125 156 [weight=31, ];
E: 126 127 [weight=1, ];
E: 126 128 [weight=1, ];
E: 126 129 [weight=1, ];
E: 126 156 [weight=7, ];
E: 127 128 [weight=1, ];
E: 127 156 [weight=7, ];
E: 128 129 [weight=13, ];
E: 128 131 [weight=1, ];
E: 128 132 [weight=1, ];
E: 128 133 [weight=10, ];
E: 128 134 [weight=4, ];
E: 128 135 [weight=12, ];
E: 128 136 [weight=74, ];
E: 128 156 [weight=1410, ];
E: 129 130 [weight=1, ];
E: 129 156 [weight=8, ];
E: 130 136 [weight=1, ];
E: 130 156 [weight=13, ];
E: 131 132 [weight=2, ];
E: 131 133 [weight=2, ];
E: 131 134 [weight=2, ];
E: 131 135 [weight=2, ];
E: 131 136 [weight=26, ];
E: 131 153 [weight=1, ];
E: 131 156 [weight=96, ];
E: 132 136 [weight=2, ];
E: 132 156 [weight=9, ];
E: 133 136 [weight=14, ];
E: 133 156 [weight=192, ];
E: 134 136 [weight=13, ];
E: 134 156 [weight=54, ];
E: 135 136 [weight=13, ];
E: 135 156 [weight=62, ];
E: 136 140 [weight=3, ];
E: 136 156 [weight=32, ];
E: 137 140 [weight=2, ];
E: 137 156 [weight=10, ];
E: 138 140 [weight=2, ];
E: 138 156 [weight=2, ];
E: 139 140 [weight=2, ];
E: 139 156 [weight=2, ];
E: 140 156 [weight=2, ];
E: 141 149 [weight=1, ];
E: 141 155 [weight=1, ];
E: 142 150 [weight=3, ];
E: 142 155 [weight=3, ];
E: 143 144 [weight=1, ];
E: 143 145 [weight=1, ];
E: 143 147 [weight=11, ];
E: 143 148 [weight=3, ];
E: 143 155 [weight=18, ];
E: 143 156 [weight=14, ];
E: 144 148 [weight=1, ];
E: 144 155 [weight=3, ];
E: 144 156 [weight=2, ];
E: 145 147 [weight=3, ];
E: 145 148 [weight=3, ];
E: 145 156 [weight=4, ];
E: 146 147 [weight=40, ];
E: 146 153 [weight=1, ];
E: 146 156 [weight=118, ];
E: 147 156 [weight=11, ];
E: 148 156 [weight=4, ];
E: 149 156 [weight=1, ];
E: 150 156 [weight=4, ];
E: 151 156 [weight=5, ];
E: 152 156 [weight=1, ];
E: 153 156 [weight=6, ];
E: 154 156 [weight=3, ];
E: 155 156 [weight=4, ];
